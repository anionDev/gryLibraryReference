### YamlMime:ManagedReference
items:
- uid: GRYLibrary.Core.Semaphore
  commentId: T:GRYLibrary.Core.Semaphore
  id: Semaphore
  parent: GRYLibrary.Core
  children:
  - GRYLibrary.Core.Semaphore.#ctor(System.String)
  - GRYLibrary.Core.Semaphore.Decrement
  - GRYLibrary.Core.Semaphore.Equals(System.Object)
  - GRYLibrary.Core.Semaphore.GetHashCode
  - GRYLibrary.Core.Semaphore.Increment
  - GRYLibrary.Core.Semaphore.Name
  - GRYLibrary.Core.Semaphore.Value
  langs:
  - csharp
  - vb
  name: Semaphore
  nameWithType: Semaphore
  fullName: GRYLibrary.Core.Semaphore
  type: Class
  source:
    id: Semaphore
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Semaphore.cs
    startLine: 7
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  summary: "\nRepresents a threadsafe semaphore\n"
  example: []
  syntax:
    content: 'public sealed class Semaphore : Property<long>, IProperty'
    content.vb: >-
      Public NotInheritable Class Semaphore
          Inherits
           Property  (Of Long)  Implements IProperty
  inheritance:
  - System.Object
  - GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}
  - GRYLibrary.Core.Property{System.Int64}
  implements:
  - GRYLibrary.Core.IProperty
  inheritedMembers:
  - GRYLibrary.Core.Property{System.Int64}.AllowNullAsValue
  - GRYLibrary.Core.Property{System.Int64}.AddValuesToHistory
  - GRYLibrary.Core.Property{System.Int64}.NotifyAboutChanges
  - GRYLibrary.Core.Property{System.Int64}.LockEnabled
  - GRYLibrary.Core.Property{System.Int64}.Unset
  - GRYLibrary.Core.Property{System.Int64}.LockObject
  - GRYLibrary.Core.Property{System.Int64}.HasValue
  - GRYLibrary.Core.Property{System.Int64}.InitialValue
  - GRYLibrary.Core.Property{System.Int64}.History
  - GRYLibrary.Core.Property{System.Int64}.UnsetValue
  - GRYLibrary.Core.Property{System.Int64}.PropertyName
  - GRYLibrary.Core.Property{System.Int64}.PropertyValueType
  - GRYLibrary.Core.Property{System.Int64}.LastWriteTime
  - GRYLibrary.Core.Property{System.Int64}.ResetToInitialValue
  - GRYLibrary.Core.Property{System.Int64}.ResetHistory
  - GRYLibrary.Core.Property{System.Int64}.EqualsValue(GRYLibrary.Core.Property{System.Int64})
  - GRYLibrary.Core.Property{System.Int64}.EqualsValue(System.Int64)
  - GRYLibrary.Core.Property{System.Int64}.GetValueByTimestamp(System.DateTime)
  - GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Register(GRYLibrary.Core.Event.IObserver{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  - GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Deregister(GRYLibrary.Core.Event.IObserver{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  - GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Initialize(System.Runtime.Serialization.StreamingContext)
  - GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.LogObject
  - GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Notify(GRYLibrary.Core.Event.Argument{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  - System.Object.GRYLibrary.Core.Utilities.ToDynamic
  - GRYLibrary.Core.Semaphore.GRYLibrary.Core.Utilities.DeepClone``1
  - System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: GRYLibrary.Core.Semaphore.Name
  commentId: P:GRYLibrary.Core.Semaphore.Name
  id: Name
  parent: GRYLibrary.Core.Semaphore
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Semaphore.Name
  fullName: GRYLibrary.Core.Semaphore.Name
  type: Property
  source:
    id: Name
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Semaphore.cs
    startLine: 9
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: GRYLibrary.Core.Semaphore.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Semaphore.#ctor(System.String)
  commentId: M:GRYLibrary.Core.Semaphore.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: GRYLibrary.Core.Semaphore
  langs:
  - csharp
  - vb
  name: Semaphore(String)
  nameWithType: Semaphore.Semaphore(String)
  fullName: GRYLibrary.Core.Semaphore.Semaphore(System.String)
  type: Constructor
  source:
    id: .ctor
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Semaphore.cs
    startLine: 10
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public Semaphore(string propertyName = "")
    parameters:
    - id: propertyName
      type: System.String
    content.vb: Public Sub New(propertyName As String = "")
  overload: GRYLibrary.Core.Semaphore.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Semaphore.Value
  commentId: P:GRYLibrary.Core.Semaphore.Value
  id: Value
  parent: GRYLibrary.Core.Semaphore
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Semaphore.Value
  fullName: GRYLibrary.Core.Semaphore.Value
  type: Property
  source:
    id: Value
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Semaphore.cs
    startLine: 14
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public override long Value { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides Property Value As Long
  overridden: GRYLibrary.Core.Property{System.Int64}.Value
  overload: GRYLibrary.Core.Semaphore.Value*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: GRYLibrary.Core.Semaphore.Increment
  commentId: M:GRYLibrary.Core.Semaphore.Increment
  id: Increment
  parent: GRYLibrary.Core.Semaphore
  langs:
  - csharp
  - vb
  name: Increment()
  nameWithType: Semaphore.Increment()
  fullName: GRYLibrary.Core.Semaphore.Increment()
  type: Method
  source:
    id: Increment
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Semaphore.cs
    startLine: 15
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public void Increment()
    content.vb: Public Sub Increment
  overload: GRYLibrary.Core.Semaphore.Increment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Semaphore.Decrement
  commentId: M:GRYLibrary.Core.Semaphore.Decrement
  id: Decrement
  parent: GRYLibrary.Core.Semaphore
  langs:
  - csharp
  - vb
  name: Decrement()
  nameWithType: Semaphore.Decrement()
  fullName: GRYLibrary.Core.Semaphore.Decrement()
  type: Method
  source:
    id: Decrement
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Semaphore.cs
    startLine: 19
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public void Decrement()
    content.vb: Public Sub Decrement
  overload: GRYLibrary.Core.Semaphore.Decrement*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Semaphore.Equals(System.Object)
  commentId: M:GRYLibrary.Core.Semaphore.Equals(System.Object)
  id: Equals(System.Object)
  parent: GRYLibrary.Core.Semaphore
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Semaphore.Equals(Object)
  fullName: GRYLibrary.Core.Semaphore.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Semaphore.cs
    startLine: 27
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public override bool Equals(object object)
    parameters:
    - id: object
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(object As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GRYLibrary.Core.Semaphore.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GRYLibrary.Core.Semaphore.GetHashCode
  commentId: M:GRYLibrary.Core.Semaphore.GetHashCode
  id: GetHashCode
  parent: GRYLibrary.Core.Semaphore
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Semaphore.GetHashCode()
  fullName: GRYLibrary.Core.Semaphore.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Semaphore.cs
    startLine: 39
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: GRYLibrary.Core.Semaphore.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: GRYLibrary.Core
  commentId: N:GRYLibrary.Core
  name: GRYLibrary.Core
  nameWithType: GRYLibrary.Core
  fullName: GRYLibrary.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}
  commentId: T:GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}
  parent: GRYLibrary.Core.Event
  definition: GRYLibrary.Core.Event.EventSender`2
  name: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>
  nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>
  fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>
  nameWithType.vb: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64))
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64))
  name.vb: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64))
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2
    name: EventSender
    nameWithType: EventSender
    fullName: GRYLibrary.Core.Event.EventSender
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.PropertyChangedEvengArgument`1
    name: PropertyChangedEvengArgument
    nameWithType: PropertyChangedEvengArgument
    fullName: GRYLibrary.Core.PropertyChangedEvengArgument
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2
    name: EventSender
    nameWithType: EventSender
    fullName: GRYLibrary.Core.Event.EventSender
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.PropertyChangedEvengArgument`1
    name: PropertyChangedEvengArgument
    nameWithType: PropertyChangedEvengArgument
    fullName: GRYLibrary.Core.PropertyChangedEvengArgument
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property{System.Int64}
  commentId: T:GRYLibrary.Core.Property{System.Int64}
  parent: GRYLibrary.Core
  definition: GRYLibrary.Core.Property`1
  name: Property<Int64>
  nameWithType: Property<Int64>
  fullName: GRYLibrary.Core.Property<System.Int64>
  nameWithType.vb: Property(Of Int64)
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64)
  name.vb: Property(Of Int64)
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.IProperty
  commentId: T:GRYLibrary.Core.IProperty
  parent: GRYLibrary.Core
  name: IProperty
  nameWithType: IProperty
  fullName: GRYLibrary.Core.IProperty
- uid: GRYLibrary.Core.Property{System.Int64}.AllowNullAsValue
  commentId: F:GRYLibrary.Core.Property{System.Int64}.AllowNullAsValue
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.AllowNullAsValue
  name: AllowNullAsValue
  nameWithType: Property<Int64>.AllowNullAsValue
  fullName: GRYLibrary.Core.Property<System.Int64>.AllowNullAsValue
  nameWithType.vb: Property(Of Int64).AllowNullAsValue
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).AllowNullAsValue
- uid: GRYLibrary.Core.Property{System.Int64}.AddValuesToHistory
  commentId: F:GRYLibrary.Core.Property{System.Int64}.AddValuesToHistory
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.AddValuesToHistory
  name: AddValuesToHistory
  nameWithType: Property<Int64>.AddValuesToHistory
  fullName: GRYLibrary.Core.Property<System.Int64>.AddValuesToHistory
  nameWithType.vb: Property(Of Int64).AddValuesToHistory
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).AddValuesToHistory
- uid: GRYLibrary.Core.Property{System.Int64}.NotifyAboutChanges
  commentId: F:GRYLibrary.Core.Property{System.Int64}.NotifyAboutChanges
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.NotifyAboutChanges
  name: NotifyAboutChanges
  nameWithType: Property<Int64>.NotifyAboutChanges
  fullName: GRYLibrary.Core.Property<System.Int64>.NotifyAboutChanges
  nameWithType.vb: Property(Of Int64).NotifyAboutChanges
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).NotifyAboutChanges
- uid: GRYLibrary.Core.Property{System.Int64}.LockEnabled
  commentId: F:GRYLibrary.Core.Property{System.Int64}.LockEnabled
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.LockEnabled
  name: LockEnabled
  nameWithType: Property<Int64>.LockEnabled
  fullName: GRYLibrary.Core.Property<System.Int64>.LockEnabled
  nameWithType.vb: Property(Of Int64).LockEnabled
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).LockEnabled
- uid: GRYLibrary.Core.Property{System.Int64}.Unset
  commentId: F:GRYLibrary.Core.Property{System.Int64}.Unset
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.Unset
  name: Unset
  nameWithType: Property<Int64>.Unset
  fullName: GRYLibrary.Core.Property<System.Int64>.Unset
  nameWithType.vb: Property(Of Int64).Unset
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).Unset
- uid: GRYLibrary.Core.Property{System.Int64}.LockObject
  commentId: F:GRYLibrary.Core.Property{System.Int64}.LockObject
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.LockObject
  name: LockObject
  nameWithType: Property<Int64>.LockObject
  fullName: GRYLibrary.Core.Property<System.Int64>.LockObject
  nameWithType.vb: Property(Of Int64).LockObject
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).LockObject
- uid: GRYLibrary.Core.Property{System.Int64}.HasValue
  commentId: P:GRYLibrary.Core.Property{System.Int64}.HasValue
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.HasValue
  name: HasValue
  nameWithType: Property<Int64>.HasValue
  fullName: GRYLibrary.Core.Property<System.Int64>.HasValue
  nameWithType.vb: Property(Of Int64).HasValue
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).HasValue
- uid: GRYLibrary.Core.Property{System.Int64}.InitialValue
  commentId: P:GRYLibrary.Core.Property{System.Int64}.InitialValue
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.InitialValue
  name: InitialValue
  nameWithType: Property<Int64>.InitialValue
  fullName: GRYLibrary.Core.Property<System.Int64>.InitialValue
  nameWithType.vb: Property(Of Int64).InitialValue
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).InitialValue
- uid: GRYLibrary.Core.Property{System.Int64}.History
  commentId: P:GRYLibrary.Core.Property{System.Int64}.History
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.History
  name: History
  nameWithType: Property<Int64>.History
  fullName: GRYLibrary.Core.Property<System.Int64>.History
  nameWithType.vb: Property(Of Int64).History
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).History
- uid: GRYLibrary.Core.Property{System.Int64}.UnsetValue
  commentId: M:GRYLibrary.Core.Property{System.Int64}.UnsetValue
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.UnsetValue
  name: UnsetValue()
  nameWithType: Property<Int64>.UnsetValue()
  fullName: GRYLibrary.Core.Property<System.Int64>.UnsetValue()
  nameWithType.vb: Property(Of Int64).UnsetValue()
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).UnsetValue()
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.UnsetValue
    name: UnsetValue
    nameWithType: Property<Int64>.UnsetValue
    fullName: GRYLibrary.Core.Property<System.Int64>.UnsetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.UnsetValue
    name: UnsetValue
    nameWithType: Property(Of Int64).UnsetValue
    fullName: GRYLibrary.Core.Property(Of System.Int64).UnsetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property{System.Int64}.PropertyName
  commentId: P:GRYLibrary.Core.Property{System.Int64}.PropertyName
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.PropertyName
  name: PropertyName
  nameWithType: Property<Int64>.PropertyName
  fullName: GRYLibrary.Core.Property<System.Int64>.PropertyName
  nameWithType.vb: Property(Of Int64).PropertyName
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).PropertyName
- uid: GRYLibrary.Core.Property{System.Int64}.PropertyValueType
  commentId: P:GRYLibrary.Core.Property{System.Int64}.PropertyValueType
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.PropertyValueType
  name: PropertyValueType
  nameWithType: Property<Int64>.PropertyValueType
  fullName: GRYLibrary.Core.Property<System.Int64>.PropertyValueType
  nameWithType.vb: Property(Of Int64).PropertyValueType
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).PropertyValueType
- uid: GRYLibrary.Core.Property{System.Int64}.LastWriteTime
  commentId: P:GRYLibrary.Core.Property{System.Int64}.LastWriteTime
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.LastWriteTime
  name: LastWriteTime
  nameWithType: Property<Int64>.LastWriteTime
  fullName: GRYLibrary.Core.Property<System.Int64>.LastWriteTime
  nameWithType.vb: Property(Of Int64).LastWriteTime
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).LastWriteTime
- uid: GRYLibrary.Core.Property{System.Int64}.ResetToInitialValue
  commentId: M:GRYLibrary.Core.Property{System.Int64}.ResetToInitialValue
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.ResetToInitialValue
  name: ResetToInitialValue()
  nameWithType: Property<Int64>.ResetToInitialValue()
  fullName: GRYLibrary.Core.Property<System.Int64>.ResetToInitialValue()
  nameWithType.vb: Property(Of Int64).ResetToInitialValue()
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).ResetToInitialValue()
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.ResetToInitialValue
    name: ResetToInitialValue
    nameWithType: Property<Int64>.ResetToInitialValue
    fullName: GRYLibrary.Core.Property<System.Int64>.ResetToInitialValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.ResetToInitialValue
    name: ResetToInitialValue
    nameWithType: Property(Of Int64).ResetToInitialValue
    fullName: GRYLibrary.Core.Property(Of System.Int64).ResetToInitialValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property{System.Int64}.ResetHistory
  commentId: M:GRYLibrary.Core.Property{System.Int64}.ResetHistory
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.ResetHistory
  name: ResetHistory()
  nameWithType: Property<Int64>.ResetHistory()
  fullName: GRYLibrary.Core.Property<System.Int64>.ResetHistory()
  nameWithType.vb: Property(Of Int64).ResetHistory()
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).ResetHistory()
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.ResetHistory
    name: ResetHistory
    nameWithType: Property<Int64>.ResetHistory
    fullName: GRYLibrary.Core.Property<System.Int64>.ResetHistory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.ResetHistory
    name: ResetHistory
    nameWithType: Property(Of Int64).ResetHistory
    fullName: GRYLibrary.Core.Property(Of System.Int64).ResetHistory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property{System.Int64}.EqualsValue(GRYLibrary.Core.Property{System.Int64})
  commentId: M:GRYLibrary.Core.Property{System.Int64}.EqualsValue(GRYLibrary.Core.Property{System.Int64})
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.EqualsValue(GRYLibrary.Core.Property{`0})
  name: EqualsValue(Property<Int64>)
  nameWithType: Property<Int64>.EqualsValue(Property<Int64>)
  fullName: GRYLibrary.Core.Property<System.Int64>.EqualsValue(GRYLibrary.Core.Property<System.Int64>)
  nameWithType.vb: Property(Of Int64).EqualsValue(Property(Of Int64))
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).EqualsValue(GRYLibrary.Core.Property(Of System.Int64))
  name.vb: EqualsValue(Property(Of Int64))
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.EqualsValue(GRYLibrary.Core.Property{`0})
    name: EqualsValue
    nameWithType: Property<Int64>.EqualsValue
    fullName: GRYLibrary.Core.Property<System.Int64>.EqualsValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.EqualsValue(GRYLibrary.Core.Property{`0})
    name: EqualsValue
    nameWithType: Property(Of Int64).EqualsValue
    fullName: GRYLibrary.Core.Property(Of System.Int64).EqualsValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property{System.Int64}.EqualsValue(System.Int64)
  commentId: M:GRYLibrary.Core.Property{System.Int64}.EqualsValue(System.Int64)
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.EqualsValue(`0)
  name: EqualsValue(Int64)
  nameWithType: Property<Int64>.EqualsValue(Int64)
  fullName: GRYLibrary.Core.Property<System.Int64>.EqualsValue(System.Int64)
  nameWithType.vb: Property(Of Int64).EqualsValue(Int64)
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).EqualsValue(System.Int64)
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.EqualsValue(`0)
    name: EqualsValue
    nameWithType: Property<Int64>.EqualsValue
    fullName: GRYLibrary.Core.Property<System.Int64>.EqualsValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.EqualsValue(`0)
    name: EqualsValue
    nameWithType: Property(Of Int64).EqualsValue
    fullName: GRYLibrary.Core.Property(Of System.Int64).EqualsValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property{System.Int64}.GetValueByTimestamp(System.DateTime)
  commentId: M:GRYLibrary.Core.Property{System.Int64}.GetValueByTimestamp(System.DateTime)
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.GetValueByTimestamp(System.DateTime)
  name: GetValueByTimestamp(DateTime)
  nameWithType: Property<Int64>.GetValueByTimestamp(DateTime)
  fullName: GRYLibrary.Core.Property<System.Int64>.GetValueByTimestamp(System.DateTime)
  nameWithType.vb: Property(Of Int64).GetValueByTimestamp(DateTime)
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).GetValueByTimestamp(System.DateTime)
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.GetValueByTimestamp(System.DateTime)
    name: GetValueByTimestamp
    nameWithType: Property<Int64>.GetValueByTimestamp
    fullName: GRYLibrary.Core.Property<System.Int64>.GetValueByTimestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.GetValueByTimestamp(System.DateTime)
    name: GetValueByTimestamp
    nameWithType: Property(Of Int64).GetValueByTimestamp
    fullName: GRYLibrary.Core.Property(Of System.Int64).GetValueByTimestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Register(GRYLibrary.Core.Event.IObserver{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  commentId: M:GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Register(GRYLibrary.Core.Event.IObserver{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  parent: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}
  definition: GRYLibrary.Core.Event.EventSender`2.Register(GRYLibrary.Core.Event.IObserver{`0,`1})
  name: Register(IObserver<Property<Int64>, PropertyChangedEvengArgument<Int64>>)
  nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.Register(IObserver<Property<Int64>, PropertyChangedEvengArgument<Int64>>)
  fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.Register(GRYLibrary.Core.Event.IObserver<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>)
  nameWithType.vb: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).Register(IObserver(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)))
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).Register(GRYLibrary.Core.Event.IObserver(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)))
  name.vb: Register(IObserver(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)))
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2.Register(GRYLibrary.Core.Event.IObserver{`0,`1})
    name: Register
    nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.Register
    fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.IObserver`2
    name: IObserver
    nameWithType: IObserver
    fullName: GRYLibrary.Core.Event.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.PropertyChangedEvengArgument`1
    name: PropertyChangedEvengArgument
    nameWithType: PropertyChangedEvengArgument
    fullName: GRYLibrary.Core.PropertyChangedEvengArgument
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2.Register(GRYLibrary.Core.Event.IObserver{`0,`1})
    name: Register
    nameWithType: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).Register
    fullName: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.IObserver`2
    name: IObserver
    nameWithType: IObserver
    fullName: GRYLibrary.Core.Event.IObserver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.PropertyChangedEvengArgument`1
    name: PropertyChangedEvengArgument
    nameWithType: PropertyChangedEvengArgument
    fullName: GRYLibrary.Core.PropertyChangedEvengArgument
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Deregister(GRYLibrary.Core.Event.IObserver{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  commentId: M:GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Deregister(GRYLibrary.Core.Event.IObserver{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  parent: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}
  definition: GRYLibrary.Core.Event.EventSender`2.Deregister(GRYLibrary.Core.Event.IObserver{`0,`1})
  name: Deregister(IObserver<Property<Int64>, PropertyChangedEvengArgument<Int64>>)
  nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.Deregister(IObserver<Property<Int64>, PropertyChangedEvengArgument<Int64>>)
  fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.Deregister(GRYLibrary.Core.Event.IObserver<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>)
  nameWithType.vb: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).Deregister(IObserver(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)))
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).Deregister(GRYLibrary.Core.Event.IObserver(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)))
  name.vb: Deregister(IObserver(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)))
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2.Deregister(GRYLibrary.Core.Event.IObserver{`0,`1})
    name: Deregister
    nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.Deregister
    fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.Deregister
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.IObserver`2
    name: IObserver
    nameWithType: IObserver
    fullName: GRYLibrary.Core.Event.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.PropertyChangedEvengArgument`1
    name: PropertyChangedEvengArgument
    nameWithType: PropertyChangedEvengArgument
    fullName: GRYLibrary.Core.PropertyChangedEvengArgument
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2.Deregister(GRYLibrary.Core.Event.IObserver{`0,`1})
    name: Deregister
    nameWithType: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).Deregister
    fullName: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).Deregister
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.IObserver`2
    name: IObserver
    nameWithType: IObserver
    fullName: GRYLibrary.Core.Event.IObserver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.PropertyChangedEvengArgument`1
    name: PropertyChangedEvengArgument
    nameWithType: PropertyChangedEvengArgument
    fullName: GRYLibrary.Core.PropertyChangedEvengArgument
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Initialize(System.Runtime.Serialization.StreamingContext)
  commentId: M:GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Initialize(System.Runtime.Serialization.StreamingContext)
  parent: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}
  definition: GRYLibrary.Core.Event.EventSender`2.Initialize(System.Runtime.Serialization.StreamingContext)
  name: Initialize(StreamingContext)
  nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.Initialize(StreamingContext)
  fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.Initialize(System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).Initialize(StreamingContext)
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).Initialize(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2.Initialize(System.Runtime.Serialization.StreamingContext)
    name: Initialize
    nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.Initialize
    fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2.Initialize(System.Runtime.Serialization.StreamingContext)
    name: Initialize
    nameWithType: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).Initialize
    fullName: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.LogObject
  commentId: P:GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.LogObject
  parent: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}
  definition: GRYLibrary.Core.Event.EventSender`2.LogObject
  name: LogObject
  nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.LogObject
  fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.LogObject
  nameWithType.vb: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).LogObject
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).LogObject
- uid: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Notify(GRYLibrary.Core.Event.Argument{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  commentId: M:GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}.Notify(GRYLibrary.Core.Event.Argument{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}})
  parent: GRYLibrary.Core.Event.EventSender{GRYLibrary.Core.Property{System.Int64},GRYLibrary.Core.PropertyChangedEvengArgument{System.Int64}}
  definition: GRYLibrary.Core.Event.EventSender`2.Notify(GRYLibrary.Core.Event.Argument{`0,`1})
  name: Notify(Argument<Property<Int64>, PropertyChangedEvengArgument<Int64>>)
  nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.Notify(Argument<Property<Int64>, PropertyChangedEvengArgument<Int64>>)
  fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.Notify(GRYLibrary.Core.Event.Argument<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>)
  nameWithType.vb: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).Notify(Argument(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)))
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).Notify(GRYLibrary.Core.Event.Argument(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)))
  name.vb: Notify(Argument(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)))
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2.Notify(GRYLibrary.Core.Event.Argument{`0,`1})
    name: Notify
    nameWithType: EventSender<Property<Int64>, PropertyChangedEvengArgument<Int64>>.Notify
    fullName: GRYLibrary.Core.Event.EventSender<GRYLibrary.Core.Property<System.Int64>, GRYLibrary.Core.PropertyChangedEvengArgument<System.Int64>>.Notify
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.Argument`2
    name: Argument
    nameWithType: Argument
    fullName: GRYLibrary.Core.Event.Argument
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.PropertyChangedEvengArgument`1
    name: PropertyChangedEvengArgument
    nameWithType: PropertyChangedEvengArgument
    fullName: GRYLibrary.Core.PropertyChangedEvengArgument
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2.Notify(GRYLibrary.Core.Event.Argument{`0,`1})
    name: Notify
    nameWithType: EventSender(Of Property(Of Int64), PropertyChangedEvengArgument(Of Int64)).Notify
    fullName: GRYLibrary.Core.Event.EventSender(Of GRYLibrary.Core.Property(Of System.Int64), GRYLibrary.Core.PropertyChangedEvengArgument(Of System.Int64)).Notify
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.Argument`2
    name: Argument
    nameWithType: Argument
    fullName: GRYLibrary.Core.Event.Argument
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.PropertyChangedEvengArgument`1
    name: PropertyChangedEvengArgument
    nameWithType: PropertyChangedEvengArgument
    fullName: GRYLibrary.Core.PropertyChangedEvengArgument
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  name: ObjectIsEnumerable()
  nameWithType: Utilities.ObjectIsEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  name: ObjectIsSet()
  nameWithType: Utilities.ObjectIsSet()
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  name: ObjectIsList()
  nameWithType: Utilities.ObjectIsList()
  fullName: GRYLibrary.Core.Utilities.ObjectIsList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  name: ObjectIsDictionary()
  nameWithType: Utilities.ObjectIsDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  name: ObjectIsKeyValuePair()
  nameWithType: Utilities.ObjectIsKeyValuePair()
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  name: ObjectIsTuple()
  nameWithType: Utilities.ObjectIsTuple()
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  name: ObjectToEnumerable()
  nameWithType: Utilities.ObjectToEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  name: ObjectToEnumerable<T>()
  nameWithType: Utilities.ObjectToEnumerable<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>()
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)()
  name.vb: ObjectToEnumerable(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  name: ObjectToSet<T>()
  nameWithType: Utilities.ObjectToSet<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>()
  nameWithType.vb: Utilities.ObjectToSet(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)()
  name.vb: ObjectToSet(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  name: ObjectToList()
  nameWithType: Utilities.ObjectToList()
  fullName: GRYLibrary.Core.Utilities.ObjectToList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  name: ObjectToList<T>()
  nameWithType: Utilities.ObjectToList<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>()
  nameWithType.vb: Utilities.ObjectToList(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)()
  name.vb: ObjectToList(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  name: ObjectToDictionary()
  nameWithType: Utilities.ObjectToDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  name: ObjectToDictionary<TKey, TValue>()
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)()
  name.vb: ObjectToDictionary(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  name: ObjectToKeyValuePair<TKey, TValue>()
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  name: ObjectToTuple<T1, T2>()
  nameWithType: Utilities.ObjectToTuple<T1, T2>()
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>()
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)()
  name.vb: ObjectToTuple(Of T1, T2)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ToDynamic
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: Utilities.ToDynamic()
  fullName: GRYLibrary.Core.Utilities.ToDynamic()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Semaphore.GRYLibrary.Core.Utilities.DeepClone``1
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<Semaphore>()
  nameWithType: Utilities.DeepClone<Semaphore>()
  fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Semaphore>()
  nameWithType.vb: Utilities.DeepClone(Of Semaphore)()
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Semaphore)()
  name.vb: DeepClone(Of Semaphore)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone<Semaphore>
    nameWithType: Utilities.DeepClone<Semaphore>
    fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Semaphore>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone(Of Semaphore)
    nameWithType: Utilities.DeepClone(Of Semaphore)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Semaphore)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  name: NullSafeEquals(Object)
  nameWithType: Utilities.NullSafeEquals(Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GRYLibrary.Core.Event.EventSender`2
  commentId: T:GRYLibrary.Core.Event.EventSender`2
  name: EventSender<SenderType, EventArgumentType>
  nameWithType: EventSender<SenderType, EventArgumentType>
  fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>
  nameWithType.vb: EventSender(Of SenderType, EventArgumentType)
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType)
  name.vb: EventSender(Of SenderType, EventArgumentType)
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2
    name: EventSender
    nameWithType: EventSender
    fullName: GRYLibrary.Core.Event.EventSender
  - name: <
    nameWithType: <
    fullName: <
  - name: SenderType
    nameWithType: SenderType
    fullName: SenderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: EventArgumentType
    nameWithType: EventArgumentType
    fullName: EventArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2
    name: EventSender
    nameWithType: EventSender
    fullName: GRYLibrary.Core.Event.EventSender
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: SenderType
    nameWithType: SenderType
    fullName: SenderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: EventArgumentType
    nameWithType: EventArgumentType
    fullName: EventArgumentType
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event
  commentId: N:GRYLibrary.Core.Event
  name: GRYLibrary.Core.Event
  nameWithType: GRYLibrary.Core.Event
  fullName: GRYLibrary.Core.Event
- uid: GRYLibrary.Core.Property`1
  commentId: T:GRYLibrary.Core.Property`1
  parent: GRYLibrary.Core
  name: Property<T>
  nameWithType: Property<T>
  fullName: GRYLibrary.Core.Property<T>
  nameWithType.vb: Property(Of T)
  fullName.vb: GRYLibrary.Core.Property(Of T)
  name.vb: Property(Of T)
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property`1.AllowNullAsValue
  commentId: F:GRYLibrary.Core.Property`1.AllowNullAsValue
  name: AllowNullAsValue
  nameWithType: Property<T>.AllowNullAsValue
  fullName: GRYLibrary.Core.Property<T>.AllowNullAsValue
  nameWithType.vb: Property(Of T).AllowNullAsValue
  fullName.vb: GRYLibrary.Core.Property(Of T).AllowNullAsValue
- uid: GRYLibrary.Core.Property`1.AddValuesToHistory
  commentId: F:GRYLibrary.Core.Property`1.AddValuesToHistory
  name: AddValuesToHistory
  nameWithType: Property<T>.AddValuesToHistory
  fullName: GRYLibrary.Core.Property<T>.AddValuesToHistory
  nameWithType.vb: Property(Of T).AddValuesToHistory
  fullName.vb: GRYLibrary.Core.Property(Of T).AddValuesToHistory
- uid: GRYLibrary.Core.Property`1.NotifyAboutChanges
  commentId: F:GRYLibrary.Core.Property`1.NotifyAboutChanges
  name: NotifyAboutChanges
  nameWithType: Property<T>.NotifyAboutChanges
  fullName: GRYLibrary.Core.Property<T>.NotifyAboutChanges
  nameWithType.vb: Property(Of T).NotifyAboutChanges
  fullName.vb: GRYLibrary.Core.Property(Of T).NotifyAboutChanges
- uid: GRYLibrary.Core.Property`1.LockEnabled
  commentId: F:GRYLibrary.Core.Property`1.LockEnabled
  name: LockEnabled
  nameWithType: Property<T>.LockEnabled
  fullName: GRYLibrary.Core.Property<T>.LockEnabled
  nameWithType.vb: Property(Of T).LockEnabled
  fullName.vb: GRYLibrary.Core.Property(Of T).LockEnabled
- uid: GRYLibrary.Core.Property`1.Unset
  commentId: F:GRYLibrary.Core.Property`1.Unset
  name: Unset
  nameWithType: Property<T>.Unset
  fullName: GRYLibrary.Core.Property<T>.Unset
  nameWithType.vb: Property(Of T).Unset
  fullName.vb: GRYLibrary.Core.Property(Of T).Unset
- uid: GRYLibrary.Core.Property`1.LockObject
  commentId: F:GRYLibrary.Core.Property`1.LockObject
  name: LockObject
  nameWithType: Property<T>.LockObject
  fullName: GRYLibrary.Core.Property<T>.LockObject
  nameWithType.vb: Property(Of T).LockObject
  fullName.vb: GRYLibrary.Core.Property(Of T).LockObject
- uid: GRYLibrary.Core.Property`1.HasValue
  commentId: P:GRYLibrary.Core.Property`1.HasValue
  name: HasValue
  nameWithType: Property<T>.HasValue
  fullName: GRYLibrary.Core.Property<T>.HasValue
  nameWithType.vb: Property(Of T).HasValue
  fullName.vb: GRYLibrary.Core.Property(Of T).HasValue
- uid: GRYLibrary.Core.Property`1.InitialValue
  commentId: P:GRYLibrary.Core.Property`1.InitialValue
  name: InitialValue
  nameWithType: Property<T>.InitialValue
  fullName: GRYLibrary.Core.Property<T>.InitialValue
  nameWithType.vb: Property(Of T).InitialValue
  fullName.vb: GRYLibrary.Core.Property(Of T).InitialValue
- uid: GRYLibrary.Core.Property`1.History
  commentId: P:GRYLibrary.Core.Property`1.History
  name: History
  nameWithType: Property<T>.History
  fullName: GRYLibrary.Core.Property<T>.History
  nameWithType.vb: Property(Of T).History
  fullName.vb: GRYLibrary.Core.Property(Of T).History
- uid: GRYLibrary.Core.Property`1.UnsetValue
  commentId: M:GRYLibrary.Core.Property`1.UnsetValue
  name: UnsetValue()
  nameWithType: Property<T>.UnsetValue()
  fullName: GRYLibrary.Core.Property<T>.UnsetValue()
  nameWithType.vb: Property(Of T).UnsetValue()
  fullName.vb: GRYLibrary.Core.Property(Of T).UnsetValue()
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.UnsetValue
    name: UnsetValue
    nameWithType: Property<T>.UnsetValue
    fullName: GRYLibrary.Core.Property<T>.UnsetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.UnsetValue
    name: UnsetValue
    nameWithType: Property(Of T).UnsetValue
    fullName: GRYLibrary.Core.Property(Of T).UnsetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property`1.PropertyName
  commentId: P:GRYLibrary.Core.Property`1.PropertyName
  name: PropertyName
  nameWithType: Property<T>.PropertyName
  fullName: GRYLibrary.Core.Property<T>.PropertyName
  nameWithType.vb: Property(Of T).PropertyName
  fullName.vb: GRYLibrary.Core.Property(Of T).PropertyName
- uid: GRYLibrary.Core.Property`1.PropertyValueType
  commentId: P:GRYLibrary.Core.Property`1.PropertyValueType
  name: PropertyValueType
  nameWithType: Property<T>.PropertyValueType
  fullName: GRYLibrary.Core.Property<T>.PropertyValueType
  nameWithType.vb: Property(Of T).PropertyValueType
  fullName.vb: GRYLibrary.Core.Property(Of T).PropertyValueType
- uid: GRYLibrary.Core.Property`1.LastWriteTime
  commentId: P:GRYLibrary.Core.Property`1.LastWriteTime
  name: LastWriteTime
  nameWithType: Property<T>.LastWriteTime
  fullName: GRYLibrary.Core.Property<T>.LastWriteTime
  nameWithType.vb: Property(Of T).LastWriteTime
  fullName.vb: GRYLibrary.Core.Property(Of T).LastWriteTime
- uid: GRYLibrary.Core.Property`1.ResetToInitialValue
  commentId: M:GRYLibrary.Core.Property`1.ResetToInitialValue
  name: ResetToInitialValue()
  nameWithType: Property<T>.ResetToInitialValue()
  fullName: GRYLibrary.Core.Property<T>.ResetToInitialValue()
  nameWithType.vb: Property(Of T).ResetToInitialValue()
  fullName.vb: GRYLibrary.Core.Property(Of T).ResetToInitialValue()
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.ResetToInitialValue
    name: ResetToInitialValue
    nameWithType: Property<T>.ResetToInitialValue
    fullName: GRYLibrary.Core.Property<T>.ResetToInitialValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.ResetToInitialValue
    name: ResetToInitialValue
    nameWithType: Property(Of T).ResetToInitialValue
    fullName: GRYLibrary.Core.Property(Of T).ResetToInitialValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property`1.ResetHistory
  commentId: M:GRYLibrary.Core.Property`1.ResetHistory
  name: ResetHistory()
  nameWithType: Property<T>.ResetHistory()
  fullName: GRYLibrary.Core.Property<T>.ResetHistory()
  nameWithType.vb: Property(Of T).ResetHistory()
  fullName.vb: GRYLibrary.Core.Property(Of T).ResetHistory()
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.ResetHistory
    name: ResetHistory
    nameWithType: Property<T>.ResetHistory
    fullName: GRYLibrary.Core.Property<T>.ResetHistory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.ResetHistory
    name: ResetHistory
    nameWithType: Property(Of T).ResetHistory
    fullName: GRYLibrary.Core.Property(Of T).ResetHistory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property`1.EqualsValue(GRYLibrary.Core.Property{`0})
  commentId: M:GRYLibrary.Core.Property`1.EqualsValue(GRYLibrary.Core.Property{`0})
  name: EqualsValue(Property<T>)
  nameWithType: Property<T>.EqualsValue(Property<T>)
  fullName: GRYLibrary.Core.Property<T>.EqualsValue(GRYLibrary.Core.Property<T>)
  nameWithType.vb: Property(Of T).EqualsValue(Property(Of T))
  fullName.vb: GRYLibrary.Core.Property(Of T).EqualsValue(GRYLibrary.Core.Property(Of T))
  name.vb: EqualsValue(Property(Of T))
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.EqualsValue(GRYLibrary.Core.Property{`0})
    name: EqualsValue
    nameWithType: Property<T>.EqualsValue
    fullName: GRYLibrary.Core.Property<T>.EqualsValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.EqualsValue(GRYLibrary.Core.Property{`0})
    name: EqualsValue
    nameWithType: Property(Of T).EqualsValue
    fullName: GRYLibrary.Core.Property(Of T).EqualsValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Property`1
    name: Property
    nameWithType: Property
    fullName: GRYLibrary.Core.Property
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property`1.EqualsValue(`0)
  commentId: M:GRYLibrary.Core.Property`1.EqualsValue(`0)
  name: EqualsValue(T)
  nameWithType: Property<T>.EqualsValue(T)
  fullName: GRYLibrary.Core.Property<T>.EqualsValue(T)
  nameWithType.vb: Property(Of T).EqualsValue(T)
  fullName.vb: GRYLibrary.Core.Property(Of T).EqualsValue(T)
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.EqualsValue(`0)
    name: EqualsValue
    nameWithType: Property<T>.EqualsValue
    fullName: GRYLibrary.Core.Property<T>.EqualsValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.EqualsValue(`0)
    name: EqualsValue
    nameWithType: Property(Of T).EqualsValue
    fullName: GRYLibrary.Core.Property(Of T).EqualsValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Property`1.GetValueByTimestamp(System.DateTime)
  commentId: M:GRYLibrary.Core.Property`1.GetValueByTimestamp(System.DateTime)
  isExternal: true
  name: GetValueByTimestamp(DateTime)
  nameWithType: Property<T>.GetValueByTimestamp(DateTime)
  fullName: GRYLibrary.Core.Property<T>.GetValueByTimestamp(System.DateTime)
  nameWithType.vb: Property(Of T).GetValueByTimestamp(DateTime)
  fullName.vb: GRYLibrary.Core.Property(Of T).GetValueByTimestamp(System.DateTime)
  spec.csharp:
  - uid: GRYLibrary.Core.Property`1.GetValueByTimestamp(System.DateTime)
    name: GetValueByTimestamp
    nameWithType: Property<T>.GetValueByTimestamp
    fullName: GRYLibrary.Core.Property<T>.GetValueByTimestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Property`1.GetValueByTimestamp(System.DateTime)
    name: GetValueByTimestamp
    nameWithType: Property(Of T).GetValueByTimestamp
    fullName: GRYLibrary.Core.Property(Of T).GetValueByTimestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event.EventSender`2.Register(GRYLibrary.Core.Event.IObserver{`0,`1})
  commentId: M:GRYLibrary.Core.Event.EventSender`2.Register(GRYLibrary.Core.Event.IObserver{`0,`1})
  name: Register(IObserver<SenderType, EventArgumentType>)
  nameWithType: EventSender<SenderType, EventArgumentType>.Register(IObserver<SenderType, EventArgumentType>)
  fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.Register(GRYLibrary.Core.Event.IObserver<SenderType, EventArgumentType>)
  nameWithType.vb: EventSender(Of SenderType, EventArgumentType).Register(IObserver(Of SenderType, EventArgumentType))
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).Register(GRYLibrary.Core.Event.IObserver(Of SenderType, EventArgumentType))
  name.vb: Register(IObserver(Of SenderType, EventArgumentType))
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2.Register(GRYLibrary.Core.Event.IObserver{`0,`1})
    name: Register
    nameWithType: EventSender<SenderType, EventArgumentType>.Register
    fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.IObserver`2
    name: IObserver
    nameWithType: IObserver
    fullName: GRYLibrary.Core.Event.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - name: SenderType
    nameWithType: SenderType
    fullName: SenderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: EventArgumentType
    nameWithType: EventArgumentType
    fullName: EventArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2.Register(GRYLibrary.Core.Event.IObserver{`0,`1})
    name: Register
    nameWithType: EventSender(Of SenderType, EventArgumentType).Register
    fullName: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.IObserver`2
    name: IObserver
    nameWithType: IObserver
    fullName: GRYLibrary.Core.Event.IObserver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: SenderType
    nameWithType: SenderType
    fullName: SenderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: EventArgumentType
    nameWithType: EventArgumentType
    fullName: EventArgumentType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event.EventSender`2.Deregister(GRYLibrary.Core.Event.IObserver{`0,`1})
  commentId: M:GRYLibrary.Core.Event.EventSender`2.Deregister(GRYLibrary.Core.Event.IObserver{`0,`1})
  name: Deregister(IObserver<SenderType, EventArgumentType>)
  nameWithType: EventSender<SenderType, EventArgumentType>.Deregister(IObserver<SenderType, EventArgumentType>)
  fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.Deregister(GRYLibrary.Core.Event.IObserver<SenderType, EventArgumentType>)
  nameWithType.vb: EventSender(Of SenderType, EventArgumentType).Deregister(IObserver(Of SenderType, EventArgumentType))
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).Deregister(GRYLibrary.Core.Event.IObserver(Of SenderType, EventArgumentType))
  name.vb: Deregister(IObserver(Of SenderType, EventArgumentType))
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2.Deregister(GRYLibrary.Core.Event.IObserver{`0,`1})
    name: Deregister
    nameWithType: EventSender<SenderType, EventArgumentType>.Deregister
    fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.Deregister
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.IObserver`2
    name: IObserver
    nameWithType: IObserver
    fullName: GRYLibrary.Core.Event.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - name: SenderType
    nameWithType: SenderType
    fullName: SenderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: EventArgumentType
    nameWithType: EventArgumentType
    fullName: EventArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2.Deregister(GRYLibrary.Core.Event.IObserver{`0,`1})
    name: Deregister
    nameWithType: EventSender(Of SenderType, EventArgumentType).Deregister
    fullName: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).Deregister
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.IObserver`2
    name: IObserver
    nameWithType: IObserver
    fullName: GRYLibrary.Core.Event.IObserver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: SenderType
    nameWithType: SenderType
    fullName: SenderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: EventArgumentType
    nameWithType: EventArgumentType
    fullName: EventArgumentType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event.EventSender`2.Initialize(System.Runtime.Serialization.StreamingContext)
  commentId: M:GRYLibrary.Core.Event.EventSender`2.Initialize(System.Runtime.Serialization.StreamingContext)
  isExternal: true
  name: Initialize(StreamingContext)
  nameWithType: EventSender<SenderType, EventArgumentType>.Initialize(StreamingContext)
  fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.Initialize(System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: EventSender(Of SenderType, EventArgumentType).Initialize(StreamingContext)
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).Initialize(System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2.Initialize(System.Runtime.Serialization.StreamingContext)
    name: Initialize
    nameWithType: EventSender<SenderType, EventArgumentType>.Initialize
    fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2.Initialize(System.Runtime.Serialization.StreamingContext)
    name: Initialize
    nameWithType: EventSender(Of SenderType, EventArgumentType).Initialize
    fullName: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Event.EventSender`2.LogObject
  commentId: P:GRYLibrary.Core.Event.EventSender`2.LogObject
  name: LogObject
  nameWithType: EventSender<SenderType, EventArgumentType>.LogObject
  fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.LogObject
  nameWithType.vb: EventSender(Of SenderType, EventArgumentType).LogObject
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).LogObject
- uid: GRYLibrary.Core.Event.EventSender`2.Notify(GRYLibrary.Core.Event.Argument{`0,`1})
  commentId: M:GRYLibrary.Core.Event.EventSender`2.Notify(GRYLibrary.Core.Event.Argument{`0,`1})
  name: Notify(Argument<SenderType, EventArgumentType>)
  nameWithType: EventSender<SenderType, EventArgumentType>.Notify(Argument<SenderType, EventArgumentType>)
  fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.Notify(GRYLibrary.Core.Event.Argument<SenderType, EventArgumentType>)
  nameWithType.vb: EventSender(Of SenderType, EventArgumentType).Notify(Argument(Of SenderType, EventArgumentType))
  fullName.vb: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).Notify(GRYLibrary.Core.Event.Argument(Of SenderType, EventArgumentType))
  name.vb: Notify(Argument(Of SenderType, EventArgumentType))
  spec.csharp:
  - uid: GRYLibrary.Core.Event.EventSender`2.Notify(GRYLibrary.Core.Event.Argument{`0,`1})
    name: Notify
    nameWithType: EventSender<SenderType, EventArgumentType>.Notify
    fullName: GRYLibrary.Core.Event.EventSender<SenderType, EventArgumentType>.Notify
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.Argument`2
    name: Argument
    nameWithType: Argument
    fullName: GRYLibrary.Core.Event.Argument
  - name: <
    nameWithType: <
    fullName: <
  - name: SenderType
    nameWithType: SenderType
    fullName: SenderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: EventArgumentType
    nameWithType: EventArgumentType
    fullName: EventArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Event.EventSender`2.Notify(GRYLibrary.Core.Event.Argument{`0,`1})
    name: Notify
    nameWithType: EventSender(Of SenderType, EventArgumentType).Notify
    fullName: GRYLibrary.Core.Event.EventSender(Of SenderType, EventArgumentType).Notify
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Event.Argument`2
    name: Argument
    nameWithType: Argument
    fullName: GRYLibrary.Core.Event.Argument
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: SenderType
    nameWithType: SenderType
    fullName: SenderType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: EventArgumentType
    nameWithType: EventArgumentType
    fullName: EventArgumentType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  isExternal: true
  name: ObjectIsEnumerable(Object)
  nameWithType: Utilities.ObjectIsEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities
  commentId: T:GRYLibrary.Core.Utilities
  parent: GRYLibrary.Core
  name: Utilities
  nameWithType: Utilities
  fullName: GRYLibrary.Core.Utilities
- uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  isExternal: true
  name: ObjectIsSet(Object)
  nameWithType: Utilities.ObjectIsSet(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  isExternal: true
  name: ObjectIsList(Object)
  nameWithType: Utilities.ObjectIsList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  isExternal: true
  name: ObjectIsDictionary(Object)
  nameWithType: Utilities.ObjectIsDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  isExternal: true
  name: ObjectIsKeyValuePair(Object)
  nameWithType: Utilities.ObjectIsKeyValuePair(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  isExternal: true
  name: ObjectIsTuple(Object)
  nameWithType: Utilities.ObjectIsTuple(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  isExternal: true
  name: ObjectToEnumerable(Object)
  nameWithType: Utilities.ObjectToEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  isExternal: true
  name: ObjectToEnumerable<T>(Object)
  nameWithType: Utilities.ObjectToEnumerable<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)(System.Object)
  name.vb: ObjectToEnumerable(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  isExternal: true
  name: ObjectToSet<T>(Object)
  nameWithType: Utilities.ObjectToSet<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToSet(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)(System.Object)
  name.vb: ObjectToSet(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  isExternal: true
  name: ObjectToList(Object)
  nameWithType: Utilities.ObjectToList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  isExternal: true
  name: ObjectToList<T>(Object)
  nameWithType: Utilities.ObjectToList<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToList(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)(System.Object)
  name.vb: ObjectToList(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  isExternal: true
  name: ObjectToDictionary(Object)
  nameWithType: Utilities.ObjectToDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  isExternal: true
  name: ObjectToDictionary<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)(System.Object)
  name.vb: ObjectToDictionary(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  isExternal: true
  name: ObjectToKeyValuePair<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)(System.Object)
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  isExternal: true
  name: ObjectToTuple<T1, T2>(Object)
  nameWithType: Utilities.ObjectToTuple<T1, T2>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>(System.Object)
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)(System.Object)
  name.vb: ObjectToTuple(Of T1, T2)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: Utilities.ToDynamic(Object)
  fullName: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: Utilities.DeepClone<T>(T)
  fullName: GRYLibrary.Core.Utilities.DeepClone<T>(T)
  nameWithType.vb: Utilities.DeepClone(Of T)(T)
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: Utilities.DeepClone<T>
    fullName: GRYLibrary.Core.Utilities.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: Utilities.DeepClone(Of T)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  isExternal: true
  name: NullSafeEquals(Object, Object)
  nameWithType: Utilities.NullSafeEquals(Object, Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object, System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Semaphore.Name*
  commentId: Overload:GRYLibrary.Core.Semaphore.Name
  name: Name
  nameWithType: Semaphore.Name
  fullName: GRYLibrary.Core.Semaphore.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GRYLibrary.Core.Semaphore.#ctor*
  commentId: Overload:GRYLibrary.Core.Semaphore.#ctor
  name: Semaphore
  nameWithType: Semaphore.Semaphore
  fullName: GRYLibrary.Core.Semaphore.Semaphore
- uid: GRYLibrary.Core.Property{System.Int64}.Value
  commentId: P:GRYLibrary.Core.Property{System.Int64}.Value
  parent: GRYLibrary.Core.Property{System.Int64}
  definition: GRYLibrary.Core.Property`1.Value
  name: Value
  nameWithType: Property<Int64>.Value
  fullName: GRYLibrary.Core.Property<System.Int64>.Value
  nameWithType.vb: Property(Of Int64).Value
  fullName.vb: GRYLibrary.Core.Property(Of System.Int64).Value
- uid: GRYLibrary.Core.Semaphore.Value*
  commentId: Overload:GRYLibrary.Core.Semaphore.Value
  name: Value
  nameWithType: Semaphore.Value
  fullName: GRYLibrary.Core.Semaphore.Value
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: GRYLibrary.Core.Property`1.Value
  commentId: P:GRYLibrary.Core.Property`1.Value
  name: Value
  nameWithType: Property<T>.Value
  fullName: GRYLibrary.Core.Property<T>.Value
  nameWithType.vb: Property(Of T).Value
  fullName.vb: GRYLibrary.Core.Property(Of T).Value
- uid: GRYLibrary.Core.Semaphore.Increment*
  commentId: Overload:GRYLibrary.Core.Semaphore.Increment
  name: Increment
  nameWithType: Semaphore.Increment
  fullName: GRYLibrary.Core.Semaphore.Increment
- uid: GRYLibrary.Core.Semaphore.Decrement*
  commentId: Overload:GRYLibrary.Core.Semaphore.Decrement
  name: Decrement
  nameWithType: Semaphore.Decrement
  fullName: GRYLibrary.Core.Semaphore.Decrement
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Semaphore.Equals*
  commentId: Overload:GRYLibrary.Core.Semaphore.Equals
  name: Equals
  nameWithType: Semaphore.Equals
  fullName: GRYLibrary.Core.Semaphore.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Semaphore.GetHashCode*
  commentId: Overload:GRYLibrary.Core.Semaphore.GetHashCode
  name: GetHashCode
  nameWithType: Semaphore.GetHashCode
  fullName: GRYLibrary.Core.Semaphore.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
