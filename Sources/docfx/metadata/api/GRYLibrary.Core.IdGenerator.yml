### YamlMime:ManagedReference
items:
- uid: GRYLibrary.Core.IdGenerator
  commentId: T:GRYLibrary.Core.IdGenerator
  id: IdGenerator
  parent: GRYLibrary.Core
  children:
  - GRYLibrary.Core.IdGenerator.GetDefaultBigIntegerIdGenerator
  - GRYLibrary.Core.IdGenerator.GetDefaultGuidIdGenerator
  - GRYLibrary.Core.IdGenerator.GetDefaultIntIdGenerator
  - GRYLibrary.Core.IdGenerator.GetDefaultLongIdGenerator
  langs:
  - csharp
  - vb
  name: IdGenerator
  nameWithType: IdGenerator
  fullName: GRYLibrary.Core.IdGenerator
  type: Class
  source:
    id: IdGenerator
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\IdGenerator.cs
    startLine: 29
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public static class IdGenerator
    content.vb: Public Module IdGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: GRYLibrary.Core.IdGenerator.GetDefaultIntIdGenerator
  commentId: M:GRYLibrary.Core.IdGenerator.GetDefaultIntIdGenerator
  id: GetDefaultIntIdGenerator
  parent: GRYLibrary.Core.IdGenerator
  langs:
  - csharp
  - vb
  name: GetDefaultIntIdGenerator()
  nameWithType: IdGenerator.GetDefaultIntIdGenerator()
  fullName: GRYLibrary.Core.IdGenerator.GetDefaultIntIdGenerator()
  type: Method
  source:
    id: GetDefaultIntIdGenerator
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\IdGenerator.cs
    startLine: 34
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  summary: "\nRepresents an id-generator which generates increasing ids beginning with 0.\n"
  example: []
  syntax:
    content: public static IdGenerator<int> GetDefaultIntIdGenerator()
    return:
      type: GRYLibrary.Core.IdGenerator{System.Int32}
    content.vb: Public Shared Function GetDefaultIntIdGenerator As IdGenerator(Of Integer)
  overload: GRYLibrary.Core.IdGenerator.GetDefaultIntIdGenerator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GRYLibrary.Core.IdGenerator.GetDefaultLongIdGenerator
  commentId: M:GRYLibrary.Core.IdGenerator.GetDefaultLongIdGenerator
  id: GetDefaultLongIdGenerator
  parent: GRYLibrary.Core.IdGenerator
  langs:
  - csharp
  - vb
  name: GetDefaultLongIdGenerator()
  nameWithType: IdGenerator.GetDefaultLongIdGenerator()
  fullName: GRYLibrary.Core.IdGenerator.GetDefaultLongIdGenerator()
  type: Method
  source:
    id: GetDefaultLongIdGenerator
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\IdGenerator.cs
    startLine: 41
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  summary: "\nRepresents an id-generator which generates increasing ids beginning with 0.\n"
  example: []
  syntax:
    content: public static IdGenerator<long> GetDefaultLongIdGenerator()
    return:
      type: GRYLibrary.Core.IdGenerator{System.Int64}
    content.vb: Public Shared Function GetDefaultLongIdGenerator As IdGenerator(Of Long)
  overload: GRYLibrary.Core.IdGenerator.GetDefaultLongIdGenerator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GRYLibrary.Core.IdGenerator.GetDefaultBigIntegerIdGenerator
  commentId: M:GRYLibrary.Core.IdGenerator.GetDefaultBigIntegerIdGenerator
  id: GetDefaultBigIntegerIdGenerator
  parent: GRYLibrary.Core.IdGenerator
  langs:
  - csharp
  - vb
  name: GetDefaultBigIntegerIdGenerator()
  nameWithType: IdGenerator.GetDefaultBigIntegerIdGenerator()
  fullName: GRYLibrary.Core.IdGenerator.GetDefaultBigIntegerIdGenerator()
  type: Method
  source:
    id: GetDefaultBigIntegerIdGenerator
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\IdGenerator.cs
    startLine: 48
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  summary: "\nRepresents an id-generator which generates increasing ids beginning with 0.\n"
  example: []
  syntax:
    content: public static IdGenerator<BigInteger> GetDefaultBigIntegerIdGenerator()
    return:
      type: GRYLibrary.Core.IdGenerator{System.Numerics.BigInteger}
    content.vb: Public Shared Function GetDefaultBigIntegerIdGenerator As IdGenerator(Of BigInteger)
  overload: GRYLibrary.Core.IdGenerator.GetDefaultBigIntegerIdGenerator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GRYLibrary.Core.IdGenerator.GetDefaultGuidIdGenerator
  commentId: M:GRYLibrary.Core.IdGenerator.GetDefaultGuidIdGenerator
  id: GetDefaultGuidIdGenerator
  parent: GRYLibrary.Core.IdGenerator
  langs:
  - csharp
  - vb
  name: GetDefaultGuidIdGenerator()
  nameWithType: IdGenerator.GetDefaultGuidIdGenerator()
  fullName: GRYLibrary.Core.IdGenerator.GetDefaultGuidIdGenerator()
  type: Method
  source:
    id: GetDefaultGuidIdGenerator
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\IdGenerator.cs
    startLine: 55
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  summary: "\nRepresents an id-generator which generates random guids.\n"
  example: []
  syntax:
    content: public static IdGenerator<Guid> GetDefaultGuidIdGenerator()
    return:
      type: GRYLibrary.Core.IdGenerator{System.Guid}
    content.vb: Public Shared Function GetDefaultGuidIdGenerator As IdGenerator(Of Guid)
  overload: GRYLibrary.Core.IdGenerator.GetDefaultGuidIdGenerator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: GRYLibrary.Core
  commentId: N:GRYLibrary.Core
  name: GRYLibrary.Core
  nameWithType: GRYLibrary.Core
  fullName: GRYLibrary.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GRYLibrary.Core.IdGenerator.GetDefaultIntIdGenerator*
  commentId: Overload:GRYLibrary.Core.IdGenerator.GetDefaultIntIdGenerator
  name: GetDefaultIntIdGenerator
  nameWithType: IdGenerator.GetDefaultIntIdGenerator
  fullName: GRYLibrary.Core.IdGenerator.GetDefaultIntIdGenerator
- uid: GRYLibrary.Core.IdGenerator{System.Int32}
  commentId: T:GRYLibrary.Core.IdGenerator{System.Int32}
  parent: GRYLibrary.Core
  definition: GRYLibrary.Core.IdGenerator`1
  name: IdGenerator<Int32>
  nameWithType: IdGenerator<Int32>
  fullName: GRYLibrary.Core.IdGenerator<System.Int32>
  nameWithType.vb: IdGenerator(Of Int32)
  fullName.vb: GRYLibrary.Core.IdGenerator(Of System.Int32)
  name.vb: IdGenerator(Of Int32)
  spec.csharp:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.IdGenerator`1
  commentId: T:GRYLibrary.Core.IdGenerator`1
  name: IdGenerator<T>
  nameWithType: IdGenerator<T>
  fullName: GRYLibrary.Core.IdGenerator<T>
  nameWithType.vb: IdGenerator(Of T)
  fullName.vb: GRYLibrary.Core.IdGenerator(Of T)
  name.vb: IdGenerator(Of T)
  spec.csharp:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.IdGenerator.GetDefaultLongIdGenerator*
  commentId: Overload:GRYLibrary.Core.IdGenerator.GetDefaultLongIdGenerator
  name: GetDefaultLongIdGenerator
  nameWithType: IdGenerator.GetDefaultLongIdGenerator
  fullName: GRYLibrary.Core.IdGenerator.GetDefaultLongIdGenerator
- uid: GRYLibrary.Core.IdGenerator{System.Int64}
  commentId: T:GRYLibrary.Core.IdGenerator{System.Int64}
  parent: GRYLibrary.Core
  definition: GRYLibrary.Core.IdGenerator`1
  name: IdGenerator<Int64>
  nameWithType: IdGenerator<Int64>
  fullName: GRYLibrary.Core.IdGenerator<System.Int64>
  nameWithType.vb: IdGenerator(Of Int64)
  fullName.vb: GRYLibrary.Core.IdGenerator(Of System.Int64)
  name.vb: IdGenerator(Of Int64)
  spec.csharp:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.IdGenerator.GetDefaultBigIntegerIdGenerator*
  commentId: Overload:GRYLibrary.Core.IdGenerator.GetDefaultBigIntegerIdGenerator
  name: GetDefaultBigIntegerIdGenerator
  nameWithType: IdGenerator.GetDefaultBigIntegerIdGenerator
  fullName: GRYLibrary.Core.IdGenerator.GetDefaultBigIntegerIdGenerator
- uid: GRYLibrary.Core.IdGenerator{System.Numerics.BigInteger}
  commentId: T:GRYLibrary.Core.IdGenerator{System.Numerics.BigInteger}
  parent: GRYLibrary.Core
  definition: GRYLibrary.Core.IdGenerator`1
  name: IdGenerator<BigInteger>
  nameWithType: IdGenerator<BigInteger>
  fullName: GRYLibrary.Core.IdGenerator<System.Numerics.BigInteger>
  nameWithType.vb: IdGenerator(Of BigInteger)
  fullName.vb: GRYLibrary.Core.IdGenerator(Of System.Numerics.BigInteger)
  name.vb: IdGenerator(Of BigInteger)
  spec.csharp:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.IdGenerator.GetDefaultGuidIdGenerator*
  commentId: Overload:GRYLibrary.Core.IdGenerator.GetDefaultGuidIdGenerator
  name: GetDefaultGuidIdGenerator
  nameWithType: IdGenerator.GetDefaultGuidIdGenerator
  fullName: GRYLibrary.Core.IdGenerator.GetDefaultGuidIdGenerator
- uid: GRYLibrary.Core.IdGenerator{System.Guid}
  commentId: T:GRYLibrary.Core.IdGenerator{System.Guid}
  parent: GRYLibrary.Core
  definition: GRYLibrary.Core.IdGenerator`1
  name: IdGenerator<Guid>
  nameWithType: IdGenerator<Guid>
  fullName: GRYLibrary.Core.IdGenerator<System.Guid>
  nameWithType.vb: IdGenerator(Of Guid)
  fullName.vb: GRYLibrary.Core.IdGenerator(Of System.Guid)
  name.vb: IdGenerator(Of Guid)
  spec.csharp:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.IdGenerator`1
    name: IdGenerator
    nameWithType: IdGenerator
    fullName: GRYLibrary.Core.IdGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
