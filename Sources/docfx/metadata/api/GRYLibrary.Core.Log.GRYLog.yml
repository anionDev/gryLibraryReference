### YamlMime:ManagedReference
items:
- uid: GRYLibrary.Core.Log.GRYLog
  commentId: T:GRYLibrary.Core.Log.GRYLog
  id: GRYLog
  parent: GRYLibrary.Core.Log
  children:
  - GRYLibrary.Core.Log.GRYLog.#ctor
  - GRYLibrary.Core.Log.GRYLog.BeginScope``1(``0)
  - GRYLibrary.Core.Log.GRYLog.Configuration
  - GRYLibrary.Core.Log.GRYLog.Create
  - GRYLibrary.Core.Log.GRYLog.Create(System.String)
  - GRYLibrary.Core.Log.GRYLog.CreateByConfigurationFile(System.String)
  - GRYLibrary.Core.Log.GRYLog.Dispose
  - GRYLibrary.Core.Log.GRYLog.Equals(System.Object)
  - GRYLibrary.Core.Log.GRYLog.ErrorOccurred
  - GRYLibrary.Core.Log.GRYLog.ExecuteAndLog(System.Action,System.String,System.Boolean,Microsoft.Extensions.Logging.LogLevel,System.String)
  - GRYLibrary.Core.Log.GRYLog.ExecuteAndLog``1(System.Func{``0},System.String,System.Boolean,Microsoft.Extensions.Logging.LogLevel,``0,System.String)
  - GRYLibrary.Core.Log.GRYLog.GetAmountOfErrors
  - GRYLibrary.Core.Log.GRYLog.GetAmountOfWarnings
  - GRYLibrary.Core.Log.GRYLog.GetHashCode
  - GRYLibrary.Core.Log.GRYLog.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  - GRYLibrary.Core.Log.GRYLog.Log(GRYLibrary.Core.Log.LogItem)
  - GRYLibrary.Core.Log.GRYLog.Log(Microsoft.Extensions.Logging.LogLevel,System.Exception)
  - GRYLibrary.Core.Log.GRYLog.Log(System.Exception)
  - GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String})
  - GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},Microsoft.Extensions.Logging.LogLevel)
  - GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},Microsoft.Extensions.Logging.LogLevel,System.Exception)
  - GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},System.Exception)
  - GRYLibrary.Core.Log.GRYLog.Log(System.String)
  - GRYLibrary.Core.Log.GRYLog.Log(System.String,Microsoft.Extensions.Logging.LogLevel)
  - GRYLibrary.Core.Log.GRYLog.Log(System.String,Microsoft.Extensions.Logging.LogLevel,System.Exception)
  - GRYLibrary.Core.Log.GRYLog.Log(System.String,System.Exception)
  - GRYLibrary.Core.Log.GRYLog.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  - GRYLibrary.Core.Log.GRYLog.LogCurrentSystemStatistics
  - GRYLibrary.Core.Log.GRYLog.LogGeneralProgramInformation
  - GRYLibrary.Core.Log.GRYLog.LogSummary
  - GRYLibrary.Core.Log.GRYLog.NewLogItem
  - GRYLibrary.Core.Log.GRYLog.UseSubNamespace(System.String)
  langs:
  - csharp
  - vb
  name: GRYLog
  nameWithType: GRYLog
  fullName: GRYLibrary.Core.Log.GRYLog
  type: Class
  source:
    id: GRYLog
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 10
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: 'public class GRYLog : IDisposable, ILogger'
    content.vb: >-
      Public Class GRYLog

          Implements IDisposable, ILogger
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - Microsoft.Extensions.Logging.ILogger
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  - System.Object.GRYLibrary.Core.Utilities.ToDynamic
  - GRYLibrary.Core.Log.GRYLog.GRYLibrary.Core.Utilities.DeepClone``1
  - GRYLibrary.Core.Log.GRYLog.GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
  - System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GRYLibrary.Core.Log.GRYLog.Configuration
  commentId: P:GRYLibrary.Core.Log.GRYLog.Configuration
  id: Configuration
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: GRYLog.Configuration
  fullName: GRYLibrary.Core.Log.GRYLog.Configuration
  type: Property
  source:
    id: Configuration
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 12
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public GRYLogConfiguration Configuration { get; set; }
    parameters: []
    return:
      type: GRYLibrary.Core.Log.GRYLogConfiguration
    content.vb: Public Property Configuration As GRYLogConfiguration
  overload: GRYLibrary.Core.Log.GRYLog.Configuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.NewLogItem
  commentId: E:GRYLibrary.Core.Log.GRYLog.NewLogItem
  id: NewLogItem
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: NewLogItem
  nameWithType: GRYLog.NewLogItem
  fullName: GRYLibrary.Core.Log.GRYLog.NewLogItem
  type: Event
  source:
    id: NewLogItem
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 18
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public event GRYLog.NewLogItemEventHandler NewLogItem
    return:
      type: GRYLibrary.Core.Log.GRYLog.NewLogItemEventHandler
    content.vb: Public Event NewLogItem As GRYLog.NewLogItemEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.ErrorOccurred
  commentId: E:GRYLibrary.Core.Log.GRYLog.ErrorOccurred
  id: ErrorOccurred
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: ErrorOccurred
  nameWithType: GRYLog.ErrorOccurred
  fullName: GRYLibrary.Core.Log.GRYLog.ErrorOccurred
  type: Event
  source:
    id: ErrorOccurred
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 20
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public event GRYLog.ErrorOccurredEventHandler ErrorOccurred
    return:
      type: GRYLibrary.Core.Log.GRYLog.ErrorOccurredEventHandler
    content.vb: Public Event ErrorOccurred As GRYLog.ErrorOccurredEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.#ctor
  commentId: M:GRYLibrary.Core.Log.GRYLog.#ctor
  id: '#ctor'
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: GRYLog()
  nameWithType: GRYLog.GRYLog()
  fullName: GRYLibrary.Core.Log.GRYLog.GRYLog()
  type: Constructor
  source:
    id: .ctor
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 37
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public GRYLog()
    content.vb: Public Sub New
  overload: GRYLibrary.Core.Log.GRYLog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.Create
  commentId: M:GRYLibrary.Core.Log.GRYLog.Create
  id: Create
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: GRYLog.Create()
  fullName: GRYLibrary.Core.Log.GRYLog.Create()
  type: Method
  source:
    id: Create
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 55
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public static GRYLog Create()
    return:
      type: GRYLibrary.Core.Log.GRYLog
    content.vb: Public Shared Function Create As GRYLog
  overload: GRYLibrary.Core.Log.GRYLog.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GRYLibrary.Core.Log.GRYLog.Create(System.String)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Create(System.String)
  id: Create(System.String)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: GRYLog.Create(String)
  fullName: GRYLibrary.Core.Log.GRYLog.Create(System.String)
  type: Method
  source:
    id: Create
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 59
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public static GRYLog Create(string logFile)
    parameters:
    - id: logFile
      type: System.String
    return:
      type: GRYLibrary.Core.Log.GRYLog
    content.vb: Public Shared Function Create(logFile As String) As GRYLog
  overload: GRYLibrary.Core.Log.GRYLog.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GRYLibrary.Core.Log.GRYLog.CreateByConfigurationFile(System.String)
  commentId: M:GRYLibrary.Core.Log.GRYLog.CreateByConfigurationFile(System.String)
  id: CreateByConfigurationFile(System.String)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: CreateByConfigurationFile(String)
  nameWithType: GRYLog.CreateByConfigurationFile(String)
  fullName: GRYLibrary.Core.Log.GRYLog.CreateByConfigurationFile(System.String)
  type: Method
  source:
    id: CreateByConfigurationFile
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 65
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public static GRYLog CreateByConfigurationFile(string configurationFile)
    parameters:
    - id: configurationFile
      type: System.String
    return:
      type: GRYLibrary.Core.Log.GRYLog
    content.vb: Public Shared Function CreateByConfigurationFile(configurationFile As String) As GRYLog
  overload: GRYLibrary.Core.Log.GRYLog.CreateByConfigurationFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GRYLibrary.Core.Log.GRYLog.GetHashCode
  commentId: M:GRYLibrary.Core.Log.GRYLog.GetHashCode
  id: GetHashCode
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GRYLog.GetHashCode()
  fullName: GRYLibrary.Core.Log.GRYLog.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 69
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: GRYLibrary.Core.Log.GRYLog.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GRYLibrary.Core.Log.GRYLog.Equals(System.Object)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Equals(System.Object)
  id: Equals(System.Object)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: GRYLog.Equals(Object)
  fullName: GRYLibrary.Core.Log.GRYLog.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 74
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GRYLibrary.Core.Log.GRYLog.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GRYLibrary.Core.Log.GRYLog.GetAmountOfErrors
  commentId: M:GRYLibrary.Core.Log.GRYLog.GetAmountOfErrors
  id: GetAmountOfErrors
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: GetAmountOfErrors()
  nameWithType: GRYLog.GetAmountOfErrors()
  fullName: GRYLibrary.Core.Log.GRYLog.GetAmountOfErrors()
  type: Method
  source:
    id: GetAmountOfErrors
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 116
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public int GetAmountOfErrors()
    return:
      type: System.Int32
    content.vb: Public Function GetAmountOfErrors As Integer
  overload: GRYLibrary.Core.Log.GRYLog.GetAmountOfErrors*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.GetAmountOfWarnings
  commentId: M:GRYLibrary.Core.Log.GRYLog.GetAmountOfWarnings
  id: GetAmountOfWarnings
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: GetAmountOfWarnings()
  nameWithType: GRYLog.GetAmountOfWarnings()
  fullName: GRYLibrary.Core.Log.GRYLog.GetAmountOfWarnings()
  type: Method
  source:
    id: GetAmountOfWarnings
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 120
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public int GetAmountOfWarnings()
    return:
      type: System.Int32
    content.vb: Public Function GetAmountOfWarnings As Integer
  overload: GRYLibrary.Core.Log.GRYLog.GetAmountOfWarnings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.LogGeneralProgramInformation
  commentId: M:GRYLibrary.Core.Log.GRYLog.LogGeneralProgramInformation
  id: LogGeneralProgramInformation
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: LogGeneralProgramInformation()
  nameWithType: GRYLog.LogGeneralProgramInformation()
  fullName: GRYLibrary.Core.Log.GRYLog.LogGeneralProgramInformation()
  type: Method
  source:
    id: LogGeneralProgramInformation
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 124
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void LogGeneralProgramInformation()
    content.vb: Public Sub LogGeneralProgramInformation
  overload: GRYLibrary.Core.Log.GRYLog.LogGeneralProgramInformation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.LogCurrentSystemStatistics
  commentId: M:GRYLibrary.Core.Log.GRYLog.LogCurrentSystemStatistics
  id: LogCurrentSystemStatistics
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: LogCurrentSystemStatistics()
  nameWithType: GRYLog.LogCurrentSystemStatistics()
  fullName: GRYLibrary.Core.Log.GRYLog.LogCurrentSystemStatistics()
  type: Method
  source:
    id: LogCurrentSystemStatistics
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 131
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void LogCurrentSystemStatistics()
    content.vb: Public Sub LogCurrentSystemStatistics
  overload: GRYLibrary.Core.Log.GRYLog.LogCurrentSystemStatistics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.LogSummary
  commentId: M:GRYLibrary.Core.Log.GRYLog.LogSummary
  id: LogSummary
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: LogSummary()
  nameWithType: GRYLog.LogSummary()
  fullName: GRYLibrary.Core.Log.GRYLog.LogSummary()
  type: Method
  source:
    id: LogSummary
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 151
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void LogSummary()
    content.vb: Public Sub LogSummary
  overload: GRYLibrary.Core.Log.GRYLog.LogSummary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.String)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.String)
  id: Log(System.String)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(String)
  nameWithType: GRYLog.Log(String)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.String)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 174
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub Log(message As String)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.String,System.Exception)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.String,System.Exception)
  id: Log(System.String,System.Exception)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(String, Exception)
  nameWithType: GRYLog.Log(String, Exception)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.String, System.Exception)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 178
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(string message, Exception exception)
    parameters:
    - id: message
      type: System.String
    - id: exception
      type: System.Exception
    content.vb: Public Sub Log(message As String, exception As Exception)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.String,Microsoft.Extensions.Logging.LogLevel,System.Exception)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.String,Microsoft.Extensions.Logging.LogLevel,System.Exception)
  id: Log(System.String,Microsoft.Extensions.Logging.LogLevel,System.Exception)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(String, LogLevel, Exception)
  nameWithType: GRYLog.Log(String, LogLevel, Exception)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.String, Microsoft.Extensions.Logging.LogLevel, System.Exception)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 182
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(string message, LogLevel logLevel, Exception exception)
    parameters:
    - id: message
      type: System.String
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    - id: exception
      type: System.Exception
    content.vb: Public Sub Log(message As String, logLevel As LogLevel, exception As Exception)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.String,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.String,Microsoft.Extensions.Logging.LogLevel)
  id: Log(System.String,Microsoft.Extensions.Logging.LogLevel)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(String, LogLevel)
  nameWithType: GRYLog.Log(String, LogLevel)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.String, Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 186
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(string message, LogLevel logLevel)
    parameters:
    - id: message
      type: System.String
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    content.vb: Public Sub Log(message As String, logLevel As LogLevel)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String})
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String})
  id: Log(System.Func{System.String})
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(Func<String>)
  nameWithType: GRYLog.Log(Func<String>)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.Func<System.String>)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 191
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(Func<string> getMessage)
    parameters:
    - id: getMessage
      type: System.Func{System.String}
    content.vb: Public Sub Log(getMessage As Func(Of String))
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  nameWithType.vb: GRYLog.Log(Func(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.GRYLog.Log(System.Func(Of System.String))
  name.vb: Log(Func(Of String))
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},System.Exception)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},System.Exception)
  id: Log(System.Func{System.String},System.Exception)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(Func<String>, Exception)
  nameWithType: GRYLog.Log(Func<String>, Exception)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.Func<System.String>, System.Exception)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 195
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(Func<string> getMessage, Exception exception)
    parameters:
    - id: getMessage
      type: System.Func{System.String}
    - id: exception
      type: System.Exception
    content.vb: Public Sub Log(getMessage As Func(Of String), exception As Exception)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  nameWithType.vb: GRYLog.Log(Func(Of String), Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.GRYLog.Log(System.Func(Of System.String), System.Exception)
  name.vb: Log(Func(Of String), Exception)
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.Exception)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.Exception)
  id: Log(System.Exception)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(Exception)
  nameWithType: GRYLog.Log(Exception)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.Exception)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 199
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    content.vb: Public Sub Log(exception As Exception)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.Log(Microsoft.Extensions.Logging.LogLevel,System.Exception)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(Microsoft.Extensions.Logging.LogLevel,System.Exception)
  id: Log(Microsoft.Extensions.Logging.LogLevel,System.Exception)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(LogLevel, Exception)
  nameWithType: GRYLog.Log(LogLevel, Exception)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(Microsoft.Extensions.Logging.LogLevel, System.Exception)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 203
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(LogLevel logLevel, Exception exception)
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    - id: exception
      type: System.Exception
    content.vb: Public Sub Log(logLevel As LogLevel, exception As Exception)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},Microsoft.Extensions.Logging.LogLevel,System.Exception)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},Microsoft.Extensions.Logging.LogLevel,System.Exception)
  id: Log(System.Func{System.String},Microsoft.Extensions.Logging.LogLevel,System.Exception)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(Func<String>, LogLevel, Exception)
  nameWithType: GRYLog.Log(Func<String>, LogLevel, Exception)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.Func<System.String>, Microsoft.Extensions.Logging.LogLevel, System.Exception)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 207
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(Func<string> getMessage, LogLevel logLevel, Exception exception)
    parameters:
    - id: getMessage
      type: System.Func{System.String}
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    - id: exception
      type: System.Exception
    content.vb: Public Sub Log(getMessage As Func(Of String), logLevel As LogLevel, exception As Exception)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  nameWithType.vb: GRYLog.Log(Func(Of String), LogLevel, Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.GRYLog.Log(System.Func(Of System.String), Microsoft.Extensions.Logging.LogLevel, System.Exception)
  name.vb: Log(Func(Of String), LogLevel, Exception)
- uid: GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},Microsoft.Extensions.Logging.LogLevel)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(System.Func{System.String},Microsoft.Extensions.Logging.LogLevel)
  id: Log(System.Func{System.String},Microsoft.Extensions.Logging.LogLevel)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(Func<String>, LogLevel)
  nameWithType: GRYLog.Log(Func<String>, LogLevel)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(System.Func<System.String>, Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 211
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(Func<string> getMessage, LogLevel logLevel)
    parameters:
    - id: getMessage
      type: System.Func{System.String}
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    content.vb: Public Sub Log(getMessage As Func(Of String), logLevel As LogLevel)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  nameWithType.vb: GRYLog.Log(Func(Of String), LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.GRYLog.Log(System.Func(Of System.String), Microsoft.Extensions.Logging.LogLevel)
  name.vb: Log(Func(Of String), LogLevel)
- uid: GRYLibrary.Core.Log.GRYLog.Log(GRYLibrary.Core.Log.LogItem)
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log(GRYLibrary.Core.Log.LogItem)
  id: Log(GRYLibrary.Core.Log.LogItem)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log(LogItem)
  nameWithType: GRYLog.Log(LogItem)
  fullName: GRYLibrary.Core.Log.GRYLog.Log(GRYLibrary.Core.Log.LogItem)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 215
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log(LogItem logitem)
    parameters:
    - id: logitem
      type: GRYLibrary.Core.Log.LogItem
    content.vb: Public Sub Log(logitem As LogItem)
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog(System.Action,System.String,System.Boolean,Microsoft.Extensions.Logging.LogLevel,System.String)
  commentId: M:GRYLibrary.Core.Log.GRYLog.ExecuteAndLog(System.Action,System.String,System.Boolean,Microsoft.Extensions.Logging.LogLevel,System.String)
  id: ExecuteAndLog(System.Action,System.String,System.Boolean,Microsoft.Extensions.Logging.LogLevel,System.String)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: ExecuteAndLog(Action, String, Boolean, LogLevel, String)
  nameWithType: GRYLog.ExecuteAndLog(Action, String, Boolean, LogLevel, String)
  fullName: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog(System.Action, System.String, System.Boolean, Microsoft.Extensions.Logging.LogLevel, System.String)
  type: Method
  source:
    id: ExecuteAndLog
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 318
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void ExecuteAndLog(Action action, string nameOfAction, bool preventThrowingExceptions = false, LogLevel logLevelForOverhead = LogLevel.Debug, string subNamespaceForLog = "")
    parameters:
    - id: action
      type: System.Action
    - id: nameOfAction
      type: System.String
    - id: preventThrowingExceptions
      type: System.Boolean
    - id: logLevelForOverhead
      type: Microsoft.Extensions.Logging.LogLevel
    - id: subNamespaceForLog
      type: System.String
    content.vb: Public Sub ExecuteAndLog(action As Action, nameOfAction As String, preventThrowingExceptions As Boolean = False, logLevelForOverhead As LogLevel = LogLevel.Debug, subNamespaceForLog As String = "")
  overload: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog``1(System.Func{``0},System.String,System.Boolean,Microsoft.Extensions.Logging.LogLevel,``0,System.String)
  commentId: M:GRYLibrary.Core.Log.GRYLog.ExecuteAndLog``1(System.Func{``0},System.String,System.Boolean,Microsoft.Extensions.Logging.LogLevel,``0,System.String)
  id: ExecuteAndLog``1(System.Func{``0},System.String,System.Boolean,Microsoft.Extensions.Logging.LogLevel,``0,System.String)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: ExecuteAndLog<TResult>(Func<TResult>, String, Boolean, LogLevel, TResult, String)
  nameWithType: GRYLog.ExecuteAndLog<TResult>(Func<TResult>, String, Boolean, LogLevel, TResult, String)
  fullName: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog<TResult>(System.Func<TResult>, System.String, System.Boolean, Microsoft.Extensions.Logging.LogLevel, TResult, System.String)
  type: Method
  source:
    id: ExecuteAndLog
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 344
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public TResult ExecuteAndLog<TResult>(Func<TResult> action, string nameOfAction, bool preventThrowingExceptions = false, LogLevel logLevelForOverhead = LogLevel.Debug, TResult defaultValue = null, string subNamespaceForLog = "")
    parameters:
    - id: action
      type: System.Func{{TResult}}
    - id: nameOfAction
      type: System.String
    - id: preventThrowingExceptions
      type: System.Boolean
    - id: logLevelForOverhead
      type: Microsoft.Extensions.Logging.LogLevel
    - id: defaultValue
      type: '{TResult}'
    - id: subNamespaceForLog
      type: System.String
    typeParameters:
    - id: TResult
    return:
      type: '{TResult}'
    content.vb: Public Function ExecuteAndLog(Of TResult)(action As Func(Of TResult), nameOfAction As String, preventThrowingExceptions As Boolean = False, logLevelForOverhead As LogLevel = LogLevel.Debug, defaultValue As TResult = Nothing, subNamespaceForLog As String = "") As TResult
  overload: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog*
  nameWithType.vb: GRYLog.ExecuteAndLog(Of TResult)(Func(Of TResult), String, Boolean, LogLevel, TResult, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog(Of TResult)(System.Func(Of TResult), System.String, System.Boolean, Microsoft.Extensions.Logging.LogLevel, TResult, System.String)
  name.vb: ExecuteAndLog(Of TResult)(Func(Of TResult), String, Boolean, LogLevel, TResult, String)
- uid: GRYLibrary.Core.Log.GRYLog.Dispose
  commentId: M:GRYLibrary.Core.Log.GRYLog.Dispose
  id: Dispose
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: GRYLog.Dispose()
  fullName: GRYLibrary.Core.Log.GRYLog.Dispose()
  type: Method
  source:
    id: Dispose
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 377
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: GRYLibrary.Core.Log.GRYLog.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.UseSubNamespace(System.String)
  commentId: M:GRYLibrary.Core.Log.GRYLog.UseSubNamespace(System.String)
  id: UseSubNamespace(System.String)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: UseSubNamespace(String)
  nameWithType: GRYLog.UseSubNamespace(String)
  fullName: GRYLibrary.Core.Log.GRYLog.UseSubNamespace(System.String)
  type: Method
  source:
    id: UseSubNamespace
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 384
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public IDisposable UseSubNamespace(string subnamespace)
    parameters:
    - id: subnamespace
      type: System.String
    return:
      type: System.IDisposable
    content.vb: Public Function UseSubNamespace(subnamespace As String) As IDisposable
  overload: GRYLibrary.Core.Log.GRYLog.UseSubNamespace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:GRYLibrary.Core.Log.GRYLog.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  id: IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: IsEnabled(LogLevel)
  nameWithType: GRYLog.IsEnabled(LogLevel)
  fullName: GRYLibrary.Core.Log.GRYLog.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    id: IsEnabled
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 406
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public bool IsEnabled(LogLevel logLevel)
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    return:
      type: System.Boolean
    content.vb: Public Function IsEnabled(logLevel As LogLevel) As Boolean
  overload: GRYLibrary.Core.Log.GRYLog.IsEnabled*
  implements:
  - Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.GRYLog.BeginScope``1(``0)
  commentId: M:GRYLibrary.Core.Log.GRYLog.BeginScope``1(``0)
  id: BeginScope``1(``0)
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: BeginScope<TState>(TState)
  nameWithType: GRYLog.BeginScope<TState>(TState)
  fullName: GRYLibrary.Core.Log.GRYLog.BeginScope<TState>(TState)
  type: Method
  source:
    id: BeginScope
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 411
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public IDisposable BeginScope<TState>(TState state)
    parameters:
    - id: state
      type: '{TState}'
    typeParameters:
    - id: TState
    return:
      type: System.IDisposable
    content.vb: Public Function BeginScope(Of TState)(state As TState) As IDisposable
  overload: GRYLibrary.Core.Log.GRYLog.BeginScope*
  implements:
  - Microsoft.Extensions.Logging.ILogger.BeginScope``1({TState})
  nameWithType.vb: GRYLog.BeginScope(Of TState)(TState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.GRYLog.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
- uid: GRYLibrary.Core.Log.GRYLog.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  commentId: M:GRYLibrary.Core.Log.GRYLog.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  id: Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  parent: GRYLibrary.Core.Log.GRYLog
  langs:
  - csharp
  - vb
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  nameWithType: GRYLog.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  fullName: GRYLibrary.Core.Log.GRYLog.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, System.String>)
  type: Method
  source:
    id: Log
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\GRYLog.cs
    startLine: 415
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter)
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
    - id: state
      type: '{TState}'
    - id: exception
      type: System.Exception
    - id: formatter
      type: System.Func{{TState},System.Exception,System.String}
    typeParameters:
    - id: TState
    content.vb: Public Sub Log(Of TState)(logLevel As LogLevel, eventId As EventId, state As TState, exception As Exception, formatter As Func(Of TState, Exception, String))
  overload: GRYLibrary.Core.Log.GRYLog.Log*
  implements:
  - Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,{TState},System.Exception,System.Func{{TState},System.Exception,System.String})
  nameWithType.vb: GRYLog.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.GRYLog.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, System.String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
references:
- uid: GRYLibrary.Core.Log
  commentId: N:GRYLibrary.Core.Log
  name: GRYLibrary.Core.Log
  nameWithType: GRYLibrary.Core.Log
  fullName: GRYLibrary.Core.Log
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  name: ObjectIsEnumerable()
  nameWithType: Utilities.ObjectIsEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  name: ObjectIsSet()
  nameWithType: Utilities.ObjectIsSet()
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  name: ObjectIsList()
  nameWithType: Utilities.ObjectIsList()
  fullName: GRYLibrary.Core.Utilities.ObjectIsList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  name: ObjectIsDictionary()
  nameWithType: Utilities.ObjectIsDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  name: ObjectIsKeyValuePair()
  nameWithType: Utilities.ObjectIsKeyValuePair()
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  name: ObjectIsTuple()
  nameWithType: Utilities.ObjectIsTuple()
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  name: ObjectToEnumerable()
  nameWithType: Utilities.ObjectToEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  name: ObjectToEnumerable<T>()
  nameWithType: Utilities.ObjectToEnumerable<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>()
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)()
  name.vb: ObjectToEnumerable(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  name: ObjectToSet<T>()
  nameWithType: Utilities.ObjectToSet<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>()
  nameWithType.vb: Utilities.ObjectToSet(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)()
  name.vb: ObjectToSet(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  name: ObjectToList()
  nameWithType: Utilities.ObjectToList()
  fullName: GRYLibrary.Core.Utilities.ObjectToList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  name: ObjectToList<T>()
  nameWithType: Utilities.ObjectToList<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>()
  nameWithType.vb: Utilities.ObjectToList(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)()
  name.vb: ObjectToList(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  name: ObjectToDictionary()
  nameWithType: Utilities.ObjectToDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  name: ObjectToDictionary<TKey, TValue>()
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)()
  name.vb: ObjectToDictionary(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  name: ObjectToKeyValuePair<TKey, TValue>()
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  name: ObjectToTuple<T1, T2>()
  nameWithType: Utilities.ObjectToTuple<T1, T2>()
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>()
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)()
  name.vb: ObjectToTuple(Of T1, T2)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ToDynamic
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: Utilities.ToDynamic()
  fullName: GRYLibrary.Core.Utilities.ToDynamic()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.GRYLog.GRYLibrary.Core.Utilities.DeepClone``1
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<GRYLog>()
  nameWithType: Utilities.DeepClone<GRYLog>()
  fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Log.GRYLog>()
  nameWithType.vb: Utilities.DeepClone(Of GRYLog)()
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Log.GRYLog)()
  name.vb: DeepClone(Of GRYLog)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone<GRYLog>
    nameWithType: Utilities.DeepClone<GRYLog>
    fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Log.GRYLog>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone(Of GRYLog)
    nameWithType: Utilities.DeepClone(Of GRYLog)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Log.GRYLog)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.GRYLog.GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
  commentId: M:GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  name: PersistToDisk<GRYLog>(String)
  nameWithType: Utilities.PersistToDisk<GRYLog>(String)
  fullName: GRYLibrary.Core.Utilities.PersistToDisk<GRYLibrary.Core.Log.GRYLog>(System.String)
  nameWithType.vb: Utilities.PersistToDisk(Of GRYLog)(String)
  fullName.vb: GRYLibrary.Core.Utilities.PersistToDisk(Of GRYLibrary.Core.Log.GRYLog)(System.String)
  name.vb: PersistToDisk(Of GRYLog)(String)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
    name: PersistToDisk<GRYLog>
    nameWithType: Utilities.PersistToDisk<GRYLog>
    fullName: GRYLibrary.Core.Utilities.PersistToDisk<GRYLibrary.Core.Log.GRYLog>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
    name: PersistToDisk(Of GRYLog)
    nameWithType: Utilities.PersistToDisk(Of GRYLog)
    fullName: GRYLibrary.Core.Utilities.PersistToDisk(Of GRYLibrary.Core.Log.GRYLog)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  name: NullSafeEquals(Object)
  nameWithType: Utilities.NullSafeEquals(Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  isExternal: true
  name: ObjectIsEnumerable(Object)
  nameWithType: Utilities.ObjectIsEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities
  commentId: T:GRYLibrary.Core.Utilities
  parent: GRYLibrary.Core
  name: Utilities
  nameWithType: Utilities
  fullName: GRYLibrary.Core.Utilities
- uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  isExternal: true
  name: ObjectIsSet(Object)
  nameWithType: Utilities.ObjectIsSet(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  isExternal: true
  name: ObjectIsList(Object)
  nameWithType: Utilities.ObjectIsList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  isExternal: true
  name: ObjectIsDictionary(Object)
  nameWithType: Utilities.ObjectIsDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  isExternal: true
  name: ObjectIsKeyValuePair(Object)
  nameWithType: Utilities.ObjectIsKeyValuePair(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  isExternal: true
  name: ObjectIsTuple(Object)
  nameWithType: Utilities.ObjectIsTuple(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  isExternal: true
  name: ObjectToEnumerable(Object)
  nameWithType: Utilities.ObjectToEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  isExternal: true
  name: ObjectToEnumerable<T>(Object)
  nameWithType: Utilities.ObjectToEnumerable<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)(System.Object)
  name.vb: ObjectToEnumerable(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  isExternal: true
  name: ObjectToSet<T>(Object)
  nameWithType: Utilities.ObjectToSet<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToSet(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)(System.Object)
  name.vb: ObjectToSet(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  isExternal: true
  name: ObjectToList(Object)
  nameWithType: Utilities.ObjectToList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  isExternal: true
  name: ObjectToList<T>(Object)
  nameWithType: Utilities.ObjectToList<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToList(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)(System.Object)
  name.vb: ObjectToList(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  isExternal: true
  name: ObjectToDictionary(Object)
  nameWithType: Utilities.ObjectToDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  isExternal: true
  name: ObjectToDictionary<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)(System.Object)
  name.vb: ObjectToDictionary(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  isExternal: true
  name: ObjectToKeyValuePair<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)(System.Object)
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  isExternal: true
  name: ObjectToTuple<T1, T2>(Object)
  nameWithType: Utilities.ObjectToTuple<T1, T2>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>(System.Object)
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)(System.Object)
  name.vb: ObjectToTuple(Of T1, T2)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: Utilities.ToDynamic(Object)
  fullName: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: Utilities.DeepClone<T>(T)
  fullName: GRYLibrary.Core.Utilities.DeepClone<T>(T)
  nameWithType.vb: Utilities.DeepClone(Of T)(T)
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: Utilities.DeepClone<T>
    fullName: GRYLibrary.Core.Utilities.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: Utilities.DeepClone(Of T)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  commentId: M:GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  isExternal: true
  name: PersistToDisk<T>(T, String)
  nameWithType: Utilities.PersistToDisk<T>(T, String)
  fullName: GRYLibrary.Core.Utilities.PersistToDisk<T>(T, System.String)
  nameWithType.vb: Utilities.PersistToDisk(Of T)(T, String)
  fullName.vb: GRYLibrary.Core.Utilities.PersistToDisk(Of T)(T, System.String)
  name.vb: PersistToDisk(Of T)(T, String)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
    name: PersistToDisk<T>
    nameWithType: Utilities.PersistToDisk<T>
    fullName: GRYLibrary.Core.Utilities.PersistToDisk<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
    name: PersistToDisk(Of T)
    nameWithType: Utilities.PersistToDisk(Of T)
    fullName: GRYLibrary.Core.Utilities.PersistToDisk(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  isExternal: true
  name: NullSafeEquals(Object, Object)
  nameWithType: Utilities.NullSafeEquals(Object, Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object, System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core
  commentId: N:GRYLibrary.Core
  name: GRYLibrary.Core
  nameWithType: GRYLibrary.Core
  fullName: GRYLibrary.Core
- uid: GRYLibrary.Core.Log.GRYLog.Configuration*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.Configuration
  name: Configuration
  nameWithType: GRYLog.Configuration
  fullName: GRYLibrary.Core.Log.GRYLog.Configuration
- uid: GRYLibrary.Core.Log.GRYLogConfiguration
  commentId: T:GRYLibrary.Core.Log.GRYLogConfiguration
  parent: GRYLibrary.Core.Log
  name: GRYLogConfiguration
  nameWithType: GRYLogConfiguration
  fullName: GRYLibrary.Core.Log.GRYLogConfiguration
- uid: GRYLibrary.Core.Log.GRYLog.NewLogItemEventHandler
  commentId: T:GRYLibrary.Core.Log.GRYLog.NewLogItemEventHandler
  parent: GRYLibrary.Core.Log
  name: GRYLog.NewLogItemEventHandler
  nameWithType: GRYLog.NewLogItemEventHandler
  fullName: GRYLibrary.Core.Log.GRYLog.NewLogItemEventHandler
- uid: GRYLibrary.Core.Log.GRYLog.ErrorOccurredEventHandler
  commentId: T:GRYLibrary.Core.Log.GRYLog.ErrorOccurredEventHandler
  parent: GRYLibrary.Core.Log
  name: GRYLog.ErrorOccurredEventHandler
  nameWithType: GRYLog.ErrorOccurredEventHandler
  fullName: GRYLibrary.Core.Log.GRYLog.ErrorOccurredEventHandler
- uid: GRYLibrary.Core.Log.GRYLog.#ctor*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.#ctor
  name: GRYLog
  nameWithType: GRYLog.GRYLog
  fullName: GRYLibrary.Core.Log.GRYLog.GRYLog
- uid: GRYLibrary.Core.Log.GRYLog.Create*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.Create
  name: Create
  nameWithType: GRYLog.Create
  fullName: GRYLibrary.Core.Log.GRYLog.Create
- uid: GRYLibrary.Core.Log.GRYLog
  commentId: T:GRYLibrary.Core.Log.GRYLog
  parent: GRYLibrary.Core.Log
  name: GRYLog
  nameWithType: GRYLog
  fullName: GRYLibrary.Core.Log.GRYLog
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GRYLibrary.Core.Log.GRYLog.CreateByConfigurationFile*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.CreateByConfigurationFile
  name: CreateByConfigurationFile
  nameWithType: GRYLog.CreateByConfigurationFile
  fullName: GRYLibrary.Core.Log.GRYLog.CreateByConfigurationFile
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.GRYLog.GetHashCode*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.GetHashCode
  name: GetHashCode
  nameWithType: GRYLog.GetHashCode
  fullName: GRYLibrary.Core.Log.GRYLog.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.GRYLog.Equals*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.Equals
  name: Equals
  nameWithType: GRYLog.Equals
  fullName: GRYLibrary.Core.Log.GRYLog.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GRYLibrary.Core.Log.GRYLog.GetAmountOfErrors*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.GetAmountOfErrors
  name: GetAmountOfErrors
  nameWithType: GRYLog.GetAmountOfErrors
  fullName: GRYLibrary.Core.Log.GRYLog.GetAmountOfErrors
- uid: GRYLibrary.Core.Log.GRYLog.GetAmountOfWarnings*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.GetAmountOfWarnings
  name: GetAmountOfWarnings
  nameWithType: GRYLog.GetAmountOfWarnings
  fullName: GRYLibrary.Core.Log.GRYLog.GetAmountOfWarnings
- uid: GRYLibrary.Core.Log.GRYLog.LogGeneralProgramInformation*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.LogGeneralProgramInformation
  name: LogGeneralProgramInformation
  nameWithType: GRYLog.LogGeneralProgramInformation
  fullName: GRYLibrary.Core.Log.GRYLog.LogGeneralProgramInformation
- uid: GRYLibrary.Core.Log.GRYLog.LogCurrentSystemStatistics*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.LogCurrentSystemStatistics
  name: LogCurrentSystemStatistics
  nameWithType: GRYLog.LogCurrentSystemStatistics
  fullName: GRYLibrary.Core.Log.GRYLog.LogCurrentSystemStatistics
- uid: GRYLibrary.Core.Log.GRYLog.LogSummary*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.LogSummary
  name: LogSummary
  nameWithType: GRYLog.LogSummary
  fullName: GRYLibrary.Core.Log.GRYLog.LogSummary
- uid: GRYLibrary.Core.Log.GRYLog.Log*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.Log
  name: Log
  nameWithType: GRYLog.Log
  fullName: GRYLibrary.Core.Log.GRYLog.Log
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.LogItem
  commentId: T:GRYLibrary.Core.Log.LogItem
  parent: GRYLibrary.Core.Log
  name: LogItem
  nameWithType: LogItem
  fullName: GRYLibrary.Core.Log.LogItem
- uid: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.ExecuteAndLog
  name: ExecuteAndLog
  nameWithType: GRYLog.ExecuteAndLog
  fullName: GRYLibrary.Core.Log.GRYLog.ExecuteAndLog
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Func{{TResult}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: GRYLibrary.Core.Log.GRYLog.Dispose*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.Dispose
  name: Dispose
  nameWithType: GRYLog.Dispose
  fullName: GRYLibrary.Core.Log.GRYLog.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.GRYLog.UseSubNamespace*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.UseSubNamespace
  name: UseSubNamespace
  nameWithType: GRYLog.UseSubNamespace
  fullName: GRYLibrary.Core.Log.GRYLog.UseSubNamespace
- uid: GRYLibrary.Core.Log.GRYLog.IsEnabled*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.IsEnabled
  name: IsEnabled
  nameWithType: GRYLog.IsEnabled
  fullName: GRYLibrary.Core.Log.GRYLog.IsEnabled
- uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.ILogger
  isExternal: true
  name: IsEnabled(LogLevel)
  nameWithType: ILogger.IsEnabled(LogLevel)
  fullName: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
    name: IsEnabled
    nameWithType: ILogger.IsEnabled
    fullName: Microsoft.Extensions.Logging.ILogger.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
    name: IsEnabled
    nameWithType: ILogger.IsEnabled
    fullName: Microsoft.Extensions.Logging.ILogger.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.GRYLog.BeginScope*
  commentId: Overload:GRYLibrary.Core.Log.GRYLog.BeginScope
  name: BeginScope
  nameWithType: GRYLog.BeginScope
  fullName: GRYLibrary.Core.Log.GRYLog.BeginScope
- uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1({TState})
  commentId: M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  parent: Microsoft.Extensions.Logging.ILogger
  definition: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  name: BeginScope<TState>(TState)
  nameWithType: ILogger.BeginScope<TState>(TState)
  fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>(TState)
  nameWithType.vb: ILogger.BeginScope(Of TState)(TState)
  fullName.vb: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope<TState>
    nameWithType: ILogger.BeginScope<TState>
    fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope(Of TState)
    nameWithType: ILogger.BeginScope(Of TState)
    fullName: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  commentId: M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  isExternal: true
  name: BeginScope<TState>(TState)
  nameWithType: ILogger.BeginScope<TState>(TState)
  fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>(TState)
  nameWithType.vb: ILogger.BeginScope(Of TState)(TState)
  fullName.vb: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope<TState>
    nameWithType: ILogger.BeginScope<TState>
    fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope(Of TState)
    nameWithType: ILogger.BeginScope(Of TState)
    fullName: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: )
    nameWithType: )
    fullName: )
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,{TState},System.Exception,System.Func{{TState},System.Exception,System.String})
  commentId: M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  parent: Microsoft.Extensions.Logging.ILogger
  definition: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  nameWithType: ILogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, System.String>)
  nameWithType.vb: ILogger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullName.vb: Microsoft.Extensions.Logging.ILogger.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, System.String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log<TState>
    nameWithType: ILogger.Log<TState>
    fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    nameWithType: EventId
    fullName: Microsoft.Extensions.Logging.EventId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log(Of TState)
    nameWithType: ILogger.Log(Of TState)
    fullName: Microsoft.Extensions.Logging.ILogger.Log(Of TState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    nameWithType: EventId
    fullName: Microsoft.Extensions.Logging.EventId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.EventId
  commentId: T:Microsoft.Extensions.Logging.EventId
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: EventId
  nameWithType: EventId
  fullName: Microsoft.Extensions.Logging.EventId
- uid: System.Func{{TState},System.Exception,System.String}
  commentId: T:System.Func{``0,System.Exception,System.String}
  parent: System
  definition: System.Func`3
  name: Func<TState, Exception, String>
  nameWithType: Func<TState, Exception, String>
  fullName: System.Func<TState, System.Exception, System.String>
  nameWithType.vb: Func(Of TState, Exception, String)
  fullName.vb: System.Func(Of TState, System.Exception, System.String)
  name.vb: Func(Of TState, Exception, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  commentId: M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  isExternal: true
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  nameWithType: ILogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>)
  fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, System.String>)
  nameWithType.vb: ILogger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullName.vb: Microsoft.Extensions.Logging.ILogger.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, System.String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log<TState>
    nameWithType: ILogger.Log<TState>
    fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    nameWithType: EventId
    fullName: Microsoft.Extensions.Logging.EventId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log(Of TState)
    nameWithType: ILogger.Log(Of TState)
    fullName: Microsoft.Extensions.Logging.ILogger.Log(Of TState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    nameWithType: EventId
    fullName: Microsoft.Extensions.Logging.EventId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
