### YamlMime:ManagedReference
items:
- uid: GRYLibrary.Core.WriteableTuple`2
  commentId: T:GRYLibrary.Core.WriteableTuple`2
  id: WriteableTuple`2
  parent: GRYLibrary.Core
  children:
  - GRYLibrary.Core.WriteableTuple`2.#ctor
  - GRYLibrary.Core.WriteableTuple`2.#ctor(`0,`1)
  - GRYLibrary.Core.WriteableTuple`2.Equals(System.Object)
  - GRYLibrary.Core.WriteableTuple`2.GetHashCode
  - GRYLibrary.Core.WriteableTuple`2.Item1
  - GRYLibrary.Core.WriteableTuple`2.Item2
  langs:
  - csharp
  - vb
  name: WriteableTuple<T1, T2>
  nameWithType: WriteableTuple<T1, T2>
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>
  type: Class
  source:
    id: WriteableTuple
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\WriteableTuple.cs
    startLine: 6
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: 'public class WriteableTuple<T1, T2> : Tuple<T1, T2>, IStructuralComparable, IStructuralEquatable, IComparable, ITuple'
    typeParameters:
    - id: T1
    - id: T2
    content.vb: >-
      Public Class WriteableTuple(Of T1, T2)

          Inherits Tuple(Of T1, T2)

          Implements IStructuralComparable, IStructuralEquatable, IComparable, ITuple
  inheritance:
  - System.Object
  - System.Tuple{{T1},{T2}}
  implements:
  - System.Collections.IStructuralComparable
  - System.Collections.IStructuralEquatable
  - System.IComparable
  - System.Runtime.CompilerServices.ITuple
  inheritedMembers:
  - System.Tuple{{T1},{T2}}.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
  - System.Tuple{{T1},{T2}}.Equals(System.Object)
  - System.Tuple{{T1},{T2}}.GetHashCode
  - System.Tuple{{T1},{T2}}.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  - System.Tuple{{T1},{T2}}.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  - System.Tuple{{T1},{T2}}.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  - System.Tuple{{T1},{T2}}.System#IComparable#CompareTo(System.Object)
  - System.Tuple{{T1},{T2}}.ToString
  - System.Tuple{{T1},{T2}}.Item1
  - System.Tuple{{T1},{T2}}.Item2
  - System.Tuple{{T1},{T2}}.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  - System.Tuple{{T1},{T2}}.System#Runtime#CompilerServices#ITuple#Length
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  - System.Tuple{`0,`1}.GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{{T1},{T2}})
  - System.Object.GRYLibrary.Core.Utilities.ToDynamic
  - GRYLibrary.Core.WriteableTuple`2.GRYLibrary.Core.Utilities.DeepClone``1
  - GRYLibrary.Core.WriteableTuple`2.GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
  - System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  nameWithType.vb: WriteableTuple(Of T1, T2)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2)
  name.vb: WriteableTuple(Of T1, T2)
- uid: GRYLibrary.Core.WriteableTuple`2.#ctor
  commentId: M:GRYLibrary.Core.WriteableTuple`2.#ctor
  id: '#ctor'
  parent: GRYLibrary.Core.WriteableTuple`2
  langs:
  - csharp
  - vb
  name: WriteableTuple()
  nameWithType: WriteableTuple<T1, T2>.WriteableTuple()
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.WriteableTuple()
  type: Constructor
  source:
    id: .ctor
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\WriteableTuple.cs
    startLine: 8
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public WriteableTuple()
    content.vb: Public Sub New
  overload: GRYLibrary.Core.WriteableTuple`2.#ctor*
  nameWithType.vb: WriteableTuple(Of T1, T2).WriteableTuple()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).WriteableTuple()
- uid: GRYLibrary.Core.WriteableTuple`2.#ctor(`0,`1)
  commentId: M:GRYLibrary.Core.WriteableTuple`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: GRYLibrary.Core.WriteableTuple`2
  langs:
  - csharp
  - vb
  name: WriteableTuple(T1, T2)
  nameWithType: WriteableTuple<T1, T2>.WriteableTuple(T1, T2)
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.WriteableTuple(T1, T2)
  type: Constructor
  source:
    id: .ctor
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\WriteableTuple.cs
    startLine: 11
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public WriteableTuple(T1 item1, T2 item2)
    parameters:
    - id: item1
      type: '{T1}'
    - id: item2
      type: '{T2}'
    content.vb: Public Sub New(item1 As T1, item2 As T2)
  overload: GRYLibrary.Core.WriteableTuple`2.#ctor*
  nameWithType.vb: WriteableTuple(Of T1, T2).WriteableTuple(T1, T2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).WriteableTuple(T1, T2)
- uid: GRYLibrary.Core.WriteableTuple`2.Item1
  commentId: P:GRYLibrary.Core.WriteableTuple`2.Item1
  id: Item1
  parent: GRYLibrary.Core.WriteableTuple`2
  langs:
  - csharp
  - vb
  name: Item1
  nameWithType: WriteableTuple<T1, T2>.Item1
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.Item1
  type: Property
  source:
    id: Item1
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\WriteableTuple.cs
    startLine: 16
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public T1 Item1 { get; set; }
    parameters: []
    return:
      type: '{T1}'
    content.vb: Public Property Item1 As T1
  overload: GRYLibrary.Core.WriteableTuple`2.Item1*
  nameWithType.vb: WriteableTuple(Of T1, T2).Item1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).Item1
- uid: GRYLibrary.Core.WriteableTuple`2.Item2
  commentId: P:GRYLibrary.Core.WriteableTuple`2.Item2
  id: Item2
  parent: GRYLibrary.Core.WriteableTuple`2
  langs:
  - csharp
  - vb
  name: Item2
  nameWithType: WriteableTuple<T1, T2>.Item2
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.Item2
  type: Property
  source:
    id: Item2
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\WriteableTuple.cs
    startLine: 17
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public T2 Item2 { get; set; }
    parameters: []
    return:
      type: '{T2}'
    content.vb: Public Property Item2 As T2
  overload: GRYLibrary.Core.WriteableTuple`2.Item2*
  nameWithType.vb: WriteableTuple(Of T1, T2).Item2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).Item2
- uid: GRYLibrary.Core.WriteableTuple`2.GetHashCode
  commentId: M:GRYLibrary.Core.WriteableTuple`2.GetHashCode
  id: GetHashCode
  parent: GRYLibrary.Core.WriteableTuple`2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: WriteableTuple<T1, T2>.GetHashCode()
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\WriteableTuple.cs
    startLine: 18
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Tuple{{T1},{T2}}.GetHashCode
  overload: GRYLibrary.Core.WriteableTuple`2.GetHashCode*
  nameWithType.vb: WriteableTuple(Of T1, T2).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).GetHashCode()
- uid: GRYLibrary.Core.WriteableTuple`2.Equals(System.Object)
  commentId: M:GRYLibrary.Core.WriteableTuple`2.Equals(System.Object)
  id: Equals(System.Object)
  parent: GRYLibrary.Core.WriteableTuple`2
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: WriteableTuple<T1, T2>.Equals(Object)
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\WriteableTuple.cs
    startLine: 23
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Tuple{{T1},{T2}}.Equals(System.Object)
  overload: GRYLibrary.Core.WriteableTuple`2.Equals*
  nameWithType.vb: WriteableTuple(Of T1, T2).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).Equals(System.Object)
references:
- uid: GRYLibrary.Core
  commentId: N:GRYLibrary.Core
  name: GRYLibrary.Core
  nameWithType: GRYLibrary.Core
  fullName: GRYLibrary.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Tuple{{T1},{T2}}
  commentId: T:System.Tuple{``0,``1}
  parent: System
  definition: System.Tuple`2
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IStructuralComparable
  commentId: T:System.Collections.IStructuralComparable
  parent: System.Collections
  isExternal: true
  name: IStructuralComparable
  nameWithType: IStructuralComparable
  fullName: System.Collections.IStructuralComparable
- uid: System.Collections.IStructuralEquatable
  commentId: T:System.Collections.IStructuralEquatable
  parent: System.Collections
  isExternal: true
  name: IStructuralEquatable
  nameWithType: IStructuralEquatable
  fullName: System.Collections.IStructuralEquatable
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Runtime.CompilerServices.ITuple
  commentId: T:System.Runtime.CompilerServices.ITuple
  parent: System.Runtime.CompilerServices
  isExternal: true
  name: ITuple
  nameWithType: ITuple
  fullName: System.Runtime.CompilerServices.ITuple
- uid: System.Tuple{{T1},{T2}}.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
  commentId: M:System.Tuple{`0,`1}.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
  name: ITuple.get_Item(Int32)
  nameWithType: Tuple<T1, T2>.ITuple.get_Item(Int32)
  fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.get_Item(System.Int32)
  nameWithType.vb: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.get_Item(Int32)
  fullName.vb: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.get_Item(System.Int32)
  name.vb: System.Runtime.CompilerServices.ITuple.get_Item(Int32)
  spec.csharp:
  - uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
    name: ITuple.get_Item
    nameWithType: Tuple<T1, T2>.ITuple.get_Item
    fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
    name: System.Runtime.CompilerServices.ITuple.get_Item
    nameWithType: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.get_Item
    fullName: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.Equals(System.Object)
  commentId: M:System.Tuple{`0,`1}.Equals(System.Object)
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.Equals(System.Object)
  name: Equals(Object)
  nameWithType: Tuple<T1, T2>.Equals(Object)
  fullName: System.Tuple<T1, T2>.Equals(System.Object)
  nameWithType.vb: Tuple(Of T1, T2).Equals(Object)
  fullName.vb: System.Tuple(Of T1, T2).Equals(System.Object)
  spec.csharp:
  - uid: System.Tuple`2.Equals(System.Object)
    name: Equals
    nameWithType: Tuple<T1, T2>.Equals
    fullName: System.Tuple<T1, T2>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.Equals(System.Object)
    name: Equals
    nameWithType: Tuple(Of T1, T2).Equals
    fullName: System.Tuple(Of T1, T2).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.GetHashCode
  commentId: M:System.Tuple{`0,`1}.GetHashCode
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.GetHashCode
  name: GetHashCode()
  nameWithType: Tuple<T1, T2>.GetHashCode()
  fullName: System.Tuple<T1, T2>.GetHashCode()
  nameWithType.vb: Tuple(Of T1, T2).GetHashCode()
  fullName.vb: System.Tuple(Of T1, T2).GetHashCode()
  spec.csharp:
  - uid: System.Tuple`2.GetHashCode
    name: GetHashCode
    nameWithType: Tuple<T1, T2>.GetHashCode
    fullName: System.Tuple<T1, T2>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.GetHashCode
    name: GetHashCode
    nameWithType: Tuple(Of T1, T2).GetHashCode
    fullName: System.Tuple(Of T1, T2).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  commentId: M:System.Tuple{`0,`1}.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  name: IStructuralComparable.CompareTo(Object, IComparer)
  nameWithType: Tuple<T1, T2>.IStructuralComparable.CompareTo(Object, IComparer)
  fullName: System.Tuple<T1, T2>.System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)
  nameWithType.vb: Tuple(Of T1, T2).System.Collections.IStructuralComparable.CompareTo(Object, IComparer)
  fullName.vb: System.Tuple(Of T1, T2).System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)
  name.vb: System.Collections.IStructuralComparable.CompareTo(Object, IComparer)
  spec.csharp:
  - uid: System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
    name: IStructuralComparable.CompareTo
    nameWithType: Tuple<T1, T2>.IStructuralComparable.CompareTo
    fullName: System.Tuple<T1, T2>.System.Collections.IStructuralComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IComparer
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.IComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
    name: System.Collections.IStructuralComparable.CompareTo
    nameWithType: Tuple(Of T1, T2).System.Collections.IStructuralComparable.CompareTo
    fullName: System.Tuple(Of T1, T2).System.Collections.IStructuralComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IComparer
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.IComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  commentId: M:System.Tuple{`0,`1}.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  name: IStructuralEquatable.Equals(Object, IEqualityComparer)
  nameWithType: Tuple<T1, T2>.IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName: System.Tuple<T1, T2>.System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)
  nameWithType.vb: Tuple(Of T1, T2).System.Collections.IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName.vb: System.Tuple(Of T1, T2).System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)
  name.vb: System.Collections.IStructuralEquatable.Equals(Object, IEqualityComparer)
  spec.csharp:
  - uid: System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
    name: IStructuralEquatable.Equals
    nameWithType: Tuple<T1, T2>.IStructuralEquatable.Equals
    fullName: System.Tuple<T1, T2>.System.Collections.IStructuralEquatable.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
    name: System.Collections.IStructuralEquatable.Equals
    nameWithType: Tuple(Of T1, T2).System.Collections.IStructuralEquatable.Equals
    fullName: System.Tuple(Of T1, T2).System.Collections.IStructuralEquatable.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  commentId: M:System.Tuple{`0,`1}.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  name: IStructuralEquatable.GetHashCode(IEqualityComparer)
  nameWithType: Tuple<T1, T2>.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: System.Tuple<T1, T2>.System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
  nameWithType.vb: Tuple(Of T1, T2).System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName.vb: System.Tuple(Of T1, T2).System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
  name.vb: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  spec.csharp:
  - uid: System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
    name: IStructuralEquatable.GetHashCode
    nameWithType: Tuple<T1, T2>.IStructuralEquatable.GetHashCode
    fullName: System.Tuple<T1, T2>.System.Collections.IStructuralEquatable.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
    name: System.Collections.IStructuralEquatable.GetHashCode
    nameWithType: Tuple(Of T1, T2).System.Collections.IStructuralEquatable.GetHashCode
    fullName: System.Tuple(Of T1, T2).System.Collections.IStructuralEquatable.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Tuple{`0,`1}.System#IComparable#CompareTo(System.Object)
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.System#IComparable#CompareTo(System.Object)
  name: IComparable.CompareTo(Object)
  nameWithType: Tuple<T1, T2>.IComparable.CompareTo(Object)
  fullName: System.Tuple<T1, T2>.System.IComparable.CompareTo(System.Object)
  nameWithType.vb: Tuple(Of T1, T2).System.IComparable.CompareTo(Object)
  fullName.vb: System.Tuple(Of T1, T2).System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
  spec.csharp:
  - uid: System.Tuple`2.System#IComparable#CompareTo(System.Object)
    name: IComparable.CompareTo
    nameWithType: Tuple<T1, T2>.IComparable.CompareTo
    fullName: System.Tuple<T1, T2>.System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#IComparable#CompareTo(System.Object)
    name: System.IComparable.CompareTo
    nameWithType: Tuple(Of T1, T2).System.IComparable.CompareTo
    fullName: System.Tuple(Of T1, T2).System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.ToString
  commentId: M:System.Tuple{`0,`1}.ToString
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.ToString
  name: ToString()
  nameWithType: Tuple<T1, T2>.ToString()
  fullName: System.Tuple<T1, T2>.ToString()
  nameWithType.vb: Tuple(Of T1, T2).ToString()
  fullName.vb: System.Tuple(Of T1, T2).ToString()
  spec.csharp:
  - uid: System.Tuple`2.ToString
    name: ToString
    nameWithType: Tuple<T1, T2>.ToString
    fullName: System.Tuple<T1, T2>.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.ToString
    name: ToString
    nameWithType: Tuple(Of T1, T2).ToString
    fullName: System.Tuple(Of T1, T2).ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.Item1
  commentId: P:System.Tuple{`0,`1}.Item1
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.Item1
  name: Item1
  nameWithType: Tuple<T1, T2>.Item1
  fullName: System.Tuple<T1, T2>.Item1
  nameWithType.vb: Tuple(Of T1, T2).Item1
  fullName.vb: System.Tuple(Of T1, T2).Item1
- uid: System.Tuple{{T1},{T2}}.Item2
  commentId: P:System.Tuple{`0,`1}.Item2
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.Item2
  name: Item2
  nameWithType: Tuple<T1, T2>.Item2
  fullName: System.Tuple<T1, T2>.Item2
  nameWithType.vb: Tuple(Of T1, T2).Item2
  fullName.vb: System.Tuple(Of T1, T2).Item2
- uid: System.Tuple{{T1},{T2}}.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  commentId: P:System.Tuple{`0,`1}.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  name: ITuple.Item[Int32]
  nameWithType: Tuple<T1, T2>.ITuple.Item[Int32]
  fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.Item[System.Int32]
  nameWithType.vb: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Item(Int32)
  fullName.vb: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Item(System.Int32)
  name.vb: System.Runtime.CompilerServices.ITuple.Item(Int32)
  spec.csharp:
  - uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
    name: ITuple.Item
    nameWithType: Tuple<T1, T2>.ITuple.Item
    fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
    name: System.Runtime.CompilerServices.ITuple.Item
    nameWithType: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Item
    fullName: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{{T1},{T2}}.System#Runtime#CompilerServices#ITuple#Length
  commentId: P:System.Tuple{`0,`1}.System#Runtime#CompilerServices#ITuple#Length
  parent: System.Tuple{{T1},{T2}}
  definition: System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length
  name: ITuple.Length
  nameWithType: Tuple<T1, T2>.ITuple.Length
  fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.Length
  nameWithType.vb: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Length
  fullName.vb: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Length
  name.vb: System.Runtime.CompilerServices.ITuple.Length
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  name: ObjectIsEnumerable()
  nameWithType: Utilities.ObjectIsEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  name: ObjectIsSet()
  nameWithType: Utilities.ObjectIsSet()
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  name: ObjectIsList()
  nameWithType: Utilities.ObjectIsList()
  fullName: GRYLibrary.Core.Utilities.ObjectIsList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  name: ObjectIsDictionary()
  nameWithType: Utilities.ObjectIsDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  name: ObjectIsKeyValuePair()
  nameWithType: Utilities.ObjectIsKeyValuePair()
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  name: ObjectIsTuple()
  nameWithType: Utilities.ObjectIsTuple()
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  name: ObjectToEnumerable()
  nameWithType: Utilities.ObjectToEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  name: ObjectToEnumerable<T>()
  nameWithType: Utilities.ObjectToEnumerable<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>()
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)()
  name.vb: ObjectToEnumerable(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  name: ObjectToSet<T>()
  nameWithType: Utilities.ObjectToSet<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>()
  nameWithType.vb: Utilities.ObjectToSet(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)()
  name.vb: ObjectToSet(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  name: ObjectToList()
  nameWithType: Utilities.ObjectToList()
  fullName: GRYLibrary.Core.Utilities.ObjectToList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  name: ObjectToList<T>()
  nameWithType: Utilities.ObjectToList<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>()
  nameWithType.vb: Utilities.ObjectToList(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)()
  name.vb: ObjectToList(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  name: ObjectToDictionary()
  nameWithType: Utilities.ObjectToDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  name: ObjectToDictionary<TKey, TValue>()
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)()
  name.vb: ObjectToDictionary(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  name: ObjectToKeyValuePair<TKey, TValue>()
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  name: ObjectToTuple<T1, T2>()
  nameWithType: Utilities.ObjectToTuple<T1, T2>()
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>()
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)()
  name.vb: ObjectToTuple(Of T1, T2)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{`0,`1}.GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{{T1},{T2}})
  commentId: M:GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{``0,``1},System.Tuple{``0,``1})
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{``0,``1},System.Tuple{``0,``1})
  name: TupleEquals<T1, T2>(Tuple<T1, T2>)
  nameWithType: Utilities.TupleEquals<T1, T2>(Tuple<T1, T2>)
  fullName: GRYLibrary.Core.Utilities.TupleEquals<T1, T2>(System.Tuple<T1, T2>)
  nameWithType.vb: Utilities.TupleEquals(Of T1, T2)(Tuple(Of T1, T2))
  fullName.vb: GRYLibrary.Core.Utilities.TupleEquals(Of T1, T2)(System.Tuple(Of T1, T2))
  name.vb: TupleEquals(Of T1, T2)(Tuple(Of T1, T2))
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{``0,``1})
    name: TupleEquals<T1, T2>
    nameWithType: Utilities.TupleEquals<T1, T2>
    fullName: GRYLibrary.Core.Utilities.TupleEquals<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{``0,``1})
    name: TupleEquals(Of T1, T2)
    nameWithType: Utilities.TupleEquals(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.TupleEquals(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ToDynamic
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: Utilities.ToDynamic()
  fullName: GRYLibrary.Core.Utilities.ToDynamic()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.WriteableTuple`2.GRYLibrary.Core.Utilities.DeepClone``1
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<WriteableTuple<T1, T2>>()
  nameWithType: Utilities.DeepClone<WriteableTuple<T1, T2>>()
  fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.WriteableTuple<T1, T2>>()
  nameWithType.vb: Utilities.DeepClone(Of WriteableTuple(Of T1, T2))()
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.WriteableTuple(Of T1, T2))()
  name.vb: DeepClone(Of WriteableTuple(Of T1, T2))()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone<WriteableTuple<T1, T2>>
    nameWithType: Utilities.DeepClone<WriteableTuple<T1, T2>>
    fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.WriteableTuple<T1, T2>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone(Of WriteableTuple(Of T1, T2))
    nameWithType: Utilities.DeepClone(Of WriteableTuple(Of T1, T2))
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.WriteableTuple(Of T1, T2))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.WriteableTuple`2.GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
  commentId: M:GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  name: PersistToDisk<WriteableTuple<T1, T2>>(String)
  nameWithType: Utilities.PersistToDisk<WriteableTuple<T1, T2>>(String)
  fullName: GRYLibrary.Core.Utilities.PersistToDisk<GRYLibrary.Core.WriteableTuple<T1, T2>>(System.String)
  nameWithType.vb: Utilities.PersistToDisk(Of WriteableTuple(Of T1, T2))(String)
  fullName.vb: GRYLibrary.Core.Utilities.PersistToDisk(Of GRYLibrary.Core.WriteableTuple(Of T1, T2))(System.String)
  name.vb: PersistToDisk(Of WriteableTuple(Of T1, T2))(String)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
    name: PersistToDisk<WriteableTuple<T1, T2>>
    nameWithType: Utilities.PersistToDisk<WriteableTuple<T1, T2>>
    fullName: GRYLibrary.Core.Utilities.PersistToDisk<GRYLibrary.Core.WriteableTuple<T1, T2>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
    name: PersistToDisk(Of WriteableTuple(Of T1, T2))
    nameWithType: Utilities.PersistToDisk(Of WriteableTuple(Of T1, T2))
    fullName: GRYLibrary.Core.Utilities.PersistToDisk(Of GRYLibrary.Core.WriteableTuple(Of T1, T2))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  name: NullSafeEquals(Object)
  nameWithType: Utilities.NullSafeEquals(Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
  isExternal: true
  name: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
  commentId: M:System.Tuple`2.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
  isExternal: true
  name: ITuple.get_Item(Int32)
  nameWithType: Tuple<T1, T2>.ITuple.get_Item(Int32)
  fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.get_Item(System.Int32)
  nameWithType.vb: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.get_Item(Int32)
  fullName.vb: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.get_Item(System.Int32)
  name.vb: System.Runtime.CompilerServices.ITuple.get_Item(Int32)
  spec.csharp:
  - uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
    name: ITuple.get_Item
    nameWithType: Tuple<T1, T2>.ITuple.get_Item
    fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#get_Item(System.Int32)
    name: System.Runtime.CompilerServices.ITuple.get_Item
    nameWithType: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.get_Item
    fullName: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.Equals(System.Object)
  commentId: M:System.Tuple`2.Equals(System.Object)
  isExternal: true
  name: Equals(Object)
  nameWithType: Tuple<T1, T2>.Equals(Object)
  fullName: System.Tuple<T1, T2>.Equals(System.Object)
  nameWithType.vb: Tuple(Of T1, T2).Equals(Object)
  fullName.vb: System.Tuple(Of T1, T2).Equals(System.Object)
  spec.csharp:
  - uid: System.Tuple`2.Equals(System.Object)
    name: Equals
    nameWithType: Tuple<T1, T2>.Equals
    fullName: System.Tuple<T1, T2>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.Equals(System.Object)
    name: Equals
    nameWithType: Tuple(Of T1, T2).Equals
    fullName: System.Tuple(Of T1, T2).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.GetHashCode
  commentId: M:System.Tuple`2.GetHashCode
  isExternal: true
  name: GetHashCode()
  nameWithType: Tuple<T1, T2>.GetHashCode()
  fullName: System.Tuple<T1, T2>.GetHashCode()
  nameWithType.vb: Tuple(Of T1, T2).GetHashCode()
  fullName.vb: System.Tuple(Of T1, T2).GetHashCode()
  spec.csharp:
  - uid: System.Tuple`2.GetHashCode
    name: GetHashCode
    nameWithType: Tuple<T1, T2>.GetHashCode
    fullName: System.Tuple<T1, T2>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.GetHashCode
    name: GetHashCode
    nameWithType: Tuple(Of T1, T2).GetHashCode
    fullName: System.Tuple(Of T1, T2).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  commentId: M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  isExternal: true
  name: IStructuralComparable.CompareTo(Object, IComparer)
  nameWithType: Tuple<T1, T2>.IStructuralComparable.CompareTo(Object, IComparer)
  fullName: System.Tuple<T1, T2>.System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)
  nameWithType.vb: Tuple(Of T1, T2).System.Collections.IStructuralComparable.CompareTo(Object, IComparer)
  fullName.vb: System.Tuple(Of T1, T2).System.Collections.IStructuralComparable.CompareTo(System.Object, System.Collections.IComparer)
  name.vb: System.Collections.IStructuralComparable.CompareTo(Object, IComparer)
  spec.csharp:
  - uid: System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
    name: IStructuralComparable.CompareTo
    nameWithType: Tuple<T1, T2>.IStructuralComparable.CompareTo
    fullName: System.Tuple<T1, T2>.System.Collections.IStructuralComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IComparer
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.IComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
    name: System.Collections.IStructuralComparable.CompareTo
    nameWithType: Tuple(Of T1, T2).System.Collections.IStructuralComparable.CompareTo
    fullName: System.Tuple(Of T1, T2).System.Collections.IStructuralComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IComparer
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.IComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  commentId: M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  isExternal: true
  name: IStructuralEquatable.Equals(Object, IEqualityComparer)
  nameWithType: Tuple<T1, T2>.IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName: System.Tuple<T1, T2>.System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)
  nameWithType.vb: Tuple(Of T1, T2).System.Collections.IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName.vb: System.Tuple(Of T1, T2).System.Collections.IStructuralEquatable.Equals(System.Object, System.Collections.IEqualityComparer)
  name.vb: System.Collections.IStructuralEquatable.Equals(Object, IEqualityComparer)
  spec.csharp:
  - uid: System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
    name: IStructuralEquatable.Equals
    nameWithType: Tuple<T1, T2>.IStructuralEquatable.Equals
    fullName: System.Tuple<T1, T2>.System.Collections.IStructuralEquatable.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
    name: System.Collections.IStructuralEquatable.Equals
    nameWithType: Tuple(Of T1, T2).System.Collections.IStructuralEquatable.Equals
    fullName: System.Tuple(Of T1, T2).System.Collections.IStructuralEquatable.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  commentId: M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  isExternal: true
  name: IStructuralEquatable.GetHashCode(IEqualityComparer)
  nameWithType: Tuple<T1, T2>.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: System.Tuple<T1, T2>.System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
  nameWithType.vb: Tuple(Of T1, T2).System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName.vb: System.Tuple(Of T1, T2).System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)
  name.vb: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  spec.csharp:
  - uid: System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
    name: IStructuralEquatable.GetHashCode
    nameWithType: Tuple<T1, T2>.IStructuralEquatable.GetHashCode
    fullName: System.Tuple<T1, T2>.System.Collections.IStructuralEquatable.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
    name: System.Collections.IStructuralEquatable.GetHashCode
    nameWithType: Tuple(Of T1, T2).System.Collections.IStructuralEquatable.GetHashCode
    fullName: System.Tuple(Of T1, T2).System.Collections.IStructuralEquatable.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEqualityComparer
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.IEqualityComparer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Tuple`2.System#IComparable#CompareTo(System.Object)
  isExternal: true
  name: IComparable.CompareTo(Object)
  nameWithType: Tuple<T1, T2>.IComparable.CompareTo(Object)
  fullName: System.Tuple<T1, T2>.System.IComparable.CompareTo(System.Object)
  nameWithType.vb: Tuple(Of T1, T2).System.IComparable.CompareTo(Object)
  fullName.vb: System.Tuple(Of T1, T2).System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
  spec.csharp:
  - uid: System.Tuple`2.System#IComparable#CompareTo(System.Object)
    name: IComparable.CompareTo
    nameWithType: Tuple<T1, T2>.IComparable.CompareTo
    fullName: System.Tuple<T1, T2>.System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.System#IComparable#CompareTo(System.Object)
    name: System.IComparable.CompareTo
    nameWithType: Tuple(Of T1, T2).System.IComparable.CompareTo
    fullName: System.Tuple(Of T1, T2).System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.ToString
  commentId: M:System.Tuple`2.ToString
  isExternal: true
  name: ToString()
  nameWithType: Tuple<T1, T2>.ToString()
  fullName: System.Tuple<T1, T2>.ToString()
  nameWithType.vb: Tuple(Of T1, T2).ToString()
  fullName.vb: System.Tuple(Of T1, T2).ToString()
  spec.csharp:
  - uid: System.Tuple`2.ToString
    name: ToString
    nameWithType: Tuple<T1, T2>.ToString
    fullName: System.Tuple<T1, T2>.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Tuple`2.ToString
    name: ToString
    nameWithType: Tuple(Of T1, T2).ToString
    fullName: System.Tuple(Of T1, T2).ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.Item1
  commentId: P:System.Tuple`2.Item1
  isExternal: true
  name: Item1
  nameWithType: Tuple<T1, T2>.Item1
  fullName: System.Tuple<T1, T2>.Item1
  nameWithType.vb: Tuple(Of T1, T2).Item1
  fullName.vb: System.Tuple(Of T1, T2).Item1
- uid: System.Tuple`2.Item2
  commentId: P:System.Tuple`2.Item2
  isExternal: true
  name: Item2
  nameWithType: Tuple<T1, T2>.Item2
  fullName: System.Tuple<T1, T2>.Item2
  nameWithType.vb: Tuple(Of T1, T2).Item2
  fullName.vb: System.Tuple(Of T1, T2).Item2
- uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  commentId: P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  isExternal: true
  name: ITuple.Item[Int32]
  nameWithType: Tuple<T1, T2>.ITuple.Item[Int32]
  fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.Item[System.Int32]
  nameWithType.vb: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Item(Int32)
  fullName.vb: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Item(System.Int32)
  name.vb: System.Runtime.CompilerServices.ITuple.Item(Int32)
  spec.csharp:
  - uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
    name: ITuple.Item
    nameWithType: Tuple<T1, T2>.ITuple.Item
    fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
    name: System.Runtime.CompilerServices.ITuple.Item
    nameWithType: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Item
    fullName: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length
  commentId: P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length
  isExternal: true
  name: ITuple.Length
  nameWithType: Tuple<T1, T2>.ITuple.Length
  fullName: System.Tuple<T1, T2>.System.Runtime.CompilerServices.ITuple.Length
  nameWithType.vb: Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Length
  fullName.vb: System.Tuple(Of T1, T2).System.Runtime.CompilerServices.ITuple.Length
  name.vb: System.Runtime.CompilerServices.ITuple.Length
- uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  isExternal: true
  name: ObjectIsEnumerable(Object)
  nameWithType: Utilities.ObjectIsEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities
  commentId: T:GRYLibrary.Core.Utilities
  parent: GRYLibrary.Core
  name: Utilities
  nameWithType: Utilities
  fullName: GRYLibrary.Core.Utilities
- uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  isExternal: true
  name: ObjectIsSet(Object)
  nameWithType: Utilities.ObjectIsSet(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  isExternal: true
  name: ObjectIsList(Object)
  nameWithType: Utilities.ObjectIsList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  isExternal: true
  name: ObjectIsDictionary(Object)
  nameWithType: Utilities.ObjectIsDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  isExternal: true
  name: ObjectIsKeyValuePair(Object)
  nameWithType: Utilities.ObjectIsKeyValuePair(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  isExternal: true
  name: ObjectIsTuple(Object)
  nameWithType: Utilities.ObjectIsTuple(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  isExternal: true
  name: ObjectToEnumerable(Object)
  nameWithType: Utilities.ObjectToEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  isExternal: true
  name: ObjectToEnumerable<T>(Object)
  nameWithType: Utilities.ObjectToEnumerable<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)(System.Object)
  name.vb: ObjectToEnumerable(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  isExternal: true
  name: ObjectToSet<T>(Object)
  nameWithType: Utilities.ObjectToSet<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToSet(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)(System.Object)
  name.vb: ObjectToSet(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  isExternal: true
  name: ObjectToList(Object)
  nameWithType: Utilities.ObjectToList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  isExternal: true
  name: ObjectToList<T>(Object)
  nameWithType: Utilities.ObjectToList<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToList(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)(System.Object)
  name.vb: ObjectToList(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  isExternal: true
  name: ObjectToDictionary(Object)
  nameWithType: Utilities.ObjectToDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  isExternal: true
  name: ObjectToDictionary<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)(System.Object)
  name.vb: ObjectToDictionary(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  isExternal: true
  name: ObjectToKeyValuePair<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)(System.Object)
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  isExternal: true
  name: ObjectToTuple<T1, T2>(Object)
  nameWithType: Utilities.ObjectToTuple<T1, T2>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>(System.Object)
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)(System.Object)
  name.vb: ObjectToTuple(Of T1, T2)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{``0,``1},System.Tuple{``0,``1})
  commentId: M:GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{``0,``1},System.Tuple{``0,``1})
  isExternal: true
  name: TupleEquals<TKey, TValue>(Tuple<TKey, TValue>, Tuple<TKey, TValue>)
  nameWithType: Utilities.TupleEquals<TKey, TValue>(Tuple<TKey, TValue>, Tuple<TKey, TValue>)
  fullName: GRYLibrary.Core.Utilities.TupleEquals<TKey, TValue>(System.Tuple<TKey, TValue>, System.Tuple<TKey, TValue>)
  nameWithType.vb: Utilities.TupleEquals(Of TKey, TValue)(Tuple(Of TKey, TValue), Tuple(Of TKey, TValue))
  fullName.vb: GRYLibrary.Core.Utilities.TupleEquals(Of TKey, TValue)(System.Tuple(Of TKey, TValue), System.Tuple(Of TKey, TValue))
  name.vb: TupleEquals(Of TKey, TValue)(Tuple(Of TKey, TValue), Tuple(Of TKey, TValue))
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{``0,``1},System.Tuple{``0,``1})
    name: TupleEquals<TKey, TValue>
    nameWithType: Utilities.TupleEquals<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.TupleEquals<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.TupleEquals``2(System.Tuple{``0,``1},System.Tuple{``0,``1})
    name: TupleEquals(Of TKey, TValue)
    nameWithType: Utilities.TupleEquals(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.TupleEquals(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: Utilities.ToDynamic(Object)
  fullName: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: Utilities.DeepClone<T>(T)
  fullName: GRYLibrary.Core.Utilities.DeepClone<T>(T)
  nameWithType.vb: Utilities.DeepClone(Of T)(T)
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: Utilities.DeepClone<T>
    fullName: GRYLibrary.Core.Utilities.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: Utilities.DeepClone(Of T)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  commentId: M:GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  isExternal: true
  name: PersistToDisk<T>(T, String)
  nameWithType: Utilities.PersistToDisk<T>(T, String)
  fullName: GRYLibrary.Core.Utilities.PersistToDisk<T>(T, System.String)
  nameWithType.vb: Utilities.PersistToDisk(Of T)(T, String)
  fullName.vb: GRYLibrary.Core.Utilities.PersistToDisk(Of T)(T, System.String)
  name.vb: PersistToDisk(Of T)(T, String)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
    name: PersistToDisk<T>
    nameWithType: Utilities.PersistToDisk<T>
    fullName: GRYLibrary.Core.Utilities.PersistToDisk<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
    name: PersistToDisk(Of T)
    nameWithType: Utilities.PersistToDisk(Of T)
    fullName: GRYLibrary.Core.Utilities.PersistToDisk(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  isExternal: true
  name: NullSafeEquals(Object, Object)
  nameWithType: Utilities.NullSafeEquals(Object, Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object, System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.WriteableTuple`2.#ctor*
  commentId: Overload:GRYLibrary.Core.WriteableTuple`2.#ctor
  name: WriteableTuple
  nameWithType: WriteableTuple<T1, T2>.WriteableTuple
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.WriteableTuple
  nameWithType.vb: WriteableTuple(Of T1, T2).WriteableTuple
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).WriteableTuple
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: GRYLibrary.Core.WriteableTuple`2.Item1*
  commentId: Overload:GRYLibrary.Core.WriteableTuple`2.Item1
  name: Item1
  nameWithType: WriteableTuple<T1, T2>.Item1
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.Item1
  nameWithType.vb: WriteableTuple(Of T1, T2).Item1
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).Item1
- uid: GRYLibrary.Core.WriteableTuple`2.Item2*
  commentId: Overload:GRYLibrary.Core.WriteableTuple`2.Item2
  name: Item2
  nameWithType: WriteableTuple<T1, T2>.Item2
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.Item2
  nameWithType.vb: WriteableTuple(Of T1, T2).Item2
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).Item2
- uid: GRYLibrary.Core.WriteableTuple`2.GetHashCode*
  commentId: Overload:GRYLibrary.Core.WriteableTuple`2.GetHashCode
  name: GetHashCode
  nameWithType: WriteableTuple<T1, T2>.GetHashCode
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.GetHashCode
  nameWithType.vb: WriteableTuple(Of T1, T2).GetHashCode
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GRYLibrary.Core.WriteableTuple`2.Equals*
  commentId: Overload:GRYLibrary.Core.WriteableTuple`2.Equals
  name: Equals
  nameWithType: WriteableTuple<T1, T2>.Equals
  fullName: GRYLibrary.Core.WriteableTuple<T1, T2>.Equals
  nameWithType.vb: WriteableTuple(Of T1, T2).Equals
  fullName.vb: GRYLibrary.Core.WriteableTuple(Of T1, T2).Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
