### YamlMime:ManagedReference
items:
- uid: GRYLibrary.Core.Graph.Graph
  commentId: T:GRYLibrary.Core.Graph.Graph
  id: Graph
  parent: GRYLibrary.Core.Graph
  children:
  - GRYLibrary.Core.Graph.Graph.#ctor
  - GRYLibrary.Core.Graph.Graph._Vertices
  - GRYLibrary.Core.Graph.Graph.Accept(GRYLibrary.Core.Graph.IGraphVisitor)
  - GRYLibrary.Core.Graph.Graph.Accept``1(GRYLibrary.Core.Graph.IGraphVisitor{``0})
  - GRYLibrary.Core.Graph.Graph.AddCheck(GRYLibrary.Core.Graph.Edge,GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex)
  - GRYLibrary.Core.Graph.Graph.AddEdge(GRYLibrary.Core.Graph.Edge)
  - GRYLibrary.Core.Graph.Graph.AddVertex(GRYLibrary.Core.Graph.Vertex)
  - GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean})
  - GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},GRYLibrary.Core.Graph.Vertex)
  - GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreCycles
  - GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreSelfLoops
  - GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},GRYLibrary.Core.Graph.Vertex,System.Boolean)
  - GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},System.Boolean)
  - GRYLibrary.Core.Graph.Graph.Edges
  - GRYLibrary.Core.Graph.Graph.Equals(System.Object)
  - GRYLibrary.Core.Graph.Graph.GetAllCycles
  - GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
  - GRYLibrary.Core.Graph.Graph.GetDirectSuccessorEdges(GRYLibrary.Core.Graph.Vertex)
  - GRYLibrary.Core.Graph.Graph.GetDirectSuccessors(GRYLibrary.Core.Graph.Vertex,System.Boolean)
  - GRYLibrary.Core.Graph.Graph.GetHashCode
  - GRYLibrary.Core.Graph.Graph.GetMaximumDegree
  - GRYLibrary.Core.Graph.Graph.GetMinimumDegree
  - GRYLibrary.Core.Graph.Graph.GetShortestPath(GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex)
  - GRYLibrary.Core.Graph.Graph.GetVertex(System.String)
  - GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle(GRYLibrary.Core.Graph.Cycle@)
  - GRYLibrary.Core.Graph.Graph.IsConnected
  - GRYLibrary.Core.Graph.Graph.IsIsomorphic(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  - GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  - GRYLibrary.Core.Graph.Graph.IsSubgraphOf(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  - GRYLibrary.Core.Graph.Graph.OnEdgeAdded(GRYLibrary.Core.Graph.Edge)
  - GRYLibrary.Core.Graph.Graph.OnEdgeRemoved(GRYLibrary.Core.Graph.Edge)
  - GRYLibrary.Core.Graph.Graph.RemoveAllEdgesWithoutWeight
  - GRYLibrary.Core.Graph.Graph.RemoveEdge(GRYLibrary.Core.Graph.Edge)
  - GRYLibrary.Core.Graph.Graph.RemoveVertex(GRYLibrary.Core.Graph.Vertex)
  - GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
  - GRYLibrary.Core.Graph.Graph.ToAdjacencyMatrix
  - GRYLibrary.Core.Graph.Graph.ToString
  - GRYLibrary.Core.Graph.Graph.TryGetEdge(GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Edge@)
  - GRYLibrary.Core.Graph.Graph.Vertices
  langs:
  - csharp
  - vb
  name: Graph
  nameWithType: Graph
  fullName: GRYLibrary.Core.Graph.Graph
  type: Class
  source:
    id: Graph
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 14
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  summary: "\nRepresents a graph\n"
  remarks: "\nThis graph does not support two edges between the same two vertices.\n"
  example: []
  syntax:
    content: public abstract class Graph
    content.vb: Public MustInherit Class Graph
  inheritance:
  - System.Object
  derivedClasses:
  - GRYLibrary.Core.Graph.DirectedGraph
  - GRYLibrary.Core.Graph.UndirectedGraph
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  - System.Object.GRYLibrary.Core.Utilities.ToDynamic
  - GRYLibrary.Core.Graph.Graph.GRYLibrary.Core.Utilities.DeepClone``1
  - System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: GRYLibrary.Core.Graph.Graph.Vertices
  commentId: P:GRYLibrary.Core.Graph.Graph.Vertices
  id: Vertices
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: Vertices
  nameWithType: Graph.Vertices
  fullName: GRYLibrary.Core.Graph.Graph.Vertices
  type: Property
  source:
    id: Vertices
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 18
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public ISet<Vertex> Vertices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Vertex}
    content.vb: Public ReadOnly Property Vertices As ISet(Of Vertex)
  overload: GRYLibrary.Core.Graph.Graph.Vertices*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.Graph.Graph._Vertices
  commentId: F:GRYLibrary.Core.Graph.Graph._Vertices
  id: _Vertices
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: _Vertices
  nameWithType: Graph._Vertices
  fullName: GRYLibrary.Core.Graph.Graph._Vertices
  type: Field
  source:
    id: _Vertices
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 19
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: protected ISet<Vertex> _Vertices
    return:
      type: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Vertex}
    content.vb: Protected _Vertices As ISet(Of Vertex)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: GRYLibrary.Core.Graph.Graph.Edges
  commentId: P:GRYLibrary.Core.Graph.Graph.Edges
  id: Edges
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: Edges
  nameWithType: Graph.Edges
  fullName: GRYLibrary.Core.Graph.Graph.Edges
  type: Property
  source:
    id: Edges
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 20
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public abstract ISet<Edge> Edges { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Edge}
    content.vb: Public MustOverride ReadOnly Property Edges As ISet(Of Edge)
  overload: GRYLibrary.Core.Graph.Graph.Edges*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: GRYLibrary.Core.Graph.Graph.Accept(GRYLibrary.Core.Graph.IGraphVisitor)
  commentId: M:GRYLibrary.Core.Graph.Graph.Accept(GRYLibrary.Core.Graph.IGraphVisitor)
  id: Accept(GRYLibrary.Core.Graph.IGraphVisitor)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: Accept(IGraphVisitor)
  nameWithType: Graph.Accept(IGraphVisitor)
  fullName: GRYLibrary.Core.Graph.Graph.Accept(GRYLibrary.Core.Graph.IGraphVisitor)
  type: Method
  source:
    id: Accept
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 22
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public abstract void Accept(IGraphVisitor visitor)
    parameters:
    - id: visitor
      type: GRYLibrary.Core.Graph.IGraphVisitor
    content.vb: Public MustOverride Sub Accept(visitor As IGraphVisitor)
  overload: GRYLibrary.Core.Graph.Graph.Accept*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: GRYLibrary.Core.Graph.Graph.Accept``1(GRYLibrary.Core.Graph.IGraphVisitor{``0})
  commentId: M:GRYLibrary.Core.Graph.Graph.Accept``1(GRYLibrary.Core.Graph.IGraphVisitor{``0})
  id: Accept``1(GRYLibrary.Core.Graph.IGraphVisitor{``0})
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: Accept<T>(IGraphVisitor<T>)
  nameWithType: Graph.Accept<T>(IGraphVisitor<T>)
  fullName: GRYLibrary.Core.Graph.Graph.Accept<T>(GRYLibrary.Core.Graph.IGraphVisitor<T>)
  type: Method
  source:
    id: Accept
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 23
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public abstract T Accept<T>(IGraphVisitor<T> visitor)
    parameters:
    - id: visitor
      type: GRYLibrary.Core.Graph.IGraphVisitor{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public MustOverride Function Accept(Of T)(visitor As IGraphVisitor(Of T)) As T
  overload: GRYLibrary.Core.Graph.Graph.Accept*
  nameWithType.vb: Graph.Accept(Of T)(IGraphVisitor(Of T))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: GRYLibrary.Core.Graph.Graph.Accept(Of T)(GRYLibrary.Core.Graph.IGraphVisitor(Of T))
  name.vb: Accept(Of T)(IGraphVisitor(Of T))
- uid: GRYLibrary.Core.Graph.Graph.#ctor
  commentId: M:GRYLibrary.Core.Graph.Graph.#ctor
  id: '#ctor'
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: Graph()
  nameWithType: Graph.Graph()
  fullName: GRYLibrary.Core.Graph.Graph.Graph()
  type: Constructor
  source:
    id: .ctor
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 24
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public Graph()
    content.vb: Public Sub New
  overload: GRYLibrary.Core.Graph.Graph.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.GetDirectSuccessors(GRYLibrary.Core.Graph.Vertex,System.Boolean)
  commentId: M:GRYLibrary.Core.Graph.Graph.GetDirectSuccessors(GRYLibrary.Core.Graph.Vertex,System.Boolean)
  id: GetDirectSuccessors(GRYLibrary.Core.Graph.Vertex,System.Boolean)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetDirectSuccessors(Vertex, Boolean)
  nameWithType: Graph.GetDirectSuccessors(Vertex, Boolean)
  fullName: GRYLibrary.Core.Graph.Graph.GetDirectSuccessors(GRYLibrary.Core.Graph.Vertex, System.Boolean)
  type: Method
  source:
    id: GetDirectSuccessors
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 27
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public abstract ISet<Vertex> GetDirectSuccessors(Vertex vertex, bool doNotWalkAgainstDirectedEdges = true)
    parameters:
    - id: vertex
      type: GRYLibrary.Core.Graph.Vertex
    - id: doNotWalkAgainstDirectedEdges
      type: System.Boolean
    return:
      type: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Vertex}
    content.vb: Public MustOverride Function GetDirectSuccessors(vertex As Vertex, doNotWalkAgainstDirectedEdges As Boolean = True) As ISet(Of Vertex)
  overload: GRYLibrary.Core.Graph.Graph.GetDirectSuccessors*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
  commentId: P:GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
  id: SelfLoopIsAllowed
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: SelfLoopIsAllowed
  nameWithType: Graph.SelfLoopIsAllowed
  fullName: GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
  type: Property
  source:
    id: SelfLoopIsAllowed
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 28
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public bool SelfLoopIsAllowed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SelfLoopIsAllowed As Boolean
  overload: GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.GetVertex(System.String)
  commentId: M:GRYLibrary.Core.Graph.Graph.GetVertex(System.String)
  id: GetVertex(System.String)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetVertex(String)
  nameWithType: Graph.GetVertex(String)
  fullName: GRYLibrary.Core.Graph.Graph.GetVertex(System.String)
  type: Method
  source:
    id: GetVertex
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 44
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public Vertex GetVertex(string vertexName)
    parameters:
    - id: vertexName
      type: System.String
    return:
      type: GRYLibrary.Core.Graph.Vertex
    content.vb: Public Function GetVertex(vertexName As String) As Vertex
  overload: GRYLibrary.Core.Graph.Graph.GetVertex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.AddEdge(GRYLibrary.Core.Graph.Edge)
  commentId: M:GRYLibrary.Core.Graph.Graph.AddEdge(GRYLibrary.Core.Graph.Edge)
  id: AddEdge(GRYLibrary.Core.Graph.Edge)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: AddEdge(Edge)
  nameWithType: Graph.AddEdge(Edge)
  fullName: GRYLibrary.Core.Graph.Graph.AddEdge(GRYLibrary.Core.Graph.Edge)
  type: Method
  source:
    id: AddEdge
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 58
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: "\nThis function will also add the vertices which are connected by <code data-dev-comment-type=\"paramref\" class=\"paramref\">edge</code> to the list of vertices of this graph.\n"
  example: []
  syntax:
    content: public abstract void AddEdge(Edge edge)
    parameters:
    - id: edge
      type: GRYLibrary.Core.Graph.Edge
    content.vb: Public MustOverride Sub AddEdge(edge As Edge)
  overload: GRYLibrary.Core.Graph.Graph.AddEdge*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: GRYLibrary.Core.Graph.Graph.RemoveEdge(GRYLibrary.Core.Graph.Edge)
  commentId: M:GRYLibrary.Core.Graph.Graph.RemoveEdge(GRYLibrary.Core.Graph.Edge)
  id: RemoveEdge(GRYLibrary.Core.Graph.Edge)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: RemoveEdge(Edge)
  nameWithType: Graph.RemoveEdge(Edge)
  fullName: GRYLibrary.Core.Graph.Graph.RemoveEdge(GRYLibrary.Core.Graph.Edge)
  type: Method
  source:
    id: RemoveEdge
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 59
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public abstract void RemoveEdge(Edge edge)
    parameters:
    - id: edge
      type: GRYLibrary.Core.Graph.Edge
    content.vb: Public MustOverride Sub RemoveEdge(edge As Edge)
  overload: GRYLibrary.Core.Graph.Graph.RemoveEdge*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: GRYLibrary.Core.Graph.Graph.AddVertex(GRYLibrary.Core.Graph.Vertex)
  commentId: M:GRYLibrary.Core.Graph.Graph.AddVertex(GRYLibrary.Core.Graph.Vertex)
  id: AddVertex(GRYLibrary.Core.Graph.Vertex)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: AddVertex(Vertex)
  nameWithType: Graph.AddVertex(Vertex)
  fullName: GRYLibrary.Core.Graph.Graph.AddVertex(GRYLibrary.Core.Graph.Vertex)
  type: Method
  source:
    id: AddVertex
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 60
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public void AddVertex(Vertex vertex)
    parameters:
    - id: vertex
      type: GRYLibrary.Core.Graph.Vertex
    content.vb: Public Sub AddVertex(vertex As Vertex)
  overload: GRYLibrary.Core.Graph.Graph.AddVertex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.RemoveAllEdgesWithoutWeight
  commentId: M:GRYLibrary.Core.Graph.Graph.RemoveAllEdgesWithoutWeight
  id: RemoveAllEdgesWithoutWeight
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: RemoveAllEdgesWithoutWeight()
  nameWithType: Graph.RemoveAllEdgesWithoutWeight()
  fullName: GRYLibrary.Core.Graph.Graph.RemoveAllEdgesWithoutWeight()
  type: Method
  source:
    id: RemoveAllEdgesWithoutWeight
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 68
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public void RemoveAllEdgesWithoutWeight()
    content.vb: Public Sub RemoveAllEdgesWithoutWeight
  overload: GRYLibrary.Core.Graph.Graph.RemoveAllEdgesWithoutWeight*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.RemoveVertex(GRYLibrary.Core.Graph.Vertex)
  commentId: M:GRYLibrary.Core.Graph.Graph.RemoveVertex(GRYLibrary.Core.Graph.Vertex)
  id: RemoveVertex(GRYLibrary.Core.Graph.Vertex)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: RemoveVertex(Vertex)
  nameWithType: Graph.RemoveVertex(Vertex)
  fullName: GRYLibrary.Core.Graph.Graph.RemoveVertex(GRYLibrary.Core.Graph.Vertex)
  type: Method
  source:
    id: RemoveVertex
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 81
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: "\nThis function will also remove the edges which have a connection to this <code data-dev-comment-type=\"paramref\" class=\"paramref\">vertex</code> from the list of edges of this graph.\n"
  example: []
  syntax:
    content: public void RemoveVertex(Vertex vertex)
    parameters:
    - id: vertex
      type: GRYLibrary.Core.Graph.Vertex
    content.vb: Public Sub RemoveVertex(vertex As Vertex)
  overload: GRYLibrary.Core.Graph.Graph.RemoveVertex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.OnEdgeAdded(GRYLibrary.Core.Graph.Edge)
  commentId: M:GRYLibrary.Core.Graph.Graph.OnEdgeAdded(GRYLibrary.Core.Graph.Edge)
  id: OnEdgeAdded(GRYLibrary.Core.Graph.Edge)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: OnEdgeAdded(Edge)
  nameWithType: Graph.OnEdgeAdded(Edge)
  fullName: GRYLibrary.Core.Graph.Graph.OnEdgeAdded(GRYLibrary.Core.Graph.Edge)
  type: Method
  source:
    id: OnEdgeAdded
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 89
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: protected void OnEdgeAdded(Edge edge)
    parameters:
    - id: edge
      type: GRYLibrary.Core.Graph.Edge
    content.vb: Protected Sub OnEdgeAdded(edge As Edge)
  overload: GRYLibrary.Core.Graph.Graph.OnEdgeAdded*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: GRYLibrary.Core.Graph.Graph.OnEdgeRemoved(GRYLibrary.Core.Graph.Edge)
  commentId: M:GRYLibrary.Core.Graph.Graph.OnEdgeRemoved(GRYLibrary.Core.Graph.Edge)
  id: OnEdgeRemoved(GRYLibrary.Core.Graph.Edge)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: OnEdgeRemoved(Edge)
  nameWithType: Graph.OnEdgeRemoved(Edge)
  fullName: GRYLibrary.Core.Graph.Graph.OnEdgeRemoved(GRYLibrary.Core.Graph.Edge)
  type: Method
  source:
    id: OnEdgeRemoved
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 97
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: protected void OnEdgeRemoved(Edge edge)
    parameters:
    - id: edge
      type: GRYLibrary.Core.Graph.Edge
    content.vb: Protected Sub OnEdgeRemoved(edge As Edge)
  overload: GRYLibrary.Core.Graph.Graph.OnEdgeRemoved*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: GRYLibrary.Core.Graph.Graph.AddCheck(GRYLibrary.Core.Graph.Edge,GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex)
  commentId: M:GRYLibrary.Core.Graph.Graph.AddCheck(GRYLibrary.Core.Graph.Edge,GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex)
  id: AddCheck(GRYLibrary.Core.Graph.Edge,GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: AddCheck(Edge, Vertex, Vertex)
  nameWithType: Graph.AddCheck(Edge, Vertex, Vertex)
  fullName: GRYLibrary.Core.Graph.Graph.AddCheck(GRYLibrary.Core.Graph.Edge, GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex)
  type: Method
  source:
    id: AddCheck
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 104
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: protected void AddCheck(Edge edge, Vertex connectedVertex1, Vertex connectedVertex2)
    parameters:
    - id: edge
      type: GRYLibrary.Core.Graph.Edge
    - id: connectedVertex1
      type: GRYLibrary.Core.Graph.Vertex
    - id: connectedVertex2
      type: GRYLibrary.Core.Graph.Vertex
    content.vb: Protected Sub AddCheck(edge As Edge, connectedVertex1 As Vertex, connectedVertex2 As Vertex)
  overload: GRYLibrary.Core.Graph.Graph.AddCheck*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreSelfLoops
  commentId: M:GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreSelfLoops
  id: ContainsOneOrMoreSelfLoops
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: ContainsOneOrMoreSelfLoops()
  nameWithType: Graph.ContainsOneOrMoreSelfLoops()
  fullName: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreSelfLoops()
  type: Method
  source:
    id: ContainsOneOrMoreSelfLoops
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 119
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public bool ContainsOneOrMoreSelfLoops()
    return:
      type: System.Boolean
    content.vb: Public Function ContainsOneOrMoreSelfLoops As Boolean
  overload: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreSelfLoops*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreCycles
  commentId: M:GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreCycles
  id: ContainsOneOrMoreCycles
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: ContainsOneOrMoreCycles()
  nameWithType: Graph.ContainsOneOrMoreCycles()
  fullName: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreCycles()
  type: Method
  source:
    id: ContainsOneOrMoreCycles
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 131
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public bool ContainsOneOrMoreCycles()
    return:
      type: System.Boolean
    content.vb: Public Function ContainsOneOrMoreCycles As Boolean
  overload: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreCycles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.IsConnected
  commentId: M:GRYLibrary.Core.Graph.Graph.IsConnected
  id: IsConnected
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: IsConnected()
  nameWithType: Graph.IsConnected()
  fullName: GRYLibrary.Core.Graph.Graph.IsConnected()
  type: Method
  source:
    id: IsConnected
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 155
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public bool IsConnected()
    return:
      type: System.Boolean
    content.vb: Public Function IsConnected As Boolean
  overload: GRYLibrary.Core.Graph.Graph.IsConnected*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.ToAdjacencyMatrix
  commentId: M:GRYLibrary.Core.Graph.Graph.ToAdjacencyMatrix
  id: ToAdjacencyMatrix
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: ToAdjacencyMatrix()
  nameWithType: Graph.ToAdjacencyMatrix()
  fullName: GRYLibrary.Core.Graph.Graph.ToAdjacencyMatrix()
  type: Method
  source:
    id: ToAdjacencyMatrix
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 178
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public double[, ] ToAdjacencyMatrix()
    return:
      type: System.Double[,]
    content.vb: Public Function ToAdjacencyMatrix As Double(,)
  overload: GRYLibrary.Core.Graph.Graph.ToAdjacencyMatrix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.GetAllCycles
  commentId: M:GRYLibrary.Core.Graph.Graph.GetAllCycles
  id: GetAllCycles
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetAllCycles()
  nameWithType: Graph.GetAllCycles()
  fullName: GRYLibrary.Core.Graph.Graph.GetAllCycles()
  type: Method
  source:
    id: GetAllCycles
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 206
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: This operations does not work yet due to missing implementation of <xref href="GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ISet<Cycle> GetAllCycles()
    return:
      type: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Cycle}
    content.vb: Public Function GetAllCycles As ISet(Of Cycle)
  overload: GRYLibrary.Core.Graph.Graph.GetAllCycles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
  commentId: M:GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
  id: GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetAllCyclesThroughASpecificVertex(Vertex)
  nameWithType: Graph.GetAllCyclesThroughASpecificVertex(Vertex)
  fullName: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
  type: Method
  source:
    id: GetAllCyclesThroughASpecificVertex
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 216
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: This operations is not implemented yet.
  example: []
  syntax:
    content: public ISet<Cycle> GetAllCyclesThroughASpecificVertex(Vertex vertex)
    parameters:
    - id: vertex
      type: GRYLibrary.Core.Graph.Vertex
    return:
      type: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Cycle}
    content.vb: Public Function GetAllCyclesThroughASpecificVertex(vertex As Vertex) As ISet(Of Cycle)
  overload: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.GetShortestPath(GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex)
  commentId: M:GRYLibrary.Core.Graph.Graph.GetShortestPath(GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex)
  id: GetShortestPath(GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetShortestPath(Vertex, Vertex)
  nameWithType: Graph.GetShortestPath(Vertex, Vertex)
  fullName: GRYLibrary.Core.Graph.Graph.GetShortestPath(GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex)
  type: Method
  source:
    id: GetShortestPath
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 221
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: This operations is not implemented yet.
  example: []
  syntax:
    content: public IList<Edge> GetShortestPath(Vertex start, Vertex destination)
    parameters:
    - id: start
      type: GRYLibrary.Core.Graph.Vertex
    - id: destination
      type: GRYLibrary.Core.Graph.Vertex
    return:
      type: System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge}
    content.vb: Public Function GetShortestPath(start As Vertex, destination As Vertex) As IList(Of Edge)
  overload: GRYLibrary.Core.Graph.Graph.GetShortestPath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.ToString
  commentId: M:GRYLibrary.Core.Graph.Graph.ToString
  id: ToString
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Graph.ToString()
  fullName: GRYLibrary.Core.Graph.Graph.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 225
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: GRYLibrary.Core.Graph.Graph.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GRYLibrary.Core.Graph.Graph.GetDirectSuccessorEdges(GRYLibrary.Core.Graph.Vertex)
  commentId: M:GRYLibrary.Core.Graph.Graph.GetDirectSuccessorEdges(GRYLibrary.Core.Graph.Vertex)
  id: GetDirectSuccessorEdges(GRYLibrary.Core.Graph.Vertex)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetDirectSuccessorEdges(Vertex)
  nameWithType: Graph.GetDirectSuccessorEdges(Vertex)
  fullName: GRYLibrary.Core.Graph.Graph.GetDirectSuccessorEdges(GRYLibrary.Core.Graph.Vertex)
  type: Method
  source:
    id: GetDirectSuccessorEdges
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 231
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public abstract ISet<Edge> GetDirectSuccessorEdges(Vertex vertex)
    parameters:
    - id: vertex
      type: GRYLibrary.Core.Graph.Vertex
    return:
      type: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Edge}
    content.vb: Public MustOverride Function GetDirectSuccessorEdges(vertex As Vertex) As ISet(Of Edge)
  overload: GRYLibrary.Core.Graph.Graph.GetDirectSuccessorEdges*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean})
  commentId: M:GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean})
  id: BreadthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean})
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: BreadthFirstSearch(Func<Vertex, IList<Edge>, Boolean>)
  nameWithType: Graph.BreadthFirstSearch(Func<Vertex, IList<Edge>, Boolean>)
  fullName: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func<GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList<GRYLibrary.Core.Graph.Edge>, System.Boolean>)
  type: Method
  source:
    id: BreadthFirstSearch
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 232
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public void BreadthFirstSearch(Func<Vertex, IList<Edge>, bool> customAction)
    parameters:
    - id: customAction
      type: System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean}
    content.vb: Public Sub BreadthFirstSearch(customAction As Func(Of Vertex, IList(Of Edge), Boolean))
  overload: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch*
  nameWithType.vb: Graph.BreadthFirstSearch(Func(Of Vertex, IList(Of Edge), Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func(Of GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList(Of GRYLibrary.Core.Graph.Edge), System.Boolean))
  name.vb: BreadthFirstSearch(Func(Of Vertex, IList(Of Edge), Boolean))
- uid: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},GRYLibrary.Core.Graph.Vertex)
  commentId: M:GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},GRYLibrary.Core.Graph.Vertex)
  id: BreadthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},GRYLibrary.Core.Graph.Vertex)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: BreadthFirstSearch(Func<Vertex, IList<Edge>, Boolean>, Vertex)
  nameWithType: Graph.BreadthFirstSearch(Func<Vertex, IList<Edge>, Boolean>, Vertex)
  fullName: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func<GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList<GRYLibrary.Core.Graph.Edge>, System.Boolean>, GRYLibrary.Core.Graph.Vertex)
  type: Method
  source:
    id: BreadthFirstSearch
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 236
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public void BreadthFirstSearch(Func<Vertex, IList<Edge>, bool> customAction, Vertex startVertex)
    parameters:
    - id: customAction
      type: System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean}
    - id: startVertex
      type: GRYLibrary.Core.Graph.Vertex
    content.vb: Public Sub BreadthFirstSearch(customAction As Func(Of Vertex, IList(Of Edge), Boolean), startVertex As Vertex)
  overload: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch*
  nameWithType.vb: Graph.BreadthFirstSearch(Func(Of Vertex, IList(Of Edge), Boolean), Vertex)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch(System.Func(Of GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList(Of GRYLibrary.Core.Graph.Edge), System.Boolean), GRYLibrary.Core.Graph.Vertex)
  name.vb: BreadthFirstSearch(Func(Of Vertex, IList(Of Edge), Boolean), Vertex)
- uid: GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},System.Boolean)
  commentId: M:GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},System.Boolean)
  id: DepthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},System.Boolean)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: DepthFirstSearch(Func<Vertex, IList<Edge>, Boolean>, Boolean)
  nameWithType: Graph.DepthFirstSearch(Func<Vertex, IList<Edge>, Boolean>, Boolean)
  fullName: GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func<GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList<GRYLibrary.Core.Graph.Edge>, System.Boolean>, System.Boolean)
  type: Method
  source:
    id: DepthFirstSearch
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 275
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public void DepthFirstSearch(Func<Vertex, IList<Edge>, bool> customAction, bool doNotWalkAgainstDirectedEdges = true)
    parameters:
    - id: customAction
      type: System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean}
    - id: doNotWalkAgainstDirectedEdges
      type: System.Boolean
    content.vb: Public Sub DepthFirstSearch(customAction As Func(Of Vertex, IList(Of Edge), Boolean), doNotWalkAgainstDirectedEdges As Boolean = True)
  overload: GRYLibrary.Core.Graph.Graph.DepthFirstSearch*
  nameWithType.vb: Graph.DepthFirstSearch(Func(Of Vertex, IList(Of Edge), Boolean), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func(Of GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList(Of GRYLibrary.Core.Graph.Edge), System.Boolean), System.Boolean)
  name.vb: DepthFirstSearch(Func(Of Vertex, IList(Of Edge), Boolean), Boolean)
- uid: GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},GRYLibrary.Core.Graph.Vertex,System.Boolean)
  commentId: M:GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},GRYLibrary.Core.Graph.Vertex,System.Boolean)
  id: DepthFirstSearch(System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean},GRYLibrary.Core.Graph.Vertex,System.Boolean)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: DepthFirstSearch(Func<Vertex, IList<Edge>, Boolean>, Vertex, Boolean)
  nameWithType: Graph.DepthFirstSearch(Func<Vertex, IList<Edge>, Boolean>, Vertex, Boolean)
  fullName: GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func<GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList<GRYLibrary.Core.Graph.Edge>, System.Boolean>, GRYLibrary.Core.Graph.Vertex, System.Boolean)
  type: Method
  source:
    id: DepthFirstSearch
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 279
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public void DepthFirstSearch(Func<Vertex, IList<Edge>, bool> customAction, Vertex startVertex, bool doNotWalkAgainstDirectedEdges = true)
    parameters:
    - id: customAction
      type: System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean}
    - id: startVertex
      type: GRYLibrary.Core.Graph.Vertex
    - id: doNotWalkAgainstDirectedEdges
      type: System.Boolean
    content.vb: Public Sub DepthFirstSearch(customAction As Func(Of Vertex, IList(Of Edge), Boolean), startVertex As Vertex, doNotWalkAgainstDirectedEdges As Boolean = True)
  overload: GRYLibrary.Core.Graph.Graph.DepthFirstSearch*
  nameWithType.vb: Graph.DepthFirstSearch(Func(Of Vertex, IList(Of Edge), Boolean), Vertex, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.DepthFirstSearch(System.Func(Of GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList(Of GRYLibrary.Core.Graph.Edge), System.Boolean), GRYLibrary.Core.Graph.Vertex, System.Boolean)
  name.vb: DepthFirstSearch(Func(Of Vertex, IList(Of Edge), Boolean), Vertex, Boolean)
- uid: GRYLibrary.Core.Graph.Graph.TryGetEdge(GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Edge@)
  commentId: M:GRYLibrary.Core.Graph.Graph.TryGetEdge(GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Edge@)
  id: TryGetEdge(GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Edge@)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: TryGetEdge(Vertex, Vertex, out Edge)
  nameWithType: Graph.TryGetEdge(Vertex, Vertex, out Edge)
  fullName: GRYLibrary.Core.Graph.Graph.TryGetEdge(GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex, out GRYLibrary.Core.Graph.Edge)
  type: Method
  source:
    id: TryGetEdge
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 326
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public bool TryGetEdge(Vertex source, Vertex target, out Edge result)
    parameters:
    - id: source
      type: GRYLibrary.Core.Graph.Vertex
    - id: target
      type: GRYLibrary.Core.Graph.Vertex
    - id: result
      type: GRYLibrary.Core.Graph.Edge
    return:
      type: System.Boolean
    content.vb: Public Function TryGetEdge(source As Vertex, target As Vertex, ByRef result As Edge) As Boolean
  overload: GRYLibrary.Core.Graph.Graph.TryGetEdge*
  nameWithType.vb: Graph.TryGetEdge(Vertex, Vertex, ByRef Edge)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.TryGetEdge(GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex, ByRef GRYLibrary.Core.Graph.Edge)
  name.vb: TryGetEdge(Vertex, Vertex, ByRef Edge)
- uid: GRYLibrary.Core.Graph.Graph.Equals(System.Object)
  commentId: M:GRYLibrary.Core.Graph.Graph.Equals(System.Object)
  id: Equals(System.Object)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Graph.Equals(Object)
  fullName: GRYLibrary.Core.Graph.Graph.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 346
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: "\nThis function ignores properties like <xref href=\"GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed\" data-throw-if-not-resolved=\"false\"></xref> or the name of the edges and vertices.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
      description: "\nReturns true if and only if the adjacency-matrices of this and <code data-dev-comment-type=\"paramref\" class=\"paramref\">obj</code> are equal.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GRYLibrary.Core.Graph.Graph.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GRYLibrary.Core.Graph.Graph.GetHashCode
  commentId: M:GRYLibrary.Core.Graph.Graph.GetHashCode
  id: GetHashCode
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Graph.GetHashCode()
  fullName: GRYLibrary.Core.Graph.Graph.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 359
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: GRYLibrary.Core.Graph.Graph.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  commentId: M:GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  id: IsSubgraph(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: IsSubgraph(Graph, out IDictionary<Vertex, Vertex>)
  nameWithType: Graph.IsSubgraph(Graph, out IDictionary<Vertex, Vertex>)
  fullName: GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph, out System.Collections.Generic.IDictionary<GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex>)
  type: Method
  source:
    id: IsSubgraph
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 364
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: This operations is not implemented yet.
  example: []
  syntax:
    content: public bool IsSubgraph(Graph subgraph, out IDictionary<Vertex, Vertex> mappingFromSubgraphToThisGraph)
    parameters:
    - id: subgraph
      type: GRYLibrary.Core.Graph.Graph
    - id: mappingFromSubgraphToThisGraph
      type: System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}
    return:
      type: System.Boolean
    content.vb: Public Function IsSubgraph(subgraph As Graph, ByRef mappingFromSubgraphToThisGraph As IDictionary(Of Vertex, Vertex)) As Boolean
  overload: GRYLibrary.Core.Graph.Graph.IsSubgraph*
  nameWithType.vb: Graph.IsSubgraph(Graph, ByRef IDictionary(Of Vertex, Vertex))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph, ByRef System.Collections.Generic.IDictionary(Of GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex))
  name.vb: IsSubgraph(Graph, ByRef IDictionary(Of Vertex, Vertex))
- uid: GRYLibrary.Core.Graph.Graph.IsSubgraphOf(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  commentId: M:GRYLibrary.Core.Graph.Graph.IsSubgraphOf(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  id: IsSubgraphOf(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: IsSubgraphOf(Graph, out IDictionary<Vertex, Vertex>)
  nameWithType: Graph.IsSubgraphOf(Graph, out IDictionary<Vertex, Vertex>)
  fullName: GRYLibrary.Core.Graph.Graph.IsSubgraphOf(GRYLibrary.Core.Graph.Graph, out System.Collections.Generic.IDictionary<GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex>)
  type: Method
  source:
    id: IsSubgraphOf
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 369
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: This operations does not work yet due to missing implementation of <xref href="GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph%2cSystem.Collections.Generic.IDictionary%7bGRYLibrary.Core.Graph.Vertex%2cGRYLibrary.Core.Graph.Vertex%7d%40)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsSubgraphOf(Graph graph, out IDictionary<Vertex, Vertex> mappingFromgraphToThisGraph)
    parameters:
    - id: graph
      type: GRYLibrary.Core.Graph.Graph
    - id: mappingFromgraphToThisGraph
      type: System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}
    return:
      type: System.Boolean
    content.vb: Public Function IsSubgraphOf(graph As Graph, ByRef mappingFromgraphToThisGraph As IDictionary(Of Vertex, Vertex)) As Boolean
  overload: GRYLibrary.Core.Graph.Graph.IsSubgraphOf*
  nameWithType.vb: Graph.IsSubgraphOf(Graph, ByRef IDictionary(Of Vertex, Vertex))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.IsSubgraphOf(GRYLibrary.Core.Graph.Graph, ByRef System.Collections.Generic.IDictionary(Of GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex))
  name.vb: IsSubgraphOf(Graph, ByRef IDictionary(Of Vertex, Vertex))
- uid: GRYLibrary.Core.Graph.Graph.IsIsomorphic(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  commentId: M:GRYLibrary.Core.Graph.Graph.IsIsomorphic(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  id: IsIsomorphic(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: IsIsomorphic(Graph, out IDictionary<Vertex, Vertex>)
  nameWithType: Graph.IsIsomorphic(Graph, out IDictionary<Vertex, Vertex>)
  fullName: GRYLibrary.Core.Graph.Graph.IsIsomorphic(GRYLibrary.Core.Graph.Graph, out System.Collections.Generic.IDictionary<GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex>)
  type: Method
  source:
    id: IsIsomorphic
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 383
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: This operations does not work yet due to missing implementation of <xref href="GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph%2cSystem.Collections.Generic.IDictionary%7bGRYLibrary.Core.Graph.Vertex%2cGRYLibrary.Core.Graph.Vertex%7d%40)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsIsomorphic(Graph otherGraph, out IDictionary<Vertex, Vertex> bijectionFromOtherGraphToThisGraph)
    parameters:
    - id: otherGraph
      type: GRYLibrary.Core.Graph.Graph
    - id: bijectionFromOtherGraphToThisGraph
      type: System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}
    return:
      type: System.Boolean
    content.vb: Public Function IsIsomorphic(otherGraph As Graph, ByRef bijectionFromOtherGraphToThisGraph As IDictionary(Of Vertex, Vertex)) As Boolean
  overload: GRYLibrary.Core.Graph.Graph.IsIsomorphic*
  nameWithType.vb: Graph.IsIsomorphic(Graph, ByRef IDictionary(Of Vertex, Vertex))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.IsIsomorphic(GRYLibrary.Core.Graph.Graph, ByRef System.Collections.Generic.IDictionary(Of GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex))
  name.vb: IsIsomorphic(Graph, ByRef IDictionary(Of Vertex, Vertex))
- uid: GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle(GRYLibrary.Core.Graph.Cycle@)
  commentId: M:GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle(GRYLibrary.Core.Graph.Cycle@)
  id: HasHamiltonianCycle(GRYLibrary.Core.Graph.Cycle@)
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: HasHamiltonianCycle(out Cycle)
  nameWithType: Graph.HasHamiltonianCycle(out Cycle)
  fullName: GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle(out GRYLibrary.Core.Graph.Cycle)
  type: Method
  source:
    id: HasHamiltonianCycle
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 406
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  remarks: This operations does not work yet due to missing implementation of <xref href="GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool HasHamiltonianCycle(out Cycle result)
    parameters:
    - id: result
      type: GRYLibrary.Core.Graph.Cycle
    return:
      type: System.Boolean
    content.vb: Public Function HasHamiltonianCycle(ByRef result As Cycle) As Boolean
  overload: GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle*
  nameWithType.vb: Graph.HasHamiltonianCycle(ByRef Cycle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle(ByRef GRYLibrary.Core.Graph.Cycle)
  name.vb: HasHamiltonianCycle(ByRef Cycle)
- uid: GRYLibrary.Core.Graph.Graph.GetMinimumDegree
  commentId: M:GRYLibrary.Core.Graph.Graph.GetMinimumDegree
  id: GetMinimumDegree
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetMinimumDegree()
  nameWithType: Graph.GetMinimumDegree()
  fullName: GRYLibrary.Core.Graph.Graph.GetMinimumDegree()
  type: Method
  source:
    id: GetMinimumDegree
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 419
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public int GetMinimumDegree()
    return:
      type: System.Int32
    content.vb: Public Function GetMinimumDegree As Integer
  overload: GRYLibrary.Core.Graph.Graph.GetMinimumDegree*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Graph.Graph.GetMaximumDegree
  commentId: M:GRYLibrary.Core.Graph.Graph.GetMaximumDegree
  id: GetMaximumDegree
  parent: GRYLibrary.Core.Graph.Graph
  langs:
  - csharp
  - vb
  name: GetMaximumDegree()
  nameWithType: Graph.GetMaximumDegree()
  fullName: GRYLibrary.Core.Graph.Graph.GetMaximumDegree()
  type: Method
  source:
    id: GetMaximumDegree
    path: C:\Data\Projects\Common\GRYLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Graph\Graph.cs
    startLine: 423
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Graph
  syntax:
    content: public int GetMaximumDegree()
    return:
      type: System.Int32
    content.vb: Public Function GetMaximumDegree As Integer
  overload: GRYLibrary.Core.Graph.Graph.GetMaximumDegree*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GRYLibrary.Core.Graph
  commentId: N:GRYLibrary.Core.Graph
  name: GRYLibrary.Core.Graph
  nameWithType: GRYLibrary.Core.Graph
  fullName: GRYLibrary.Core.Graph
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  name: ObjectIsEnumerable()
  nameWithType: Utilities.ObjectIsEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  name: ObjectIsSet()
  nameWithType: Utilities.ObjectIsSet()
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  name: ObjectIsList()
  nameWithType: Utilities.ObjectIsList()
  fullName: GRYLibrary.Core.Utilities.ObjectIsList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  name: ObjectIsDictionary()
  nameWithType: Utilities.ObjectIsDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  name: ObjectIsKeyValuePair()
  nameWithType: Utilities.ObjectIsKeyValuePair()
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry(System.Object)
  name: ObjectIsDictionaryEntry()
  nameWithType: Utilities.ObjectIsDictionaryEntry()
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry
    name: ObjectIsDictionaryEntry
    nameWithType: Utilities.ObjectIsDictionaryEntry
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry
    name: ObjectIsDictionaryEntry
    nameWithType: Utilities.ObjectIsDictionaryEntry
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  name: ObjectIsTuple()
  nameWithType: Utilities.ObjectIsTuple()
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  name: ObjectToEnumerable()
  nameWithType: Utilities.ObjectToEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  name: ObjectToEnumerable<T>()
  nameWithType: Utilities.ObjectToEnumerable<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>()
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)()
  name.vb: ObjectToEnumerable(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  name: ObjectToSet<T>()
  nameWithType: Utilities.ObjectToSet<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>()
  nameWithType.vb: Utilities.ObjectToSet(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)()
  name.vb: ObjectToSet(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  name: ObjectToList()
  nameWithType: Utilities.ObjectToList()
  fullName: GRYLibrary.Core.Utilities.ObjectToList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  name: ObjectToList<T>()
  nameWithType: Utilities.ObjectToList<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>()
  nameWithType.vb: Utilities.ObjectToList(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)()
  name.vb: ObjectToList(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  name: ObjectToDictionary()
  nameWithType: Utilities.ObjectToDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  name: ObjectToDictionary<TKey, TValue>()
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)()
  name.vb: ObjectToDictionary(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  name: ObjectToKeyValuePair<TKey, TValue>()
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  name: ObjectToTuple<T1, T2>()
  nameWithType: Utilities.ObjectToTuple<T1, T2>()
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>()
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)()
  name.vb: ObjectToTuple(Of T1, T2)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ToDynamic
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: Utilities.ToDynamic()
  fullName: GRYLibrary.Core.Utilities.ToDynamic()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.GRYLibrary.Core.Utilities.DeepClone``1
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<Graph>()
  nameWithType: Utilities.DeepClone<Graph>()
  fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Graph.Graph>()
  nameWithType.vb: Utilities.DeepClone(Of Graph)()
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Graph.Graph)()
  name.vb: DeepClone(Of Graph)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone<Graph>
    nameWithType: Utilities.DeepClone<Graph>
    fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Graph.Graph>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone(Of Graph)
    nameWithType: Utilities.DeepClone(Of Graph)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Graph.Graph)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  name: NullSafeEquals(Object)
  nameWithType: Utilities.NullSafeEquals(Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  isExternal: true
  name: ObjectIsEnumerable(Object)
  nameWithType: Utilities.ObjectIsEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities
  commentId: T:GRYLibrary.Core.Utilities
  parent: GRYLibrary.Core
  name: Utilities
  nameWithType: Utilities
  fullName: GRYLibrary.Core.Utilities
- uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  isExternal: true
  name: ObjectIsSet(Object)
  nameWithType: Utilities.ObjectIsSet(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  isExternal: true
  name: ObjectIsList(Object)
  nameWithType: Utilities.ObjectIsList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  isExternal: true
  name: ObjectIsDictionary(Object)
  nameWithType: Utilities.ObjectIsDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  isExternal: true
  name: ObjectIsKeyValuePair(Object)
  nameWithType: Utilities.ObjectIsKeyValuePair(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry(System.Object)
  isExternal: true
  name: ObjectIsDictionaryEntry(Object)
  nameWithType: Utilities.ObjectIsDictionaryEntry(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry(System.Object)
    name: ObjectIsDictionaryEntry
    nameWithType: Utilities.ObjectIsDictionaryEntry
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry(System.Object)
    name: ObjectIsDictionaryEntry
    nameWithType: Utilities.ObjectIsDictionaryEntry
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionaryEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  isExternal: true
  name: ObjectIsTuple(Object)
  nameWithType: Utilities.ObjectIsTuple(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  isExternal: true
  name: ObjectToEnumerable(Object)
  nameWithType: Utilities.ObjectToEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  isExternal: true
  name: ObjectToEnumerable<T>(Object)
  nameWithType: Utilities.ObjectToEnumerable<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)(System.Object)
  name.vb: ObjectToEnumerable(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  isExternal: true
  name: ObjectToSet<T>(Object)
  nameWithType: Utilities.ObjectToSet<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToSet(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)(System.Object)
  name.vb: ObjectToSet(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  isExternal: true
  name: ObjectToList(Object)
  nameWithType: Utilities.ObjectToList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  isExternal: true
  name: ObjectToList<T>(Object)
  nameWithType: Utilities.ObjectToList<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToList(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)(System.Object)
  name.vb: ObjectToList(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  isExternal: true
  name: ObjectToDictionary(Object)
  nameWithType: Utilities.ObjectToDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  isExternal: true
  name: ObjectToDictionary<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)(System.Object)
  name.vb: ObjectToDictionary(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  isExternal: true
  name: ObjectToKeyValuePair<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)(System.Object)
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  isExternal: true
  name: ObjectToTuple<T1, T2>(Object)
  nameWithType: Utilities.ObjectToTuple<T1, T2>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>(System.Object)
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)(System.Object)
  name.vb: ObjectToTuple(Of T1, T2)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: Utilities.ToDynamic(Object)
  fullName: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: Utilities.DeepClone<T>(T)
  fullName: GRYLibrary.Core.Utilities.DeepClone<T>(T)
  nameWithType.vb: Utilities.DeepClone(Of T)(T)
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: Utilities.DeepClone<T>
    fullName: GRYLibrary.Core.Utilities.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: Utilities.DeepClone(Of T)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  isExternal: true
  name: NullSafeEquals(Object, Object)
  nameWithType: Utilities.NullSafeEquals(Object, Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object, System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core
  commentId: N:GRYLibrary.Core
  name: GRYLibrary.Core
  nameWithType: GRYLibrary.Core
  fullName: GRYLibrary.Core
- uid: GRYLibrary.Core.Graph.Graph.Vertices*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.Vertices
  name: Vertices
  nameWithType: Graph.Vertices
  fullName: GRYLibrary.Core.Graph.Graph.Vertices
- uid: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Vertex}
  commentId: T:System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Vertex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<Vertex>
  nameWithType: ISet<Vertex>
  fullName: System.Collections.Generic.ISet<GRYLibrary.Core.Graph.Vertex>
  nameWithType.vb: ISet(Of Vertex)
  fullName.vb: System.Collections.Generic.ISet(Of GRYLibrary.Core.Graph.Vertex)
  name.vb: ISet(Of Vertex)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: GRYLibrary.Core.Graph.Graph.Edges*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.Edges
  name: Edges
  nameWithType: Graph.Edges
  fullName: GRYLibrary.Core.Graph.Graph.Edges
- uid: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Edge}
  commentId: T:System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Edge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<Edge>
  nameWithType: ISet<Edge>
  fullName: System.Collections.Generic.ISet<GRYLibrary.Core.Graph.Edge>
  nameWithType.vb: ISet(Of Edge)
  fullName.vb: System.Collections.Generic.ISet(Of GRYLibrary.Core.Graph.Edge)
  name.vb: ISet(Of Edge)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Graph.Edge
    name: Edge
    nameWithType: Edge
    fullName: GRYLibrary.Core.Graph.Edge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Graph.Edge
    name: Edge
    nameWithType: Edge
    fullName: GRYLibrary.Core.Graph.Edge
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.Accept*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.Accept
  name: Accept
  nameWithType: Graph.Accept
  fullName: GRYLibrary.Core.Graph.Graph.Accept
- uid: GRYLibrary.Core.Graph.IGraphVisitor
  commentId: T:GRYLibrary.Core.Graph.IGraphVisitor
  parent: GRYLibrary.Core.Graph
  name: IGraphVisitor
  nameWithType: IGraphVisitor
  fullName: GRYLibrary.Core.Graph.IGraphVisitor
- uid: GRYLibrary.Core.Graph.IGraphVisitor{{T}}
  commentId: T:GRYLibrary.Core.Graph.IGraphVisitor{``0}
  parent: GRYLibrary.Core.Graph
  definition: GRYLibrary.Core.Graph.IGraphVisitor`1
  name: IGraphVisitor<T>
  nameWithType: IGraphVisitor<T>
  fullName: GRYLibrary.Core.Graph.IGraphVisitor<T>
  nameWithType.vb: IGraphVisitor(Of T)
  fullName.vb: GRYLibrary.Core.Graph.IGraphVisitor(Of T)
  name.vb: IGraphVisitor(Of T)
  spec.csharp:
  - uid: GRYLibrary.Core.Graph.IGraphVisitor`1
    name: IGraphVisitor
    nameWithType: IGraphVisitor
    fullName: GRYLibrary.Core.Graph.IGraphVisitor
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.Graph.IGraphVisitor`1
    name: IGraphVisitor
    nameWithType: IGraphVisitor
    fullName: GRYLibrary.Core.Graph.IGraphVisitor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: GRYLibrary.Core.Graph.IGraphVisitor`1
  commentId: T:GRYLibrary.Core.Graph.IGraphVisitor`1
  name: IGraphVisitor<T>
  nameWithType: IGraphVisitor<T>
  fullName: GRYLibrary.Core.Graph.IGraphVisitor<T>
  nameWithType.vb: IGraphVisitor(Of T)
  fullName.vb: GRYLibrary.Core.Graph.IGraphVisitor(Of T)
  name.vb: IGraphVisitor(Of T)
  spec.csharp:
  - uid: GRYLibrary.Core.Graph.IGraphVisitor`1
    name: IGraphVisitor
    nameWithType: IGraphVisitor
    fullName: GRYLibrary.Core.Graph.IGraphVisitor
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GRYLibrary.Core.Graph.IGraphVisitor`1
    name: IGraphVisitor
    nameWithType: IGraphVisitor
    fullName: GRYLibrary.Core.Graph.IGraphVisitor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: GRYLibrary.Core.Graph.Graph.#ctor*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.#ctor
  name: Graph
  nameWithType: Graph.Graph
  fullName: GRYLibrary.Core.Graph.Graph.Graph
- uid: GRYLibrary.Core.Graph.Graph.GetDirectSuccessors*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetDirectSuccessors
  name: GetDirectSuccessors
  nameWithType: Graph.GetDirectSuccessors
  fullName: GRYLibrary.Core.Graph.Graph.GetDirectSuccessors
- uid: GRYLibrary.Core.Graph.Vertex
  commentId: T:GRYLibrary.Core.Graph.Vertex
  parent: GRYLibrary.Core.Graph
  name: Vertex
  nameWithType: Vertex
  fullName: GRYLibrary.Core.Graph.Vertex
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
  name: SelfLoopIsAllowed
  nameWithType: Graph.SelfLoopIsAllowed
  fullName: GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
- uid: GRYLibrary.Core.Graph.Graph.GetVertex*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetVertex
  name: GetVertex
  nameWithType: Graph.GetVertex
  fullName: GRYLibrary.Core.Graph.Graph.GetVertex
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GRYLibrary.Core.Graph.Graph.AddEdge*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.AddEdge
  name: AddEdge
  nameWithType: Graph.AddEdge
  fullName: GRYLibrary.Core.Graph.Graph.AddEdge
- uid: GRYLibrary.Core.Graph.Edge
  commentId: T:GRYLibrary.Core.Graph.Edge
  parent: GRYLibrary.Core.Graph
  name: Edge
  nameWithType: Edge
  fullName: GRYLibrary.Core.Graph.Edge
- uid: GRYLibrary.Core.Graph.Graph.RemoveEdge*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.RemoveEdge
  name: RemoveEdge
  nameWithType: Graph.RemoveEdge
  fullName: GRYLibrary.Core.Graph.Graph.RemoveEdge
- uid: GRYLibrary.Core.Graph.Graph.AddVertex*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.AddVertex
  name: AddVertex
  nameWithType: Graph.AddVertex
  fullName: GRYLibrary.Core.Graph.Graph.AddVertex
- uid: GRYLibrary.Core.Graph.Graph.RemoveAllEdgesWithoutWeight*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.RemoveAllEdgesWithoutWeight
  name: RemoveAllEdgesWithoutWeight
  nameWithType: Graph.RemoveAllEdgesWithoutWeight
  fullName: GRYLibrary.Core.Graph.Graph.RemoveAllEdgesWithoutWeight
- uid: GRYLibrary.Core.Graph.Graph.RemoveVertex*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.RemoveVertex
  name: RemoveVertex
  nameWithType: Graph.RemoveVertex
  fullName: GRYLibrary.Core.Graph.Graph.RemoveVertex
- uid: GRYLibrary.Core.Graph.Graph.OnEdgeAdded*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.OnEdgeAdded
  name: OnEdgeAdded
  nameWithType: Graph.OnEdgeAdded
  fullName: GRYLibrary.Core.Graph.Graph.OnEdgeAdded
- uid: GRYLibrary.Core.Graph.Graph.OnEdgeRemoved*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.OnEdgeRemoved
  name: OnEdgeRemoved
  nameWithType: Graph.OnEdgeRemoved
  fullName: GRYLibrary.Core.Graph.Graph.OnEdgeRemoved
- uid: GRYLibrary.Core.Graph.Graph.AddCheck*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.AddCheck
  name: AddCheck
  nameWithType: Graph.AddCheck
  fullName: GRYLibrary.Core.Graph.Graph.AddCheck
- uid: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreSelfLoops*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreSelfLoops
  name: ContainsOneOrMoreSelfLoops
  nameWithType: Graph.ContainsOneOrMoreSelfLoops
  fullName: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreSelfLoops
- uid: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreCycles*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreCycles
  name: ContainsOneOrMoreCycles
  nameWithType: Graph.ContainsOneOrMoreCycles
  fullName: GRYLibrary.Core.Graph.Graph.ContainsOneOrMoreCycles
- uid: GRYLibrary.Core.Graph.Graph.IsConnected*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.IsConnected
  name: IsConnected
  nameWithType: Graph.IsConnected
  fullName: GRYLibrary.Core.Graph.Graph.IsConnected
- uid: GRYLibrary.Core.Graph.Graph.ToAdjacencyMatrix*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.ToAdjacencyMatrix
  name: ToAdjacencyMatrix
  nameWithType: Graph.ToAdjacencyMatrix
  fullName: GRYLibrary.Core.Graph.Graph.ToAdjacencyMatrix
- uid: System.Double[,]
  isExternal: true
  name: Double[,]
  nameWithType: Double[,]
  fullName: System.Double[,]
  nameWithType.vb: Double(,)
  fullName.vb: System.Double(,)
  name.vb: Double(,)
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
  commentId: M:GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
  parent: GRYLibrary.Core.Graph.Graph
  name: GetAllCyclesThroughASpecificVertex(Vertex)
  nameWithType: Graph.GetAllCyclesThroughASpecificVertex(Vertex)
  fullName: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
  spec.csharp:
  - uid: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
    name: GetAllCyclesThroughASpecificVertex
    nameWithType: Graph.GetAllCyclesThroughASpecificVertex
    fullName: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex(GRYLibrary.Core.Graph.Vertex)
    name: GetAllCyclesThroughASpecificVertex
    nameWithType: Graph.GetAllCyclesThroughASpecificVertex
    fullName: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.GetAllCycles*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetAllCycles
  name: GetAllCycles
  nameWithType: Graph.GetAllCycles
  fullName: GRYLibrary.Core.Graph.Graph.GetAllCycles
- uid: System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Cycle}
  commentId: T:System.Collections.Generic.ISet{GRYLibrary.Core.Graph.Cycle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<Cycle>
  nameWithType: ISet<Cycle>
  fullName: System.Collections.Generic.ISet<GRYLibrary.Core.Graph.Cycle>
  nameWithType.vb: ISet(Of Cycle)
  fullName.vb: System.Collections.Generic.ISet(Of GRYLibrary.Core.Graph.Cycle)
  name.vb: ISet(Of Cycle)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Graph.Cycle
    name: Cycle
    nameWithType: Cycle
    fullName: GRYLibrary.Core.Graph.Cycle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Graph.Cycle
    name: Cycle
    nameWithType: Cycle
    fullName: GRYLibrary.Core.Graph.Cycle
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph
  commentId: T:GRYLibrary.Core.Graph.Graph
  parent: GRYLibrary.Core.Graph
  name: Graph
  nameWithType: Graph
  fullName: GRYLibrary.Core.Graph.Graph
- uid: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex
  name: GetAllCyclesThroughASpecificVertex
  nameWithType: Graph.GetAllCyclesThroughASpecificVertex
  fullName: GRYLibrary.Core.Graph.Graph.GetAllCyclesThroughASpecificVertex
- uid: GRYLibrary.Core.Graph.Graph.GetShortestPath*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetShortestPath
  name: GetShortestPath
  nameWithType: Graph.GetShortestPath
  fullName: GRYLibrary.Core.Graph.Graph.GetShortestPath
- uid: System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge}
  commentId: T:System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Edge>
  nameWithType: IList<Edge>
  fullName: System.Collections.Generic.IList<GRYLibrary.Core.Graph.Edge>
  nameWithType.vb: IList(Of Edge)
  fullName.vb: System.Collections.Generic.IList(Of GRYLibrary.Core.Graph.Edge)
  name.vb: IList(Of Edge)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Graph.Edge
    name: Edge
    nameWithType: Edge
    fullName: GRYLibrary.Core.Graph.Edge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Graph.Edge
    name: Edge
    nameWithType: Edge
    fullName: GRYLibrary.Core.Graph.Edge
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.ToString*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.ToString
  name: ToString
  nameWithType: Graph.ToString
  fullName: GRYLibrary.Core.Graph.Graph.ToString
- uid: GRYLibrary.Core.Graph.Graph.GetDirectSuccessorEdges*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetDirectSuccessorEdges
  name: GetDirectSuccessorEdges
  nameWithType: Graph.GetDirectSuccessorEdges
  fullName: GRYLibrary.Core.Graph.Graph.GetDirectSuccessorEdges
- uid: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.BreadthFirstSearch
  name: BreadthFirstSearch
  nameWithType: Graph.BreadthFirstSearch
  fullName: GRYLibrary.Core.Graph.Graph.BreadthFirstSearch
- uid: System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean}
  commentId: T:System.Func{GRYLibrary.Core.Graph.Vertex,System.Collections.Generic.IList{GRYLibrary.Core.Graph.Edge},System.Boolean}
  parent: System
  definition: System.Func`3
  name: Func<Vertex, IList<Edge>, Boolean>
  nameWithType: Func<Vertex, IList<Edge>, Boolean>
  fullName: System.Func<GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList<GRYLibrary.Core.Graph.Edge>, System.Boolean>
  nameWithType.vb: Func(Of Vertex, IList(Of Edge), Boolean)
  fullName.vb: System.Func(Of GRYLibrary.Core.Graph.Vertex, System.Collections.Generic.IList(Of GRYLibrary.Core.Graph.Edge), System.Boolean)
  name.vb: Func(Of Vertex, IList(Of Edge), Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Graph.Edge
    name: Edge
    nameWithType: Edge
    fullName: GRYLibrary.Core.Graph.Edge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Graph.Edge
    name: Edge
    nameWithType: Edge
    fullName: GRYLibrary.Core.Graph.Edge
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.DepthFirstSearch*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.DepthFirstSearch
  name: DepthFirstSearch
  nameWithType: Graph.DepthFirstSearch
  fullName: GRYLibrary.Core.Graph.Graph.DepthFirstSearch
- uid: GRYLibrary.Core.Graph.Graph.TryGetEdge*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.TryGetEdge
  name: TryGetEdge
  nameWithType: Graph.TryGetEdge
  fullName: GRYLibrary.Core.Graph.Graph.TryGetEdge
- uid: GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
  commentId: P:GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
  parent: GRYLibrary.Core.Graph.Graph
  name: SelfLoopIsAllowed
  nameWithType: Graph.SelfLoopIsAllowed
  fullName: GRYLibrary.Core.Graph.Graph.SelfLoopIsAllowed
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.Equals*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.Equals
  name: Equals
  nameWithType: Graph.Equals
  fullName: GRYLibrary.Core.Graph.Graph.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.GetHashCode*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetHashCode
  name: GetHashCode
  nameWithType: Graph.GetHashCode
  fullName: GRYLibrary.Core.Graph.Graph.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GRYLibrary.Core.Graph.Graph.IsSubgraph*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.IsSubgraph
  name: IsSubgraph
  nameWithType: Graph.IsSubgraph
  fullName: GRYLibrary.Core.Graph.Graph.IsSubgraph
- uid: System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}
  commentId: T:System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Vertex, Vertex>
  nameWithType: IDictionary<Vertex, Vertex>
  fullName: System.Collections.Generic.IDictionary<GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex>
  nameWithType.vb: IDictionary(Of Vertex, Vertex)
  fullName.vb: System.Collections.Generic.IDictionary(Of GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex)
  name.vb: IDictionary(Of Vertex, Vertex)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  commentId: M:GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
  parent: GRYLibrary.Core.Graph.Graph
  isExternal: true
  name: IsSubgraph(Graph, IDictionary<Vertex, Vertex>)
  nameWithType: Graph.IsSubgraph(Graph, IDictionary<Vertex, Vertex>)
  fullName: GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph, System.Collections.Generic.IDictionary<GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex>)
  nameWithType.vb: Graph.IsSubgraph(Graph, IDictionary(Of Vertex, Vertex))
  fullName.vb: GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph, System.Collections.Generic.IDictionary(Of GRYLibrary.Core.Graph.Vertex, GRYLibrary.Core.Graph.Vertex))
  name.vb: IsSubgraph(Graph, IDictionary(Of Vertex, Vertex))
  spec.csharp:
  - uid: GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
    name: IsSubgraph
    nameWithType: Graph.IsSubgraph
    fullName: GRYLibrary.Core.Graph.Graph.IsSubgraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Graph.Graph
    name: Graph
    nameWithType: Graph
    fullName: GRYLibrary.Core.Graph.Graph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Graph.Graph.IsSubgraph(GRYLibrary.Core.Graph.Graph,System.Collections.Generic.IDictionary{GRYLibrary.Core.Graph.Vertex,GRYLibrary.Core.Graph.Vertex}@)
    name: IsSubgraph
    nameWithType: Graph.IsSubgraph
    fullName: GRYLibrary.Core.Graph.Graph.IsSubgraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: GRYLibrary.Core.Graph.Graph
    name: Graph
    nameWithType: Graph
    fullName: GRYLibrary.Core.Graph.Graph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GRYLibrary.Core.Graph.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: GRYLibrary.Core.Graph.Vertex
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Graph.Graph.IsSubgraphOf*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.IsSubgraphOf
  name: IsSubgraphOf
  nameWithType: Graph.IsSubgraphOf
  fullName: GRYLibrary.Core.Graph.Graph.IsSubgraphOf
- uid: GRYLibrary.Core.Graph.Graph.IsIsomorphic*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.IsIsomorphic
  name: IsIsomorphic
  nameWithType: Graph.IsIsomorphic
  fullName: GRYLibrary.Core.Graph.Graph.IsIsomorphic
- uid: GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle
  name: HasHamiltonianCycle
  nameWithType: Graph.HasHamiltonianCycle
  fullName: GRYLibrary.Core.Graph.Graph.HasHamiltonianCycle
- uid: GRYLibrary.Core.Graph.Cycle
  commentId: T:GRYLibrary.Core.Graph.Cycle
  parent: GRYLibrary.Core.Graph
  name: Cycle
  nameWithType: Cycle
  fullName: GRYLibrary.Core.Graph.Cycle
- uid: GRYLibrary.Core.Graph.Graph.GetMinimumDegree*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetMinimumDegree
  name: GetMinimumDegree
  nameWithType: Graph.GetMinimumDegree
  fullName: GRYLibrary.Core.Graph.Graph.GetMinimumDegree
- uid: GRYLibrary.Core.Graph.Graph.GetMaximumDegree*
  commentId: Overload:GRYLibrary.Core.Graph.Graph.GetMaximumDegree
  name: GetMaximumDegree
  nameWithType: Graph.GetMaximumDegree
  fullName: GRYLibrary.Core.Graph.Graph.GetMaximumDegree
