### YamlMime:ManagedReference
items:
- uid: GRYLibrary.Core.ExternalProgramExecutor
  commentId: T:GRYLibrary.Core.ExternalProgramExecutor
  id: ExternalProgramExecutor
  parent: GRYLibrary.Core
  children:
  - GRYLibrary.Core.ExternalProgramExecutor.AllStdErrLines
  - GRYLibrary.Core.ExternalProgramExecutor.AllStdOutLines
  - GRYLibrary.Core.ExternalProgramExecutor.Arguments
  - GRYLibrary.Core.ExternalProgramExecutor.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  - GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog(System.String,System.String,GRYLibrary.Core.Log.GRYLog,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  - GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  - GRYLibrary.Core.ExternalProgramExecutor.CreateWindow
  - GRYLibrary.Core.ExternalProgramExecutor.ExecutionDuration
  - GRYLibrary.Core.ExternalProgramExecutor.ExecutionState
  - GRYLibrary.Core.ExternalProgramExecutor.ExitCode
  - GRYLibrary.Core.ExternalProgramExecutor.GetResult
  - GRYLibrary.Core.ExternalProgramExecutor.LogObject
  - GRYLibrary.Core.ExternalProgramExecutor.LogOutput
  - GRYLibrary.Core.ExternalProgramExecutor.LogOverhead
  - GRYLibrary.Core.ExternalProgramExecutor.PrintErrorsAsInformation
  - GRYLibrary.Core.ExternalProgramExecutor.ProcessWasAbortedDueToTimeout
  - GRYLibrary.Core.ExternalProgramExecutor.ProgramPathAndFile
  - GRYLibrary.Core.ExternalProgramExecutor.RunAsAdministrator
  - GRYLibrary.Core.ExternalProgramExecutor.Running
  - GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow
  - GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  - GRYLibrary.Core.ExternalProgramExecutor.TimeoutInMilliseconds
  - GRYLibrary.Core.ExternalProgramExecutor.Title
  - GRYLibrary.Core.ExternalProgramExecutor.WorkingDirectory
  langs:
  - csharp
  - vb
  name: ExternalProgramExecutor
  nameWithType: ExternalProgramExecutor
  fullName: GRYLibrary.Core.ExternalProgramExecutor
  type: Class
  source:
    id: ExternalProgramExecutor
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 15
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public class ExternalProgramExecutor
    content.vb: Public Class ExternalProgramExecutor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  - System.Object.GRYLibrary.Core.Utilities.ToDynamic
  - GRYLibrary.Core.ExternalProgramExecutor.GRYLibrary.Core.Utilities.DeepClone``1
  - System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  commentId: M:GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  id: CreateByLogFile(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: CreateByLogFile(String, String, String, String, String, Boolean, Nullable<Int32>)
  nameWithType: ExternalProgramExecutor.CreateByLogFile(String, String, String, String, String, Boolean, Nullable<Int32>)
  fullName: GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile(System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Nullable<System.Int32>)
  type: Method
  source:
    id: CreateByLogFile
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 17
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public static ExternalProgramExecutor CreateByLogFile(string programPathAndFile, string arguments, string logFile, string workingDirectory = "", string title = "", bool printErrorsAsInformation = false, int? timeoutInMilliseconds = default(int? ))
    parameters:
    - id: programPathAndFile
      type: System.String
    - id: arguments
      type: System.String
    - id: logFile
      type: System.String
    - id: workingDirectory
      type: System.String
    - id: title
      type: System.String
    - id: printErrorsAsInformation
      type: System.Boolean
    - id: timeoutInMilliseconds
      type: System.Nullable{System.Int32}
    return:
      type: GRYLibrary.Core.ExternalProgramExecutor
    content.vb: Public Shared Function CreateByLogFile(programPathAndFile As String, arguments As String, logFile As String, workingDirectory As String = "", title As String = "", printErrorsAsInformation As Boolean = False, timeoutInMilliseconds As Integer? = Nothing) As ExternalProgramExecutor
  overload: GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile*
  nameWithType.vb: ExternalProgramExecutor.CreateByLogFile(String, String, String, String, String, Boolean, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile(System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: CreateByLogFile(String, String, String, String, String, Boolean, Nullable(Of Int32))
- uid: GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog(System.String,System.String,GRYLibrary.Core.Log.GRYLog,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  commentId: M:GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog(System.String,System.String,GRYLibrary.Core.Log.GRYLog,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  id: CreateByGRYLog(System.String,System.String,GRYLibrary.Core.Log.GRYLog,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: CreateByGRYLog(String, String, GRYLog, String, String, Boolean, Nullable<Int32>)
  nameWithType: ExternalProgramExecutor.CreateByGRYLog(String, String, GRYLog, String, String, Boolean, Nullable<Int32>)
  fullName: GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog(System.String, System.String, GRYLibrary.Core.Log.GRYLog, System.String, System.String, System.Boolean, System.Nullable<System.Int32>)
  type: Method
  source:
    id: CreateByGRYLog
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 21
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public static ExternalProgramExecutor CreateByGRYLog(string programPathAndFile, string arguments, GRYLog log, string workingDirectory = "", string title = "", bool printErrorsAsInformation = false, int? timeoutInMilliseconds = default(int? ))
    parameters:
    - id: programPathAndFile
      type: System.String
    - id: arguments
      type: System.String
    - id: log
      type: GRYLibrary.Core.Log.GRYLog
    - id: workingDirectory
      type: System.String
    - id: title
      type: System.String
    - id: printErrorsAsInformation
      type: System.Boolean
    - id: timeoutInMilliseconds
      type: System.Nullable{System.Int32}
    return:
      type: GRYLibrary.Core.ExternalProgramExecutor
    content.vb: Public Shared Function CreateByGRYLog(programPathAndFile As String, arguments As String, log As GRYLog, workingDirectory As String = "", title As String = "", printErrorsAsInformation As Boolean = False, timeoutInMilliseconds As Integer? = Nothing) As ExternalProgramExecutor
  overload: GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog*
  nameWithType.vb: ExternalProgramExecutor.CreateByGRYLog(String, String, GRYLog, String, String, Boolean, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog(System.String, System.String, GRYLibrary.Core.Log.GRYLog, System.String, System.String, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: CreateByGRYLog(String, String, GRYLog, String, String, Boolean, Nullable(Of Int32))
- uid: GRYLibrary.Core.ExternalProgramExecutor.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  commentId: M:GRYLibrary.Core.ExternalProgramExecutor.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  id: Create(System.String,System.String,System.String,System.String,System.Boolean,System.Nullable{System.Int32})
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: Create(String, String, String, String, Boolean, Nullable<Int32>)
  nameWithType: ExternalProgramExecutor.Create(String, String, String, String, Boolean, Nullable<Int32>)
  fullName: GRYLibrary.Core.ExternalProgramExecutor.Create(System.String, System.String, System.String, System.String, System.Boolean, System.Nullable<System.Int32>)
  type: Method
  source:
    id: Create
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 25
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public static ExternalProgramExecutor Create(string programPathAndFile, string arguments = "", string workingDirectory = "", string title = "", bool printErrorsAsInformation = false, int? timeoutInMilliseconds = default(int? ))
    parameters:
    - id: programPathAndFile
      type: System.String
    - id: arguments
      type: System.String
    - id: workingDirectory
      type: System.String
    - id: title
      type: System.String
    - id: printErrorsAsInformation
      type: System.Boolean
    - id: timeoutInMilliseconds
      type: System.Nullable{System.Int32}
    return:
      type: GRYLibrary.Core.ExternalProgramExecutor
    content.vb: Public Shared Function Create(programPathAndFile As String, arguments As String = "", workingDirectory As String = "", title As String = "", printErrorsAsInformation As Boolean = False, timeoutInMilliseconds As Integer? = Nothing) As ExternalProgramExecutor
  overload: GRYLibrary.Core.ExternalProgramExecutor.Create*
  nameWithType.vb: ExternalProgramExecutor.Create(String, String, String, String, Boolean, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GRYLibrary.Core.ExternalProgramExecutor.Create(System.String, System.String, System.String, System.String, System.Boolean, System.Nullable(Of System.Int32))
  name.vb: Create(String, String, String, String, Boolean, Nullable(Of Int32))
- uid: GRYLibrary.Core.ExternalProgramExecutor.ExecutionState
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.ExecutionState
  id: ExecutionState
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: ExecutionState
  nameWithType: ExternalProgramExecutor.ExecutionState
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ExecutionState
  type: Property
  source:
    id: ExecutionState
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 39
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public ExecutionState ExecutionState { get; }
    parameters: []
    return:
      type: GRYLibrary.Core.ExecutionState
    content.vb: Public ReadOnly Property ExecutionState As ExecutionState
  overload: GRYLibrary.Core.ExternalProgramExecutor.ExecutionState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.ExternalProgramExecutor.LogOverhead
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.LogOverhead
  id: LogOverhead
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: LogOverhead
  nameWithType: ExternalProgramExecutor.LogOverhead
  fullName: GRYLibrary.Core.ExternalProgramExecutor.LogOverhead
  type: Property
  source:
    id: LogOverhead
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 40
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public bool LogOverhead { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LogOverhead As Boolean
  overload: GRYLibrary.Core.ExternalProgramExecutor.LogOverhead*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.LogObject
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.LogObject
  id: LogObject
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: LogObject
  nameWithType: ExternalProgramExecutor.LogObject
  fullName: GRYLibrary.Core.ExternalProgramExecutor.LogObject
  type: Property
  source:
    id: LogObject
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 41
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public GRYLog LogObject { get; set; }
    parameters: []
    return:
      type: GRYLibrary.Core.Log.GRYLog
    content.vb: Public Property LogObject As GRYLog
  overload: GRYLibrary.Core.ExternalProgramExecutor.LogObject*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.Arguments
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.Arguments
  id: Arguments
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: ExternalProgramExecutor.Arguments
  fullName: GRYLibrary.Core.ExternalProgramExecutor.Arguments
  type: Property
  source:
    id: Arguments
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 42
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public string Arguments { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Arguments As String
  overload: GRYLibrary.Core.ExternalProgramExecutor.Arguments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.ProgramPathAndFile
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.ProgramPathAndFile
  id: ProgramPathAndFile
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: ProgramPathAndFile
  nameWithType: ExternalProgramExecutor.ProgramPathAndFile
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ProgramPathAndFile
  type: Property
  source:
    id: ProgramPathAndFile
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 43
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public string ProgramPathAndFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProgramPathAndFile As String
  overload: GRYLibrary.Core.ExternalProgramExecutor.ProgramPathAndFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.RunAsAdministrator
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.RunAsAdministrator
  id: RunAsAdministrator
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: RunAsAdministrator
  nameWithType: ExternalProgramExecutor.RunAsAdministrator
  fullName: GRYLibrary.Core.ExternalProgramExecutor.RunAsAdministrator
  type: Property
  source:
    id: RunAsAdministrator
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 44
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public bool RunAsAdministrator { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RunAsAdministrator As Boolean
  overload: GRYLibrary.Core.ExternalProgramExecutor.RunAsAdministrator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.CreateWindow
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.CreateWindow
  id: CreateWindow
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: CreateWindow
  nameWithType: ExternalProgramExecutor.CreateWindow
  fullName: GRYLibrary.Core.ExternalProgramExecutor.CreateWindow
  type: Property
  source:
    id: CreateWindow
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 45
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public bool CreateWindow { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CreateWindow As Boolean
  overload: GRYLibrary.Core.ExternalProgramExecutor.CreateWindow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.Title
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.Title
  id: Title
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ExternalProgramExecutor.Title
  fullName: GRYLibrary.Core.ExternalProgramExecutor.Title
  type: Property
  source:
    id: Title
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 46
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: GRYLibrary.Core.ExternalProgramExecutor.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.WorkingDirectory
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.WorkingDirectory
  id: WorkingDirectory
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: WorkingDirectory
  nameWithType: ExternalProgramExecutor.WorkingDirectory
  fullName: GRYLibrary.Core.ExternalProgramExecutor.WorkingDirectory
  type: Property
  source:
    id: WorkingDirectory
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 47
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public string WorkingDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WorkingDirectory As String
  overload: GRYLibrary.Core.ExternalProgramExecutor.WorkingDirectory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  id: ThrowErrorIfExitCodeIsNotZero
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: ThrowErrorIfExitCodeIsNotZero
  nameWithType: ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  type: Property
  source:
    id: ThrowErrorIfExitCodeIsNotZero
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 48
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public bool ThrowErrorIfExitCodeIsNotZero { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ThrowErrorIfExitCodeIsNotZero As Boolean
  overload: GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.TimeoutInMilliseconds
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.TimeoutInMilliseconds
  id: TimeoutInMilliseconds
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: TimeoutInMilliseconds
  nameWithType: ExternalProgramExecutor.TimeoutInMilliseconds
  fullName: GRYLibrary.Core.ExternalProgramExecutor.TimeoutInMilliseconds
  type: Property
  source:
    id: TimeoutInMilliseconds
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 49
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public int? TimeoutInMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property TimeoutInMilliseconds As Integer?
  overload: GRYLibrary.Core.ExternalProgramExecutor.TimeoutInMilliseconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.PrintErrorsAsInformation
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.PrintErrorsAsInformation
  id: PrintErrorsAsInformation
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: PrintErrorsAsInformation
  nameWithType: ExternalProgramExecutor.PrintErrorsAsInformation
  fullName: GRYLibrary.Core.ExternalProgramExecutor.PrintErrorsAsInformation
  type: Property
  source:
    id: PrintErrorsAsInformation
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 50
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public bool PrintErrorsAsInformation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PrintErrorsAsInformation As Boolean
  overload: GRYLibrary.Core.ExternalProgramExecutor.PrintErrorsAsInformation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.ExecutionDuration
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.ExecutionDuration
  id: ExecutionDuration
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: ExecutionDuration
  nameWithType: ExternalProgramExecutor.ExecutionDuration
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ExecutionDuration
  type: Property
  source:
    id: ExecutionDuration
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 53
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public TimeSpan ExecutionDuration { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property ExecutionDuration As TimeSpan
  overload: GRYLibrary.Core.ExternalProgramExecutor.ExecutionDuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.ExternalProgramExecutor.Running
  commentId: M:GRYLibrary.Core.ExternalProgramExecutor.Running
  id: Running
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: Running()
  nameWithType: ExternalProgramExecutor.Running()
  fullName: GRYLibrary.Core.ExternalProgramExecutor.Running()
  type: Method
  source:
    id: Running
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 68
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public bool Running()
    return:
      type: System.Boolean
    content.vb: Public Function Running As Boolean
  overload: GRYLibrary.Core.ExternalProgramExecutor.Running*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow
  commentId: M:GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow
  id: StartConsoleApplicationInCurrentConsoleWindow
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: StartConsoleApplicationInCurrentConsoleWindow()
  nameWithType: ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow()
  fullName: GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow()
  type: Method
  source:
    id: StartConsoleApplicationInCurrentConsoleWindow
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 92
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  summary: "\nStarts the program which was set in the properties.\n"
  example: []
  syntax:
    content: public int StartConsoleApplicationInCurrentConsoleWindow()
    return:
      type: System.Int32
      description: "\nReturns the exit-code of the executed program.\n"
    content.vb: Public Function StartConsoleApplicationInCurrentConsoleWindow As Integer
  overload: GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow*
  exceptions:
  - type: GRYLibrary.Core.UnexpectedExitCodeException
    commentId: T:GRYLibrary.Core.UnexpectedExitCodeException
    description: "\nWill be thrown if <xref href=\"GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero\" data-throw-if-not-resolved=\"false\"></xref> and the exitcode of the executed program is not 0.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nWill be thrown if <xref href=\"GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow\" data-throw-if-not-resolved=\"false\"></xref> was already called.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nWill be thrown if the given working-directory does not exist.\n"
  - type: GRYLibrary.Core.Exceptions.ProcessStartException
    commentId: T:GRYLibrary.Core.Exceptions.ProcessStartException
    description: "\nWill be thrown if the process could not be started.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.AllStdErrLines
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.AllStdErrLines
  id: AllStdErrLines
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: AllStdErrLines
  nameWithType: ExternalProgramExecutor.AllStdErrLines
  fullName: GRYLibrary.Core.ExternalProgramExecutor.AllStdErrLines
  type: Property
  source:
    id: AllStdErrLines
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 266
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  example: []
  syntax:
    content: public string[] AllStdErrLines { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property AllStdErrLines As String()
  overload: GRYLibrary.Core.ExternalProgramExecutor.AllStdErrLines*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the process is not terminated yet.\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.ExternalProgramExecutor.ProcessWasAbortedDueToTimeout
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.ProcessWasAbortedDueToTimeout
  id: ProcessWasAbortedDueToTimeout
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: ProcessWasAbortedDueToTimeout
  nameWithType: ExternalProgramExecutor.ProcessWasAbortedDueToTimeout
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ProcessWasAbortedDueToTimeout
  type: Property
  source:
    id: ProcessWasAbortedDueToTimeout
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 290
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  example: []
  syntax:
    content: public bool ProcessWasAbortedDueToTimeout { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ProcessWasAbortedDueToTimeout As Boolean
  overload: GRYLibrary.Core.ExternalProgramExecutor.ProcessWasAbortedDueToTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the process is not terminated yet.\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.ExternalProgramExecutor.ExitCode
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.ExitCode
  id: ExitCode
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: ExitCode
  nameWithType: ExternalProgramExecutor.ExitCode
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ExitCode
  type: Property
  source:
    id: ExitCode
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 312
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  example: []
  syntax:
    content: public int ExitCode { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ExitCode As Integer
  overload: GRYLibrary.Core.ExternalProgramExecutor.ExitCode*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the process is not terminated yet.\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.ExternalProgramExecutor.LogOutput
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.LogOutput
  id: LogOutput
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: LogOutput
  nameWithType: ExternalProgramExecutor.LogOutput
  fullName: GRYLibrary.Core.ExternalProgramExecutor.LogOutput
  type: Property
  source:
    id: LogOutput
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 344
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  syntax:
    content: public bool LogOutput { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LogOutput As Boolean
  overload: GRYLibrary.Core.ExternalProgramExecutor.LogOutput*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.ExternalProgramExecutor.AllStdOutLines
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.AllStdOutLines
  id: AllStdOutLines
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: AllStdOutLines
  nameWithType: ExternalProgramExecutor.AllStdOutLines
  fullName: GRYLibrary.Core.ExternalProgramExecutor.AllStdOutLines
  type: Property
  source:
    id: AllStdOutLines
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 349
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  example: []
  syntax:
    content: public string[] AllStdOutLines { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property AllStdOutLines As String()
  overload: GRYLibrary.Core.ExternalProgramExecutor.AllStdOutLines*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the process is not terminated yet.\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.ExternalProgramExecutor.GetResult
  commentId: M:GRYLibrary.Core.ExternalProgramExecutor.GetResult
  id: GetResult
  parent: GRYLibrary.Core.ExternalProgramExecutor
  langs:
  - csharp
  - vb
  name: GetResult()
  nameWithType: ExternalProgramExecutor.GetResult()
  fullName: GRYLibrary.Core.ExternalProgramExecutor.GetResult()
  type: Method
  source:
    id: GetResult
    path: C:\Data\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\ExternalProgramExecutor.cs
    startLine: 398
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core
  remarks: "\nThis summary is designed for readability and not for a further program-controlled processing of the data. For that purpose please read out the properties of this object.\n"
  example: []
  syntax:
    content: public string GetResult()
    return:
      type: System.String
      description: "\nReturns a summary of the executed program with its error-code, console-outputs, etc.\n"
    content.vb: Public Function GetResult As String
  overload: GRYLibrary.Core.ExternalProgramExecutor.GetResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf the process is not terminated yet.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GRYLibrary.Core
  commentId: N:GRYLibrary.Core
  name: GRYLibrary.Core
  nameWithType: GRYLibrary.Core
  fullName: GRYLibrary.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  name: ObjectIsEnumerable()
  nameWithType: Utilities.ObjectIsEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  name: ObjectIsSet()
  nameWithType: Utilities.ObjectIsSet()
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  name: ObjectIsList()
  nameWithType: Utilities.ObjectIsList()
  fullName: GRYLibrary.Core.Utilities.ObjectIsList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  name: ObjectIsDictionary()
  nameWithType: Utilities.ObjectIsDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  name: ObjectIsKeyValuePair()
  nameWithType: Utilities.ObjectIsKeyValuePair()
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsTuple
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  name: ObjectIsTuple()
  nameWithType: Utilities.ObjectIsTuple()
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  name: ObjectToEnumerable()
  nameWithType: Utilities.ObjectToEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  name: ObjectToEnumerable<T>()
  nameWithType: Utilities.ObjectToEnumerable<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>()
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)()
  name.vb: ObjectToEnumerable(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  name: ObjectToSet<T>()
  nameWithType: Utilities.ObjectToSet<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>()
  nameWithType.vb: Utilities.ObjectToSet(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)()
  name.vb: ObjectToSet(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  name: ObjectToList()
  nameWithType: Utilities.ObjectToList()
  fullName: GRYLibrary.Core.Utilities.ObjectToList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  name: ObjectToList<T>()
  nameWithType: Utilities.ObjectToList<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>()
  nameWithType.vb: Utilities.ObjectToList(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)()
  name.vb: ObjectToList(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  name: ObjectToDictionary()
  nameWithType: Utilities.ObjectToDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  name: ObjectToDictionary<TKey, TValue>()
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)()
  name.vb: ObjectToDictionary(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  name: ObjectToKeyValuePair<TKey, TValue>()
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToTuple``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  name: ObjectToTuple<T1, T2>()
  nameWithType: Utilities.ObjectToTuple<T1, T2>()
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>()
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)()
  name.vb: ObjectToTuple(Of T1, T2)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ToDynamic
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: Utilities.ToDynamic()
  fullName: GRYLibrary.Core.Utilities.ToDynamic()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.ExternalProgramExecutor.GRYLibrary.Core.Utilities.DeepClone``1
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<ExternalProgramExecutor>()
  nameWithType: Utilities.DeepClone<ExternalProgramExecutor>()
  fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.ExternalProgramExecutor>()
  nameWithType.vb: Utilities.DeepClone(Of ExternalProgramExecutor)()
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.ExternalProgramExecutor)()
  name.vb: DeepClone(Of ExternalProgramExecutor)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone<ExternalProgramExecutor>
    nameWithType: Utilities.DeepClone<ExternalProgramExecutor>
    fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.ExternalProgramExecutor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone(Of ExternalProgramExecutor)
    nameWithType: Utilities.DeepClone(Of ExternalProgramExecutor)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.ExternalProgramExecutor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  name: NullSafeEquals(Object)
  nameWithType: Utilities.NullSafeEquals(Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  isExternal: true
  name: ObjectIsEnumerable(Object)
  nameWithType: Utilities.ObjectIsEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities
  commentId: T:GRYLibrary.Core.Utilities
  parent: GRYLibrary.Core
  name: Utilities
  nameWithType: Utilities
  fullName: GRYLibrary.Core.Utilities
- uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  isExternal: true
  name: ObjectIsSet(Object)
  nameWithType: Utilities.ObjectIsSet(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  isExternal: true
  name: ObjectIsList(Object)
  nameWithType: Utilities.ObjectIsList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  isExternal: true
  name: ObjectIsDictionary(Object)
  nameWithType: Utilities.ObjectIsDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  isExternal: true
  name: ObjectIsKeyValuePair(Object)
  nameWithType: Utilities.ObjectIsKeyValuePair(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  isExternal: true
  name: ObjectIsTuple(Object)
  nameWithType: Utilities.ObjectIsTuple(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsTuple(System.Object)
    name: ObjectIsTuple
    nameWithType: Utilities.ObjectIsTuple
    fullName: GRYLibrary.Core.Utilities.ObjectIsTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  isExternal: true
  name: ObjectToEnumerable(Object)
  nameWithType: Utilities.ObjectToEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
  isExternal: true
  name: ObjectToEnumerable<T>(Object)
  nameWithType: Utilities.ObjectToEnumerable<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToEnumerable(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)(System.Object)
  name.vb: ObjectToEnumerable(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable<T>
    nameWithType: Utilities.ObjectToEnumerable<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable``1(System.Object)
    name: ObjectToEnumerable(Of T)
    nameWithType: Utilities.ObjectToEnumerable(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  isExternal: true
  name: ObjectToSet<T>(Object)
  nameWithType: Utilities.ObjectToSet<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToSet(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)(System.Object)
  name.vb: ObjectToSet(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  isExternal: true
  name: ObjectToList(Object)
  nameWithType: Utilities.ObjectToList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList(System.Object)
    name: ObjectToList
    nameWithType: Utilities.ObjectToList
    fullName: GRYLibrary.Core.Utilities.ObjectToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  isExternal: true
  name: ObjectToList<T>(Object)
  nameWithType: Utilities.ObjectToList<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToList(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)(System.Object)
  name.vb: ObjectToList(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  isExternal: true
  name: ObjectToDictionary(Object)
  nameWithType: Utilities.ObjectToDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary(System.Object)
    name: ObjectToDictionary
    nameWithType: Utilities.ObjectToDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  isExternal: true
  name: ObjectToDictionary<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)(System.Object)
  name.vb: ObjectToDictionary(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  isExternal: true
  name: ObjectToKeyValuePair<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)(System.Object)
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
  isExternal: true
  name: ObjectToTuple<T1, T2>(Object)
  nameWithType: Utilities.ObjectToTuple<T1, T2>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>(System.Object)
  nameWithType.vb: Utilities.ObjectToTuple(Of T1, T2)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)(System.Object)
  name.vb: ObjectToTuple(Of T1, T2)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple<T1, T2>
    nameWithType: Utilities.ObjectToTuple<T1, T2>
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple<T1, T2>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToTuple``2(System.Object)
    name: ObjectToTuple(Of T1, T2)
    nameWithType: Utilities.ObjectToTuple(Of T1, T2)
    fullName: GRYLibrary.Core.Utilities.ObjectToTuple(Of T1, T2)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: Utilities.ToDynamic(Object)
  fullName: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: Utilities.DeepClone<T>(T)
  fullName: GRYLibrary.Core.Utilities.DeepClone<T>(T)
  nameWithType.vb: Utilities.DeepClone(Of T)(T)
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: Utilities.DeepClone<T>
    fullName: GRYLibrary.Core.Utilities.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: Utilities.DeepClone(Of T)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  isExternal: true
  name: NullSafeEquals(Object, Object)
  nameWithType: Utilities.NullSafeEquals(Object, Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object, System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile
  name: CreateByLogFile
  nameWithType: ExternalProgramExecutor.CreateByLogFile
  fullName: GRYLibrary.Core.ExternalProgramExecutor.CreateByLogFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.ExternalProgramExecutor
  commentId: T:GRYLibrary.Core.ExternalProgramExecutor
  parent: GRYLibrary.Core
  name: ExternalProgramExecutor
  nameWithType: ExternalProgramExecutor
  fullName: GRYLibrary.Core.ExternalProgramExecutor
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog
  name: CreateByGRYLog
  nameWithType: ExternalProgramExecutor.CreateByGRYLog
  fullName: GRYLibrary.Core.ExternalProgramExecutor.CreateByGRYLog
- uid: GRYLibrary.Core.Log.GRYLog
  commentId: T:GRYLibrary.Core.Log.GRYLog
  parent: GRYLibrary.Core.Log
  name: GRYLog
  nameWithType: GRYLog
  fullName: GRYLibrary.Core.Log.GRYLog
- uid: GRYLibrary.Core.Log
  commentId: N:GRYLibrary.Core.Log
  name: GRYLibrary.Core.Log
  nameWithType: GRYLibrary.Core.Log
  fullName: GRYLibrary.Core.Log
- uid: GRYLibrary.Core.ExternalProgramExecutor.Create*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.Create
  name: Create
  nameWithType: ExternalProgramExecutor.Create
  fullName: GRYLibrary.Core.ExternalProgramExecutor.Create
- uid: GRYLibrary.Core.ExternalProgramExecutor.ExecutionState*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.ExecutionState
  name: ExecutionState
  nameWithType: ExternalProgramExecutor.ExecutionState
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ExecutionState
- uid: GRYLibrary.Core.ExecutionState
  commentId: T:GRYLibrary.Core.ExecutionState
  parent: GRYLibrary.Core
  name: ExecutionState
  nameWithType: ExecutionState
  fullName: GRYLibrary.Core.ExecutionState
- uid: GRYLibrary.Core.ExternalProgramExecutor.LogOverhead*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.LogOverhead
  name: LogOverhead
  nameWithType: ExternalProgramExecutor.LogOverhead
  fullName: GRYLibrary.Core.ExternalProgramExecutor.LogOverhead
- uid: GRYLibrary.Core.ExternalProgramExecutor.LogObject*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.LogObject
  name: LogObject
  nameWithType: ExternalProgramExecutor.LogObject
  fullName: GRYLibrary.Core.ExternalProgramExecutor.LogObject
- uid: GRYLibrary.Core.ExternalProgramExecutor.Arguments*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.Arguments
  name: Arguments
  nameWithType: ExternalProgramExecutor.Arguments
  fullName: GRYLibrary.Core.ExternalProgramExecutor.Arguments
- uid: GRYLibrary.Core.ExternalProgramExecutor.ProgramPathAndFile*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.ProgramPathAndFile
  name: ProgramPathAndFile
  nameWithType: ExternalProgramExecutor.ProgramPathAndFile
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ProgramPathAndFile
- uid: GRYLibrary.Core.ExternalProgramExecutor.RunAsAdministrator*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.RunAsAdministrator
  name: RunAsAdministrator
  nameWithType: ExternalProgramExecutor.RunAsAdministrator
  fullName: GRYLibrary.Core.ExternalProgramExecutor.RunAsAdministrator
- uid: GRYLibrary.Core.ExternalProgramExecutor.CreateWindow*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.CreateWindow
  name: CreateWindow
  nameWithType: ExternalProgramExecutor.CreateWindow
  fullName: GRYLibrary.Core.ExternalProgramExecutor.CreateWindow
- uid: GRYLibrary.Core.ExternalProgramExecutor.Title*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.Title
  name: Title
  nameWithType: ExternalProgramExecutor.Title
  fullName: GRYLibrary.Core.ExternalProgramExecutor.Title
- uid: GRYLibrary.Core.ExternalProgramExecutor.WorkingDirectory*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.WorkingDirectory
  name: WorkingDirectory
  nameWithType: ExternalProgramExecutor.WorkingDirectory
  fullName: GRYLibrary.Core.ExternalProgramExecutor.WorkingDirectory
- uid: GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  name: ThrowErrorIfExitCodeIsNotZero
  nameWithType: ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
- uid: GRYLibrary.Core.ExternalProgramExecutor.TimeoutInMilliseconds*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.TimeoutInMilliseconds
  name: TimeoutInMilliseconds
  nameWithType: ExternalProgramExecutor.TimeoutInMilliseconds
  fullName: GRYLibrary.Core.ExternalProgramExecutor.TimeoutInMilliseconds
- uid: GRYLibrary.Core.ExternalProgramExecutor.PrintErrorsAsInformation*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.PrintErrorsAsInformation
  name: PrintErrorsAsInformation
  nameWithType: ExternalProgramExecutor.PrintErrorsAsInformation
  fullName: GRYLibrary.Core.ExternalProgramExecutor.PrintErrorsAsInformation
- uid: GRYLibrary.Core.ExternalProgramExecutor.ExecutionDuration*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.ExecutionDuration
  name: ExecutionDuration
  nameWithType: ExternalProgramExecutor.ExecutionDuration
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ExecutionDuration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: GRYLibrary.Core.ExternalProgramExecutor.Running*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.Running
  name: Running
  nameWithType: ExternalProgramExecutor.Running
  fullName: GRYLibrary.Core.ExternalProgramExecutor.Running
- uid: GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  commentId: P:GRYLibrary.Core.ExternalProgramExecutor.ThrowErrorIfExitCodeIsNotZero
  isExternal: true
- uid: GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow
  commentId: M:GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow
  isExternal: true
- uid: GRYLibrary.Core.UnexpectedExitCodeException
  commentId: T:GRYLibrary.Core.UnexpectedExitCodeException
  name: UnexpectedExitCodeException
  nameWithType: UnexpectedExitCodeException
  fullName: GRYLibrary.Core.UnexpectedExitCodeException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: GRYLibrary.Core.Exceptions.ProcessStartException
  commentId: T:GRYLibrary.Core.Exceptions.ProcessStartException
  name: ProcessStartException
  nameWithType: ProcessStartException
  fullName: GRYLibrary.Core.Exceptions.ProcessStartException
- uid: GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow
  name: StartConsoleApplicationInCurrentConsoleWindow
  nameWithType: ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow
  fullName: GRYLibrary.Core.ExternalProgramExecutor.StartConsoleApplicationInCurrentConsoleWindow
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GRYLibrary.Core.ExternalProgramExecutor.AllStdErrLines*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.AllStdErrLines
  name: AllStdErrLines
  nameWithType: ExternalProgramExecutor.AllStdErrLines
  fullName: GRYLibrary.Core.ExternalProgramExecutor.AllStdErrLines
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: GRYLibrary.Core.ExternalProgramExecutor.ProcessWasAbortedDueToTimeout*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.ProcessWasAbortedDueToTimeout
  name: ProcessWasAbortedDueToTimeout
  nameWithType: ExternalProgramExecutor.ProcessWasAbortedDueToTimeout
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ProcessWasAbortedDueToTimeout
- uid: GRYLibrary.Core.ExternalProgramExecutor.ExitCode*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.ExitCode
  name: ExitCode
  nameWithType: ExternalProgramExecutor.ExitCode
  fullName: GRYLibrary.Core.ExternalProgramExecutor.ExitCode
- uid: GRYLibrary.Core.ExternalProgramExecutor.LogOutput*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.LogOutput
  name: LogOutput
  nameWithType: ExternalProgramExecutor.LogOutput
  fullName: GRYLibrary.Core.ExternalProgramExecutor.LogOutput
- uid: GRYLibrary.Core.ExternalProgramExecutor.AllStdOutLines*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.AllStdOutLines
  name: AllStdOutLines
  nameWithType: ExternalProgramExecutor.AllStdOutLines
  fullName: GRYLibrary.Core.ExternalProgramExecutor.AllStdOutLines
- uid: GRYLibrary.Core.ExternalProgramExecutor.GetResult*
  commentId: Overload:GRYLibrary.Core.ExternalProgramExecutor.GetResult
  name: GetResult
  nameWithType: ExternalProgramExecutor.GetResult
  fullName: GRYLibrary.Core.ExternalProgramExecutor.GetResult
