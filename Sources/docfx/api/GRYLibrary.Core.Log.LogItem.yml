### YamlMime:ManagedReference
items:
- uid: GRYLibrary.Core.Log.LogItem
  commentId: T:GRYLibrary.Core.Log.LogItem
  id: LogItem
  parent: GRYLibrary.Core.Log
  children:
  - GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String})
  - GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},LogLevel)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},LogLevel,System.Exception)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,LogLevel)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,LogLevel,System.Exception)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,System.Exception)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.Exception)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.String)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.String,LogLevel)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.String,LogLevel,System.Exception)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,LogLevel)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,LogLevel,System.Exception)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,System.Exception)
  - GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.Exception)
  - GRYLibrary.Core.Log.LogItem.Category
  - GRYLibrary.Core.Log.LogItem.EventId
  - GRYLibrary.Core.Log.LogItem.Exception
  - GRYLibrary.Core.Log.LogItem.LogLevel
  - GRYLibrary.Core.Log.LogItem.MomentOfLogEntry
  - GRYLibrary.Core.Log.LogItem.PlainMessage
  langs:
  - csharp
  - vb
  name: LogItem
  nameWithType: LogItem
  fullName: GRYLibrary.Core.Log.LogItem
  type: Struct
  source:
    id: LogItem
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 6
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public struct LogItem
    content.vb: Public Structure LogItem
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  - System.Object.GRYLibrary.Core.Utilities.ToDynamic
  - GRYLibrary.Core.Log.LogItem.GRYLibrary.Core.Utilities.DeepClone``1
  - GRYLibrary.Core.Log.LogItem.GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
  - System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: GRYLibrary.Core.Log.LogItem.EventId
  commentId: P:GRYLibrary.Core.Log.LogItem.EventId
  id: EventId
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: LogItem.EventId
  fullName: GRYLibrary.Core.Log.LogItem.EventId
  type: Property
  source:
    id: EventId
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 16
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public int EventId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EventId As Integer
  overload: GRYLibrary.Core.Log.LogItem.EventId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.Category
  commentId: P:GRYLibrary.Core.Log.LogItem.Category
  id: Category
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: LogItem.Category
  fullName: GRYLibrary.Core.Log.LogItem.Category
  type: Property
  source:
    id: Category
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 17
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public short Category { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Property Category As Short
  overload: GRYLibrary.Core.Log.LogItem.Category*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.LogLevel
  commentId: P:GRYLibrary.Core.Log.LogItem.LogLevel
  id: LogLevel
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogLevel
  nameWithType: LogItem.LogLevel
  fullName: GRYLibrary.Core.Log.LogItem.LogLevel
  type: Property
  source:
    id: LogLevel
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 19
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogLevel LogLevel { get; }
    parameters: []
    return:
      type: LogLevel
    content.vb: Public ReadOnly Property LogLevel As LogLevel
  overload: GRYLibrary.Core.Log.LogItem.LogLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.Log.LogItem.Exception
  commentId: P:GRYLibrary.Core.Log.LogItem.Exception
  id: Exception
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: LogItem.Exception
  fullName: GRYLibrary.Core.Log.LogItem.Exception
  type: Property
  source:
    id: Exception
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 20
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: GRYLibrary.Core.Log.LogItem.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.Log.LogItem.MomentOfLogEntry
  commentId: P:GRYLibrary.Core.Log.LogItem.MomentOfLogEntry
  id: MomentOfLogEntry
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: MomentOfLogEntry
  nameWithType: LogItem.MomentOfLogEntry
  fullName: GRYLibrary.Core.Log.LogItem.MomentOfLogEntry
  type: Property
  source:
    id: MomentOfLogEntry
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 21
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public DateTime MomentOfLogEntry { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property MomentOfLogEntry As Date
  overload: GRYLibrary.Core.Log.LogItem.MomentOfLogEntry*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.Log.LogItem.PlainMessage
  commentId: P:GRYLibrary.Core.Log.LogItem.PlainMessage
  id: PlainMessage
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: PlainMessage
  nameWithType: LogItem.PlainMessage
  fullName: GRYLibrary.Core.Log.LogItem.PlainMessage
  type: Property
  source:
    id: PlainMessage
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 23
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public string PlainMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PlainMessage As String
  overload: GRYLibrary.Core.Log.LogItem.PlainMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.String)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(String)
  nameWithType: LogItem.LogItem(String)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.String)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 36
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(string getMessageFunction)
    parameters:
    - id: getMessageFunction
      type: System.String
    content.vb: Public Sub New(getMessageFunction As String)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.String,LogLevel)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.String,LogLevel)
  id: '#ctor(System.String,LogLevel)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(String, LogLevel)
  nameWithType: LogItem.LogItem(String, LogLevel)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.String, LogLevel)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 39
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(string getMessageFunction, LogLevel logLevel)
    parameters:
    - id: getMessageFunction
      type: System.String
    - id: logLevel
      type: LogLevel
    content.vb: Public Sub New(getMessageFunction As String, logLevel As LogLevel)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.Exception)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(String, Exception)
  nameWithType: LogItem.LogItem(String, Exception)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.String, System.Exception)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 43
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(string getMessageFunction, Exception exception)
    parameters:
    - id: getMessageFunction
      type: System.String
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(getMessageFunction As String, exception As Exception)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.String,LogLevel,System.Exception)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.String,LogLevel,System.Exception)
  id: '#ctor(System.String,LogLevel,System.Exception)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(String, LogLevel, Exception)
  nameWithType: LogItem.LogItem(String, LogLevel, Exception)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.String, LogLevel, System.Exception)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 46
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(string getMessageFunction, LogLevel logLevel, Exception exception)
    parameters:
    - id: getMessageFunction
      type: System.String
    - id: logLevel
      type: LogLevel
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(getMessageFunction As String, logLevel As LogLevel, exception As Exception)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String})
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String})
  id: '#ctor(System.Func{System.String})'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(Func<String>)
  nameWithType: LogItem.LogItem(Func<String>)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.Func<System.String>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 49
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(Func<string> getMessageFunction)
    parameters:
    - id: getMessageFunction
      type: System.Func{System.String}
    content.vb: Public Sub New(getMessageFunction As Func(Of String))
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  nameWithType.vb: LogItem.LogItem(Func(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.LogItem.LogItem(System.Func(Of System.String))
  name.vb: LogItem(Func(Of String))
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},LogLevel)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},LogLevel)
  id: '#ctor(System.Func{System.String},LogLevel)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(Func<String>, LogLevel)
  nameWithType: LogItem.LogItem(Func<String>, LogLevel)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.Func<System.String>, LogLevel)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 52
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(Func<string> getMessageFunction, LogLevel logLevel)
    parameters:
    - id: getMessageFunction
      type: System.Func{System.String}
    - id: logLevel
      type: LogLevel
    content.vb: Public Sub New(getMessageFunction As Func(Of String), logLevel As LogLevel)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  nameWithType.vb: LogItem.LogItem(Func(Of String), LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.LogItem.LogItem(System.Func(Of System.String), LogLevel)
  name.vb: LogItem(Func(Of String), LogLevel)
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.Exception)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.Exception)
  id: '#ctor(System.Func{System.String},System.Exception)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(Func<String>, Exception)
  nameWithType: LogItem.LogItem(Func<String>, Exception)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.Func<System.String>, System.Exception)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 56
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(Func<string> getMessageFunction, Exception exception)
    parameters:
    - id: getMessageFunction
      type: System.Func{System.String}
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(getMessageFunction As Func(Of String), exception As Exception)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  nameWithType.vb: LogItem.LogItem(Func(Of String), Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.LogItem.LogItem(System.Func(Of System.String), System.Exception)
  name.vb: LogItem(Func(Of String), Exception)
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},LogLevel,System.Exception)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},LogLevel,System.Exception)
  id: '#ctor(System.Func{System.String},LogLevel,System.Exception)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(Func<String>, LogLevel, Exception)
  nameWithType: LogItem.LogItem(Func<String>, LogLevel, Exception)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.Func<System.String>, LogLevel, System.Exception)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 59
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(Func<string> getMessageFunction, LogLevel logLevel, Exception exception)
    parameters:
    - id: getMessageFunction
      type: System.Func{System.String}
    - id: logLevel
      type: LogLevel
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(getMessageFunction As Func(Of String), logLevel As LogLevel, exception As Exception)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  nameWithType.vb: LogItem.LogItem(Func(Of String), LogLevel, Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.LogItem.LogItem(System.Func(Of System.String), LogLevel, System.Exception)
  name.vb: LogItem(Func(Of String), LogLevel, Exception)
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime)
  id: '#ctor(System.String,System.DateTime)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(String, DateTime)
  nameWithType: LogItem.LogItem(String, DateTime)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.String, System.DateTime)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 62
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(string getMessageFunction, DateTime dateTime)
    parameters:
    - id: getMessageFunction
      type: System.String
    - id: dateTime
      type: System.DateTime
    content.vb: Public Sub New(getMessageFunction As String, dateTime As Date)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,LogLevel)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,LogLevel)
  id: '#ctor(System.String,System.DateTime,LogLevel)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(String, DateTime, LogLevel)
  nameWithType: LogItem.LogItem(String, DateTime, LogLevel)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.String, System.DateTime, LogLevel)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 65
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(string getMessageFunction, DateTime dateTime, LogLevel logLevel)
    parameters:
    - id: getMessageFunction
      type: System.String
    - id: dateTime
      type: System.DateTime
    - id: logLevel
      type: LogLevel
    content.vb: Public Sub New(getMessageFunction As String, dateTime As Date, logLevel As LogLevel)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,System.Exception)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,System.Exception)
  id: '#ctor(System.String,System.DateTime,System.Exception)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(String, DateTime, Exception)
  nameWithType: LogItem.LogItem(String, DateTime, Exception)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.String, System.DateTime, System.Exception)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 69
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(string getMessageFunction, DateTime dateTime, Exception exception)
    parameters:
    - id: getMessageFunction
      type: System.String
    - id: dateTime
      type: System.DateTime
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(getMessageFunction As String, dateTime As Date, exception As Exception)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,LogLevel,System.Exception)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.String,System.DateTime,LogLevel,System.Exception)
  id: '#ctor(System.String,System.DateTime,LogLevel,System.Exception)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(String, DateTime, LogLevel, Exception)
  nameWithType: LogItem.LogItem(String, DateTime, LogLevel, Exception)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.String, System.DateTime, LogLevel, System.Exception)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 72
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(string getMessageFunction, DateTime dateTime, LogLevel logLevel, Exception exception)
    parameters:
    - id: getMessageFunction
      type: System.String
    - id: dateTime
      type: System.DateTime
    - id: logLevel
      type: LogLevel
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(getMessageFunction As String, dateTime As Date, logLevel As LogLevel, exception As Exception)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime)
  id: '#ctor(System.Func{System.String},System.DateTime)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(Func<String>, DateTime)
  nameWithType: LogItem.LogItem(Func<String>, DateTime)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.Func<System.String>, System.DateTime)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 75
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(Func<string> getMessageFunction, DateTime dateTime)
    parameters:
    - id: getMessageFunction
      type: System.Func{System.String}
    - id: dateTime
      type: System.DateTime
    content.vb: Public Sub New(getMessageFunction As Func(Of String), dateTime As Date)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  nameWithType.vb: LogItem.LogItem(Func(Of String), DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.LogItem.LogItem(System.Func(Of System.String), System.DateTime)
  name.vb: LogItem(Func(Of String), DateTime)
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,LogLevel)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,LogLevel)
  id: '#ctor(System.Func{System.String},System.DateTime,LogLevel)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(Func<String>, DateTime, LogLevel)
  nameWithType: LogItem.LogItem(Func<String>, DateTime, LogLevel)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.Func<System.String>, System.DateTime, LogLevel)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 78
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(Func<string> getMessageFunction, DateTime dateTime, LogLevel logLevel)
    parameters:
    - id: getMessageFunction
      type: System.Func{System.String}
    - id: dateTime
      type: System.DateTime
    - id: logLevel
      type: LogLevel
    content.vb: Public Sub New(getMessageFunction As Func(Of String), dateTime As Date, logLevel As LogLevel)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  nameWithType.vb: LogItem.LogItem(Func(Of String), DateTime, LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.LogItem.LogItem(System.Func(Of System.String), System.DateTime, LogLevel)
  name.vb: LogItem(Func(Of String), DateTime, LogLevel)
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,System.Exception)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,System.Exception)
  id: '#ctor(System.Func{System.String},System.DateTime,System.Exception)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(Func<String>, DateTime, Exception)
  nameWithType: LogItem.LogItem(Func<String>, DateTime, Exception)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.Func<System.String>, System.DateTime, System.Exception)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 82
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(Func<string> getMessageFunction, DateTime dateTime, Exception exception)
    parameters:
    - id: getMessageFunction
      type: System.Func{System.String}
    - id: dateTime
      type: System.DateTime
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(getMessageFunction As Func(Of String), dateTime As Date, exception As Exception)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  nameWithType.vb: LogItem.LogItem(Func(Of String), DateTime, Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.LogItem.LogItem(System.Func(Of System.String), System.DateTime, System.Exception)
  name.vb: LogItem(Func(Of String), DateTime, Exception)
- uid: GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,LogLevel,System.Exception)
  commentId: M:GRYLibrary.Core.Log.LogItem.#ctor(System.Func{System.String},System.DateTime,LogLevel,System.Exception)
  id: '#ctor(System.Func{System.String},System.DateTime,LogLevel,System.Exception)'
  parent: GRYLibrary.Core.Log.LogItem
  langs:
  - csharp
  - vb
  name: LogItem(Func<String>, DateTime, LogLevel, Exception)
  nameWithType: LogItem.LogItem(Func<String>, DateTime, LogLevel, Exception)
  fullName: GRYLibrary.Core.Log.LogItem.LogItem(System.Func<System.String>, System.DateTime, LogLevel, System.Exception)
  type: Constructor
  source:
    id: .ctor
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Log\LogItem.cs
    startLine: 85
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Log
  syntax:
    content: public LogItem(Func<string> getMessageFunction, DateTime dateTime, LogLevel logLevel, Exception exception)
    parameters:
    - id: getMessageFunction
      type: System.Func{System.String}
    - id: dateTime
      type: System.DateTime
    - id: logLevel
      type: LogLevel
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(getMessageFunction As Func(Of String), dateTime As Date, logLevel As LogLevel, exception As Exception)
  overload: GRYLibrary.Core.Log.LogItem.#ctor*
  nameWithType.vb: LogItem.LogItem(Func(Of String), DateTime, LogLevel, Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GRYLibrary.Core.Log.LogItem.LogItem(System.Func(Of System.String), System.DateTime, LogLevel, System.Exception)
  name.vb: LogItem(Func(Of String), DateTime, LogLevel, Exception)
references:
- uid: GRYLibrary.Core.Log
  commentId: N:GRYLibrary.Core.Log
  name: GRYLibrary.Core.Log
  nameWithType: GRYLibrary.Core.Log
  fullName: GRYLibrary.Core.Log
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  name: ObjectIsEnumerable()
  nameWithType: Utilities.ObjectIsEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  name: ObjectToEnumerable()
  nameWithType: Utilities.ObjectToEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
  name: ObjectToEnumerableGeneric<T>()
  nameWithType: Utilities.ObjectToEnumerableGeneric<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric<T>()
  nameWithType.vb: Utilities.ObjectToEnumerableGeneric(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric(Of T)()
  name.vb: ObjectToEnumerableGeneric(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1
    name: ObjectToEnumerableGeneric<T>
    nameWithType: Utilities.ObjectToEnumerableGeneric<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1
    name: ObjectToEnumerableGeneric(Of T)
    nameWithType: Utilities.ObjectToEnumerableGeneric(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  name: ObjectIsList()
  nameWithType: Utilities.ObjectIsList()
  fullName: GRYLibrary.Core.Utilities.ObjectIsList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  name: ObjectToList<T>()
  nameWithType: Utilities.ObjectToList<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>()
  nameWithType.vb: Utilities.ObjectToList(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)()
  name.vb: ObjectToList(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  name: ObjectIsSet()
  nameWithType: Utilities.ObjectIsSet()
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  name: ObjectIsKeyValuePair()
  nameWithType: Utilities.ObjectIsKeyValuePair()
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  name: ObjectToKeyValuePair<TKey, TValue>()
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  name: ObjectToSet<T>()
  nameWithType: Utilities.ObjectToSet<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>()
  nameWithType.vb: Utilities.ObjectToSet(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)()
  name.vb: ObjectToSet(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  name: ObjectIsDictionary()
  nameWithType: Utilities.ObjectIsDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  name: ObjectToDictionary<TKey, TValue>()
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)()
  name.vb: ObjectToDictionary(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ToDynamic
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: Utilities.ToDynamic()
  fullName: GRYLibrary.Core.Utilities.ToDynamic()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.LogItem.GRYLibrary.Core.Utilities.DeepClone``1
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<LogItem>()
  nameWithType: Utilities.DeepClone<LogItem>()
  fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Log.LogItem>()
  nameWithType.vb: Utilities.DeepClone(Of LogItem)()
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Log.LogItem)()
  name.vb: DeepClone(Of LogItem)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone<LogItem>
    nameWithType: Utilities.DeepClone<LogItem>
    fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Log.LogItem>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone(Of LogItem)
    nameWithType: Utilities.DeepClone(Of LogItem)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Log.LogItem)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Log.LogItem.GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
  commentId: M:GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  name: PersistToDisk<LogItem>(String)
  nameWithType: Utilities.PersistToDisk<LogItem>(String)
  fullName: GRYLibrary.Core.Utilities.PersistToDisk<GRYLibrary.Core.Log.LogItem>(System.String)
  nameWithType.vb: Utilities.PersistToDisk(Of LogItem)(String)
  fullName.vb: GRYLibrary.Core.Utilities.PersistToDisk(Of GRYLibrary.Core.Log.LogItem)(System.String)
  name.vb: PersistToDisk(Of LogItem)(String)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
    name: PersistToDisk<LogItem>
    nameWithType: Utilities.PersistToDisk<LogItem>
    fullName: GRYLibrary.Core.Utilities.PersistToDisk<GRYLibrary.Core.Log.LogItem>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(System.String)
    name: PersistToDisk(Of LogItem)
    nameWithType: Utilities.PersistToDisk(Of LogItem)
    fullName: GRYLibrary.Core.Utilities.PersistToDisk(Of GRYLibrary.Core.Log.LogItem)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  name: NullSafeEquals(Object)
  nameWithType: Utilities.NullSafeEquals(Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  isExternal: true
  name: ObjectIsEnumerable(Object)
  nameWithType: Utilities.ObjectIsEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities
  commentId: T:GRYLibrary.Core.Utilities
  parent: GRYLibrary.Core
  name: Utilities
  nameWithType: Utilities
  fullName: GRYLibrary.Core.Utilities
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  isExternal: true
  name: ObjectToEnumerable(Object)
  nameWithType: Utilities.ObjectToEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
  isExternal: true
  name: ObjectToEnumerableGeneric<T>(Object)
  nameWithType: Utilities.ObjectToEnumerableGeneric<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToEnumerableGeneric(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric(Of T)(System.Object)
  name.vb: ObjectToEnumerableGeneric(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
    name: ObjectToEnumerableGeneric<T>
    nameWithType: Utilities.ObjectToEnumerableGeneric<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
    name: ObjectToEnumerableGeneric(Of T)
    nameWithType: Utilities.ObjectToEnumerableGeneric(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  isExternal: true
  name: ObjectIsList(Object)
  nameWithType: Utilities.ObjectIsList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  isExternal: true
  name: ObjectToList<T>(Object)
  nameWithType: Utilities.ObjectToList<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToList(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)(System.Object)
  name.vb: ObjectToList(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  isExternal: true
  name: ObjectIsSet(Object)
  nameWithType: Utilities.ObjectIsSet(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  isExternal: true
  name: ObjectIsKeyValuePair(Object)
  nameWithType: Utilities.ObjectIsKeyValuePair(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  isExternal: true
  name: ObjectToKeyValuePair<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)(System.Object)
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  isExternal: true
  name: ObjectToSet<T>(Object)
  nameWithType: Utilities.ObjectToSet<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToSet(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)(System.Object)
  name.vb: ObjectToSet(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  isExternal: true
  name: ObjectIsDictionary(Object)
  nameWithType: Utilities.ObjectIsDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  isExternal: true
  name: ObjectToDictionary<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)(System.Object)
  name.vb: ObjectToDictionary(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: Utilities.ToDynamic(Object)
  fullName: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: Utilities.DeepClone<T>(T)
  fullName: GRYLibrary.Core.Utilities.DeepClone<T>(T)
  nameWithType.vb: Utilities.DeepClone(Of T)(T)
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: Utilities.DeepClone<T>
    fullName: GRYLibrary.Core.Utilities.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: Utilities.DeepClone(Of T)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  commentId: M:GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
  isExternal: true
  name: PersistToDisk<T>(T, String)
  nameWithType: Utilities.PersistToDisk<T>(T, String)
  fullName: GRYLibrary.Core.Utilities.PersistToDisk<T>(T, System.String)
  nameWithType.vb: Utilities.PersistToDisk(Of T)(T, String)
  fullName.vb: GRYLibrary.Core.Utilities.PersistToDisk(Of T)(T, System.String)
  name.vb: PersistToDisk(Of T)(T, String)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
    name: PersistToDisk<T>
    nameWithType: Utilities.PersistToDisk<T>
    fullName: GRYLibrary.Core.Utilities.PersistToDisk<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.PersistToDisk``1(``0,System.String)
    name: PersistToDisk(Of T)
    nameWithType: Utilities.PersistToDisk(Of T)
    fullName: GRYLibrary.Core.Utilities.PersistToDisk(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  isExternal: true
  name: NullSafeEquals(Object, Object)
  nameWithType: Utilities.NullSafeEquals(Object, Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object, System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GRYLibrary.Core
  commentId: N:GRYLibrary.Core
  name: GRYLibrary.Core
  nameWithType: GRYLibrary.Core
  fullName: GRYLibrary.Core
- uid: GRYLibrary.Core.Log.LogItem.EventId*
  commentId: Overload:GRYLibrary.Core.Log.LogItem.EventId
  name: EventId
  nameWithType: LogItem.EventId
  fullName: GRYLibrary.Core.Log.LogItem.EventId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GRYLibrary.Core.Log.LogItem.Category*
  commentId: Overload:GRYLibrary.Core.Log.LogItem.Category
  name: Category
  nameWithType: LogItem.Category
  fullName: GRYLibrary.Core.Log.LogItem.Category
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: GRYLibrary.Core.Log.LogItem.LogLevel*
  commentId: Overload:GRYLibrary.Core.Log.LogItem.LogLevel
  name: LogLevel
  nameWithType: LogItem.LogLevel
  fullName: GRYLibrary.Core.Log.LogItem.LogLevel
- uid: LogLevel
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: LogLevel
- uid: GRYLibrary.Core.Log.LogItem.Exception*
  commentId: Overload:GRYLibrary.Core.Log.LogItem.Exception
  name: Exception
  nameWithType: LogItem.Exception
  fullName: GRYLibrary.Core.Log.LogItem.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: GRYLibrary.Core.Log.LogItem.MomentOfLogEntry*
  commentId: Overload:GRYLibrary.Core.Log.LogItem.MomentOfLogEntry
  name: MomentOfLogEntry
  nameWithType: LogItem.MomentOfLogEntry
  fullName: GRYLibrary.Core.Log.LogItem.MomentOfLogEntry
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: GRYLibrary.Core.Log.LogItem.PlainMessage*
  commentId: Overload:GRYLibrary.Core.Log.LogItem.PlainMessage
  name: PlainMessage
  nameWithType: LogItem.PlainMessage
  fullName: GRYLibrary.Core.Log.LogItem.PlainMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GRYLibrary.Core.Log.LogItem.#ctor*
  commentId: Overload:GRYLibrary.Core.Log.LogItem.#ctor
  name: LogItem
  nameWithType: LogItem.LogItem
  fullName: GRYLibrary.Core.Log.LogItem.LogItem
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
