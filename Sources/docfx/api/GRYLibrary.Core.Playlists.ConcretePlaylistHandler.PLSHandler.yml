### YamlMime:ManagedReference
items:
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  commentId: T:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  id: PLSHandler
  parent: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  children:
  - GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  - GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.CreatePlaylist(System.String)
  - GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  - GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetAmountOfItems(System.String)
  - GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetSongsFromPlaylist(System.String)
  - GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.Instance
  langs:
  - csharp
  - vb
  name: PLSHandler
  nameWithType: PLSHandler
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  type: Class
  source:
    id: PLSHandler
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Playlists\ConcretePlaylistHandler\PLSHandler.cs
    startLine: 7
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  syntax:
    content: 'public class PLSHandler : AbstractPlaylistHandler'
    content.vb: >-
      Public Class PLSHandler
          Inherits AbstractPlaylistHandler
  inheritance:
  - System.Object
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  inheritedMembers:
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.ExtensionsOfReadablePlaylists
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.Encoding
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AllowedFiletypesForMusicFiles
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetConcretePlaylistHandler(System.String)
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.Boolean,System.Boolean)
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.String,System.Boolean,System.Boolean)
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String})
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsReadablePlaylist(System.String)
  - GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsAllowedAsPlaylistItem(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  - System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  - System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  - System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  - System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  - System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  - System.Object.GRYLibrary.Core.Utilities.ToDynamic
  - GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GRYLibrary.Core.Utilities.DeepClone``1
  - System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.Instance
  commentId: P:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.Instance
  id: Instance
  parent: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: PLSHandler.Instance
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.Instance
  type: Property
  source:
    id: Instance
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Playlists\ConcretePlaylistHandler\PLSHandler.cs
    startLine: 9
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  syntax:
    content: public static PLSHandler Instance { get; }
    parameters: []
    return:
      type: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
    content.vb: Public Shared ReadOnly Property Instance As PLSHandler
  overload: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  langs:
  - csharp
  - vb
  name: AddSongsToPlaylistImplementation(String, IEnumerable<String>)
  nameWithType: PLSHandler.AddSongsToPlaylistImplementation(String, IEnumerable<String>)
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    id: AddSongsToPlaylistImplementation
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Playlists\ConcretePlaylistHandler\PLSHandler.cs
    startLine: 12
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  syntax:
    content: protected override void AddSongsToPlaylistImplementation(string playlistFile, IEnumerable<string> newSongs)
    parameters:
    - id: playlistFile
      type: System.String
    - id: newSongs
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides Sub AddSongsToPlaylistImplementation(playlistFile As String, newSongs As IEnumerable(Of String))
  overridden: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  overload: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation*
  nameWithType.vb: PLSHandler.AddSongsToPlaylistImplementation(String, IEnumerable(Of String))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AddSongsToPlaylistImplementation(String, IEnumerable(Of String))
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetAmountOfItems(System.String)
  commentId: M:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetAmountOfItems(System.String)
  id: GetAmountOfItems(System.String)
  parent: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  langs:
  - csharp
  - vb
  name: GetAmountOfItems(String)
  nameWithType: PLSHandler.GetAmountOfItems(String)
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetAmountOfItems(System.String)
  type: Method
  source:
    id: GetAmountOfItems
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Playlists\ConcretePlaylistHandler\PLSHandler.cs
    startLine: 27
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  syntax:
    content: public int GetAmountOfItems(string playlistFile)
    parameters:
    - id: playlistFile
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function GetAmountOfItems(playlistFile As String) As Integer
  overload: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetAmountOfItems*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  langs:
  - csharp
  - vb
  name: DeleteSongsFromPlaylistImplementation(String, IEnumerable<String>)
  nameWithType: PLSHandler.DeleteSongsFromPlaylistImplementation(String, IEnumerable<String>)
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    id: DeleteSongsFromPlaylistImplementation
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Playlists\ConcretePlaylistHandler\PLSHandler.cs
    startLine: 58
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  syntax:
    content: protected override void DeleteSongsFromPlaylistImplementation(string playlistFile, IEnumerable<string> songsToDelete)
    parameters:
    - id: playlistFile
      type: System.String
    - id: songsToDelete
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides Sub DeleteSongsFromPlaylistImplementation(playlistFile As String, songsToDelete As IEnumerable(Of String))
  overridden: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  overload: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation*
  nameWithType.vb: PLSHandler.DeleteSongsFromPlaylistImplementation(String, IEnumerable(Of String))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: DeleteSongsFromPlaylistImplementation(String, IEnumerable(Of String))
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetSongsFromPlaylist(System.String)
  commentId: M:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetSongsFromPlaylist(System.String)
  id: GetSongsFromPlaylist(System.String)
  parent: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  langs:
  - csharp
  - vb
  name: GetSongsFromPlaylist(String)
  nameWithType: PLSHandler.GetSongsFromPlaylist(String)
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetSongsFromPlaylist(System.String)
  type: Method
  source:
    id: GetSongsFromPlaylist
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Playlists\ConcretePlaylistHandler\PLSHandler.cs
    startLine: 78
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  syntax:
    content: protected override Tuple<IEnumerable<string>, IEnumerable<string>> GetSongsFromPlaylist(string playlistFile)
    parameters:
    - id: playlistFile
      type: System.String
    return:
      type: System.Tuple{System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String}}
    content.vb: Protected Overrides Function GetSongsFromPlaylist(playlistFile As String) As Tuple(Of IEnumerable(Of String), IEnumerable(Of String))
  overridden: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String)
  overload: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetSongsFromPlaylist*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.CreatePlaylist(System.String)
  commentId: M:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.CreatePlaylist(System.String)
  id: CreatePlaylist(System.String)
  parent: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  langs:
  - csharp
  - vb
  name: CreatePlaylist(String)
  nameWithType: PLSHandler.CreatePlaylist(String)
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.CreatePlaylist(System.String)
  type: Method
  source:
    id: CreatePlaylist
    path: C:\Dev\Projects\Common\gryLibraryBuild\Submodules\gryLibrary\GRYLibrary\Core\Playlists\ConcretePlaylistHandler\PLSHandler.cs
    startLine: 98
  assemblies:
  - GRYLibrary
  namespace: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  syntax:
    content: public override void CreatePlaylist(string file)
    parameters:
    - id: file
      type: System.String
    content.vb: Public Overrides Sub CreatePlaylist(file As String)
  overridden: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.CreatePlaylist(System.String)
  overload: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.CreatePlaylist*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  commentId: N:GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  name: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  nameWithType: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  commentId: T:GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  parent: GRYLibrary.Core.Playlists
  name: AbstractPlaylistHandler
  nameWithType: AbstractPlaylistHandler
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.ExtensionsOfReadablePlaylists
  commentId: P:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.ExtensionsOfReadablePlaylists
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  name: ExtensionsOfReadablePlaylists
  nameWithType: AbstractPlaylistHandler.ExtensionsOfReadablePlaylists
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.ExtensionsOfReadablePlaylists
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.Encoding
  commentId: P:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.Encoding
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  name: Encoding
  nameWithType: AbstractPlaylistHandler.Encoding
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.Encoding
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AllowedFiletypesForMusicFiles
  commentId: P:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AllowedFiletypesForMusicFiles
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  name: AllowedFiletypesForMusicFiles
  nameWithType: AbstractPlaylistHandler.AllowedFiletypesForMusicFiles
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AllowedFiletypesForMusicFiles
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetConcretePlaylistHandler(System.String)
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetConcretePlaylistHandler(System.String)
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: GetConcretePlaylistHandler(String)
  nameWithType: AbstractPlaylistHandler.GetConcretePlaylistHandler(String)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetConcretePlaylistHandler(System.String)
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetConcretePlaylistHandler(System.String)
    name: GetConcretePlaylistHandler
    nameWithType: AbstractPlaylistHandler.GetConcretePlaylistHandler
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetConcretePlaylistHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetConcretePlaylistHandler(System.String)
    name: GetConcretePlaylistHandler
    nameWithType: AbstractPlaylistHandler.GetConcretePlaylistHandler
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetConcretePlaylistHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.Boolean,System.Boolean)
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.Boolean,System.Boolean)
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: GetSongsFromPlaylist(String, Boolean, Boolean)
  nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist(String, Boolean, Boolean)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.Boolean,System.Boolean)
    name: GetSongsFromPlaylist
    nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.Boolean,System.Boolean)
    name: GetSongsFromPlaylist
    nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.String,System.Boolean,System.Boolean)
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: GetSongsFromPlaylist(String, String, Boolean, Boolean)
  nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist(String, String, Boolean, Boolean)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.String,System.Boolean,System.Boolean)
    name: GetSongsFromPlaylist
    nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String,System.String,System.Boolean,System.Boolean)
    name: GetSongsFromPlaylist
    nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: AddSongsToPlaylist(String, IEnumerable<String>, Boolean)
  nameWithType: AbstractPlaylistHandler.AddSongsToPlaylist(String, IEnumerable<String>, Boolean)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist(System.String, System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  nameWithType.vb: AbstractPlaylistHandler.AddSongsToPlaylist(String, IEnumerable(Of String), Boolean)
  fullName.vb: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist(System.String, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  name.vb: AddSongsToPlaylist(String, IEnumerable(Of String), Boolean)
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
    name: AddSongsToPlaylist
    nameWithType: AbstractPlaylistHandler.AddSongsToPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
    name: AddSongsToPlaylist
    nameWithType: AbstractPlaylistHandler.AddSongsToPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: DeleteSongsFromPlaylist(String, IEnumerable<String>)
  nameWithType: AbstractPlaylistHandler.DeleteSongsFromPlaylist(String, IEnumerable<String>)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist(System.String, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: AbstractPlaylistHandler.DeleteSongsFromPlaylist(String, IEnumerable(Of String))
  fullName.vb: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: DeleteSongsFromPlaylist(String, IEnumerable(Of String))
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String})
    name: DeleteSongsFromPlaylist
    nameWithType: AbstractPlaylistHandler.DeleteSongsFromPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist(System.String,System.Collections.Generic.IEnumerable{System.String})
    name: DeleteSongsFromPlaylist
    nameWithType: AbstractPlaylistHandler.DeleteSongsFromPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsReadablePlaylist(System.String)
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsReadablePlaylist(System.String)
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: IsReadablePlaylist(String)
  nameWithType: AbstractPlaylistHandler.IsReadablePlaylist(String)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsReadablePlaylist(System.String)
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsReadablePlaylist(System.String)
    name: IsReadablePlaylist
    nameWithType: AbstractPlaylistHandler.IsReadablePlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsReadablePlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsReadablePlaylist(System.String)
    name: IsReadablePlaylist
    nameWithType: AbstractPlaylistHandler.IsReadablePlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsReadablePlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsAllowedAsPlaylistItem(System.String)
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsAllowedAsPlaylistItem(System.String)
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: IsAllowedAsPlaylistItem(String)
  nameWithType: AbstractPlaylistHandler.IsAllowedAsPlaylistItem(String)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsAllowedAsPlaylistItem(System.String)
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsAllowedAsPlaylistItem(System.String)
    name: IsAllowedAsPlaylistItem
    nameWithType: AbstractPlaylistHandler.IsAllowedAsPlaylistItem
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsAllowedAsPlaylistItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsAllowedAsPlaylistItem(System.String)
    name: IsAllowedAsPlaylistItem
    nameWithType: AbstractPlaylistHandler.IsAllowedAsPlaylistItem
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.IsAllowedAsPlaylistItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  name: ObjectIsEnumerable()
  nameWithType: Utilities.ObjectIsEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerable
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  name: ObjectToEnumerable()
  nameWithType: Utilities.ObjectToEnumerable()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
  name: ObjectToEnumerableGeneric<T>()
  nameWithType: Utilities.ObjectToEnumerableGeneric<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric<T>()
  nameWithType.vb: Utilities.ObjectToEnumerableGeneric(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric(Of T)()
  name.vb: ObjectToEnumerableGeneric(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1
    name: ObjectToEnumerableGeneric<T>
    nameWithType: Utilities.ObjectToEnumerableGeneric<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1
    name: ObjectToEnumerableGeneric(Of T)
    nameWithType: Utilities.ObjectToEnumerableGeneric(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsList
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  name: ObjectIsList()
  nameWithType: Utilities.ObjectIsList()
  fullName: GRYLibrary.Core.Utilities.ObjectIsList()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToList``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  name: ObjectToList<T>()
  nameWithType: Utilities.ObjectToList<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>()
  nameWithType.vb: Utilities.ObjectToList(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)()
  name.vb: ObjectToList(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsSet
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  name: ObjectIsSet()
  nameWithType: Utilities.ObjectIsSet()
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  name: ObjectIsKeyValuePair()
  nameWithType: Utilities.ObjectIsKeyValuePair()
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  name: ObjectToKeyValuePair<TKey, TValue>()
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)()
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToSet``1
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  name: ObjectToSet<T>()
  nameWithType: Utilities.ObjectToSet<T>()
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>()
  nameWithType.vb: Utilities.ObjectToSet(Of T)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)()
  name.vb: ObjectToSet(Of T)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectIsDictionary
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  name: ObjectIsDictionary()
  nameWithType: Utilities.ObjectIsDictionary()
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ObjectToDictionary``2
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  name: ObjectToDictionary<TKey, TValue>()
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>()
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>()
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)()
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)()
  name.vb: ObjectToDictionary(Of TKey, TValue)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.ToDynamic
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: Utilities.ToDynamic()
  fullName: GRYLibrary.Core.Utilities.ToDynamic()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GRYLibrary.Core.Utilities.DeepClone``1
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<PLSHandler>()
  nameWithType: Utilities.DeepClone<PLSHandler>()
  fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler>()
  nameWithType.vb: Utilities.DeepClone(Of PLSHandler)()
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler)()
  name.vb: DeepClone(Of PLSHandler)()
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone<PLSHandler>
    nameWithType: Utilities.DeepClone<PLSHandler>
    fullName: GRYLibrary.Core.Utilities.DeepClone<GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1
    name: DeepClone(Of PLSHandler)
    nameWithType: Utilities.DeepClone(Of PLSHandler)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  parent: GRYLibrary.Core.Utilities
  definition: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  name: NullSafeEquals(Object)
  nameWithType: Utilities.NullSafeEquals(Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GRYLibrary.Core.Playlists
  commentId: N:GRYLibrary.Core.Playlists
  name: GRYLibrary.Core.Playlists
  nameWithType: GRYLibrary.Core.Playlists
  fullName: GRYLibrary.Core.Playlists
- uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  isExternal: true
  name: ObjectIsEnumerable(Object)
  nameWithType: Utilities.ObjectIsEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsEnumerable(System.Object)
    name: ObjectIsEnumerable
    nameWithType: Utilities.ObjectIsEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectIsEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities
  commentId: T:GRYLibrary.Core.Utilities
  parent: GRYLibrary.Core
  name: Utilities
  nameWithType: Utilities
  fullName: GRYLibrary.Core.Utilities
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  isExternal: true
  name: ObjectToEnumerable(Object)
  nameWithType: Utilities.ObjectToEnumerable(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerable(System.Object)
    name: ObjectToEnumerable
    nameWithType: Utilities.ObjectToEnumerable
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
  isExternal: true
  name: ObjectToEnumerableGeneric<T>(Object)
  nameWithType: Utilities.ObjectToEnumerableGeneric<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToEnumerableGeneric(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric(Of T)(System.Object)
  name.vb: ObjectToEnumerableGeneric(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
    name: ObjectToEnumerableGeneric<T>
    nameWithType: Utilities.ObjectToEnumerableGeneric<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric``1(System.Object)
    name: ObjectToEnumerableGeneric(Of T)
    nameWithType: Utilities.ObjectToEnumerableGeneric(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToEnumerableGeneric(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  isExternal: true
  name: ObjectIsList(Object)
  nameWithType: Utilities.ObjectIsList(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsList(System.Object)
    name: ObjectIsList
    nameWithType: Utilities.ObjectIsList
    fullName: GRYLibrary.Core.Utilities.ObjectIsList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
  isExternal: true
  name: ObjectToList<T>(Object)
  nameWithType: Utilities.ObjectToList<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToList<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToList(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToList(Of T)(System.Object)
  name.vb: ObjectToList(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList<T>
    nameWithType: Utilities.ObjectToList<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToList``1(System.Object)
    name: ObjectToList(Of T)
    nameWithType: Utilities.ObjectToList(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  isExternal: true
  name: ObjectIsSet(Object)
  nameWithType: Utilities.ObjectIsSet(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsSet(System.Object)
    name: ObjectIsSet
    nameWithType: Utilities.ObjectIsSet
    fullName: GRYLibrary.Core.Utilities.ObjectIsSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  isExternal: true
  name: ObjectIsKeyValuePair(Object)
  nameWithType: Utilities.ObjectIsKeyValuePair(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair(System.Object)
    name: ObjectIsKeyValuePair
    nameWithType: Utilities.ObjectIsKeyValuePair
    fullName: GRYLibrary.Core.Utilities.ObjectIsKeyValuePair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
  isExternal: true
  name: ObjectToKeyValuePair<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToKeyValuePair(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)(System.Object)
  name.vb: ObjectToKeyValuePair(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair<TKey, TValue>
    nameWithType: Utilities.ObjectToKeyValuePair<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToKeyValuePair``2(System.Object)
    name: ObjectToKeyValuePair(Of TKey, TValue)
    nameWithType: Utilities.ObjectToKeyValuePair(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToKeyValuePair(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
  isExternal: true
  name: ObjectToSet<T>(Object)
  nameWithType: Utilities.ObjectToSet<T>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>(System.Object)
  nameWithType.vb: Utilities.ObjectToSet(Of T)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToSet(Of T)(System.Object)
  name.vb: ObjectToSet(Of T)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet<T>
    nameWithType: Utilities.ObjectToSet<T>
    fullName: GRYLibrary.Core.Utilities.ObjectToSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToSet``1(System.Object)
    name: ObjectToSet(Of T)
    nameWithType: Utilities.ObjectToSet(Of T)
    fullName: GRYLibrary.Core.Utilities.ObjectToSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  isExternal: true
  name: ObjectIsDictionary(Object)
  nameWithType: Utilities.ObjectIsDictionary(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectIsDictionary(System.Object)
    name: ObjectIsDictionary
    nameWithType: Utilities.ObjectIsDictionary
    fullName: GRYLibrary.Core.Utilities.ObjectIsDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
  isExternal: true
  name: ObjectToDictionary<TKey, TValue>(Object)
  nameWithType: Utilities.ObjectToDictionary<TKey, TValue>(Object)
  fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>(System.Object)
  nameWithType.vb: Utilities.ObjectToDictionary(Of TKey, TValue)(Object)
  fullName.vb: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)(System.Object)
  name.vb: ObjectToDictionary(Of TKey, TValue)(Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary<TKey, TValue>
    nameWithType: Utilities.ObjectToDictionary<TKey, TValue>
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary<TKey, TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ObjectToDictionary``2(System.Object)
    name: ObjectToDictionary(Of TKey, TValue)
    nameWithType: Utilities.ObjectToDictionary(Of TKey, TValue)
    fullName: GRYLibrary.Core.Utilities.ObjectToDictionary(Of TKey, TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  commentId: M:GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: Utilities.ToDynamic(Object)
  fullName: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: Utilities.ToDynamic
    fullName: GRYLibrary.Core.Utilities.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
  commentId: M:GRYLibrary.Core.Utilities.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: Utilities.DeepClone<T>(T)
  fullName: GRYLibrary.Core.Utilities.DeepClone<T>(T)
  nameWithType.vb: Utilities.DeepClone(Of T)(T)
  fullName.vb: GRYLibrary.Core.Utilities.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: Utilities.DeepClone<T>
    fullName: GRYLibrary.Core.Utilities.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: Utilities.DeepClone(Of T)
    fullName: GRYLibrary.Core.Utilities.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  commentId: M:GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
  isExternal: true
  name: NullSafeEquals(Object, Object)
  nameWithType: Utilities.NullSafeEquals(Object, Object)
  fullName: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object, System.Object)
  spec.csharp:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Utilities.NullSafeEquals(System.Object,System.Object)
    name: NullSafeEquals
    nameWithType: Utilities.NullSafeEquals
    fullName: GRYLibrary.Core.Utilities.NullSafeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core
  commentId: N:GRYLibrary.Core
  name: GRYLibrary.Core
  nameWithType: GRYLibrary.Core
  fullName: GRYLibrary.Core
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.Instance*
  commentId: Overload:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.Instance
  name: Instance
  nameWithType: PLSHandler.Instance
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.Instance
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  commentId: T:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
  parent: GRYLibrary.Core.Playlists.ConcretePlaylistHandler
  name: PLSHandler
  nameWithType: PLSHandler
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: AddSongsToPlaylistImplementation(String, IEnumerable<String>)
  nameWithType: AbstractPlaylistHandler.AddSongsToPlaylistImplementation(String, IEnumerable<String>)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation(System.String, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: AbstractPlaylistHandler.AddSongsToPlaylistImplementation(String, IEnumerable(Of String))
  fullName.vb: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AddSongsToPlaylistImplementation(String, IEnumerable(Of String))
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
    name: AddSongsToPlaylistImplementation
    nameWithType: AbstractPlaylistHandler.AddSongsToPlaylistImplementation
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
    name: AddSongsToPlaylistImplementation
    nameWithType: AbstractPlaylistHandler.AddSongsToPlaylistImplementation
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.AddSongsToPlaylistImplementation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation*
  commentId: Overload:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation
  name: AddSongsToPlaylistImplementation
  nameWithType: PLSHandler.AddSongsToPlaylistImplementation
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.AddSongsToPlaylistImplementation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetAmountOfItems*
  commentId: Overload:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetAmountOfItems
  name: GetAmountOfItems
  nameWithType: PLSHandler.GetAmountOfItems
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetAmountOfItems
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: DeleteSongsFromPlaylistImplementation(String, IEnumerable<String>)
  nameWithType: AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(String, IEnumerable<String>)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(System.String, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(String, IEnumerable(Of String))
  fullName.vb: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: DeleteSongsFromPlaylistImplementation(String, IEnumerable(Of String))
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
    name: DeleteSongsFromPlaylistImplementation
    nameWithType: AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation(System.String,System.Collections.Generic.IEnumerable{System.String})
    name: DeleteSongsFromPlaylistImplementation
    nameWithType: AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.DeleteSongsFromPlaylistImplementation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation*
  commentId: Overload:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation
  name: DeleteSongsFromPlaylistImplementation
  nameWithType: PLSHandler.DeleteSongsFromPlaylistImplementation
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.DeleteSongsFromPlaylistImplementation
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String)
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String)
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: GetSongsFromPlaylist(String)
  nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist(String)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String)
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String)
    name: GetSongsFromPlaylist
    nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist(System.String)
    name: GetSongsFromPlaylist
    nameWithType: AbstractPlaylistHandler.GetSongsFromPlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.GetSongsFromPlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetSongsFromPlaylist*
  commentId: Overload:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetSongsFromPlaylist
  name: GetSongsFromPlaylist
  nameWithType: PLSHandler.GetSongsFromPlaylist
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.GetSongsFromPlaylist
- uid: System.Tuple{System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Tuple{System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String}}
  parent: System
  definition: System.Tuple`2
  name: Tuple<IEnumerable<String>, IEnumerable<String>>
  nameWithType: Tuple<IEnumerable<String>, IEnumerable<String>>
  fullName: System.Tuple<System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>>
  nameWithType.vb: Tuple(Of IEnumerable(Of String), IEnumerable(Of String))
  fullName.vb: System.Tuple(Of System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Tuple(Of IEnumerable(Of String), IEnumerable(Of String))
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.CreatePlaylist(System.String)
  commentId: M:GRYLibrary.Core.Playlists.AbstractPlaylistHandler.CreatePlaylist(System.String)
  parent: GRYLibrary.Core.Playlists.AbstractPlaylistHandler
  isExternal: true
  name: CreatePlaylist(String)
  nameWithType: AbstractPlaylistHandler.CreatePlaylist(String)
  fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.CreatePlaylist(System.String)
  spec.csharp:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.CreatePlaylist(System.String)
    name: CreatePlaylist
    nameWithType: AbstractPlaylistHandler.CreatePlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.CreatePlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.CreatePlaylist(System.String)
    name: CreatePlaylist
    nameWithType: AbstractPlaylistHandler.CreatePlaylist
    fullName: GRYLibrary.Core.Playlists.AbstractPlaylistHandler.CreatePlaylist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.CreatePlaylist*
  commentId: Overload:GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.CreatePlaylist
  name: CreatePlaylist
  nameWithType: PLSHandler.CreatePlaylist
  fullName: GRYLibrary.Core.Playlists.ConcretePlaylistHandler.PLSHandler.CreatePlaylist
